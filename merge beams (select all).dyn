{
  "Uuid": "03c5a65d-8cfc-47b3-b780-6d8e52c9901f",
  "IsCustomNode": false,
  "Description": "This Script merges all model collinear Beams",
  "Name": "merge beams (select all)",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [
    {
      "Id": "10b835d3cd3c4edc8b604312ab165e44",
      "Name": "  Select Beam Model Elements",
      "Type": "selection",
      "Type2": "hostSelection",
      "Value": "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d620,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d626,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d627,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d62c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d630,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d632,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d636,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d63c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d63f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d640,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d641,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d643,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d644,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d646,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d649,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d64a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d650,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d653,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d654,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d656,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d658,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d660,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d661,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d662,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d663,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d666,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d667,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d668,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d66c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d66f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d674,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d67b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d67d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d67e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d680,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d683,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d706,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d70b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d70d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d70e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d70f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d710,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d717,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d719,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d71b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d71e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d720,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d727,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d728,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d729,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d72a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d72b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d72e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d730,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d733,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d737,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d738,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d73a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d73d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d73f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d742,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d749,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d74a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d751,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d753,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d757,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d762,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d763,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d765,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d767,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d76b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d76c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7da,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7db,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7dc,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7de,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7df,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e0,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e3,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e5,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e6,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e7,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e8,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e9,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7ee,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7ef,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7f0,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7f2,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7f4,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7f5,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7f8,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7fb,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7fc,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7fd,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7fe,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d800,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d802,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d803,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d804,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d805,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d806,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d807,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d808,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d80b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d80e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d80f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d810,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d813,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d814,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d815,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d835,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d836,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d837,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d838,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d839,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d83a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d83b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d83c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d83d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d83e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d83f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d840,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d841,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d842,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d843,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d844,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d845,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d846,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d847,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d848,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d849,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d84a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d84b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d84c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d84d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d84e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d84f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d850,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d851,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d852,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d853,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8b4,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8b5,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8b6,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8b7,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8b8,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8b9,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8ba,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8bb,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8bc,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8bd,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8be,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8bf,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c0,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c1,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c2,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c3,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c4,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c5,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c6,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c7,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c8,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c9,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8ca,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8cb,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8cc,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8cd,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8ce,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8cf,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8d0,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8d1,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8d2,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8fa,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8fb,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8fc,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8fd,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8fe,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8ff,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d900,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d901,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d902,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d903,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d904,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d905,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d906,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d907,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d908,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d909,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d90a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d90b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d90c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d90d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d90e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d90f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d910,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d911,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d912,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d913,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d914,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d915,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d916,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d917,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d918,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d919,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d91a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d91b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d91c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d91d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d91e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d91f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d920,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d921,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d922,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d923,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d924,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d925,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d926,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d927,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d928,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d929,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d92a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d92b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d92c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d92d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d92e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d92f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d930,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d931,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d932,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d933,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d934,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d935,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d936,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d937,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d938,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d939,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d93a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d93b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d93c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d93d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d93e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d93f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d940,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d941,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d942,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d943,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d944,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d945,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d946,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d947,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d948,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d949,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d94a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d94b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d94c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d94d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d94e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d94f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d950,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d951,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d952,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d953,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d954,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d955,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d956,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d95a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d95c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d95d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d95e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d960,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9d4,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9d6,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9d7,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9d8,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9d9,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9da,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9db,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9dc,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9dd,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9de,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9df,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e0,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e1,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e2,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e3,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e4,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e5,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e6,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e7,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e8,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e9,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9ea,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9eb,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9ec,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9ed,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9ee,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9ef,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f0,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f1,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f2,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f3,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f4,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f5,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f6,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f7,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f8,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f9,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9fa,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9fb,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9fc,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9fd,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9fe,0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9ff,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da00,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da01,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da02,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da03,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da04,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da05,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da06,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da07,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da08,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da09,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da0a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da0b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da0c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da0d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da0e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da0f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da10,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da11,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da12,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da13,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da14,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da15,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da16,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da17,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da18,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da19,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da1a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da1b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da1c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da1d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da1e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da1f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da20,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da21,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da22,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da23,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da24,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da25,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da26,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da27,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da28,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da29,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da2a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da2b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da2c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da2d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da2e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da2f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da30,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da31,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da32,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da33,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da34,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da35,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da36,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da37,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da38,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da39,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da3a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da3b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da3c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da3d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da3e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da3f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da40,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da41,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da42,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da43,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da44,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da45,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da46,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da47,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da48,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da49,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da4a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da4b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da4c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da4d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da4e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da4f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da50,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da51,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da52,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da53,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da54,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da55,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da56,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da57,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da58,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da59,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da5a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da5b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da5c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da5d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da5e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da5f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da60,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da61,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da62,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da63,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da64,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da65,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da66,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da67,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da68,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da69,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da6a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da6b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da6c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da6d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da6e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da6f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da70,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da71,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da72,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da73,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da74,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da75,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da76,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da77,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da78,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da79,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da7a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da7b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da7c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da7d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da7e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da7f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da80,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da81,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da82,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da83,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da84,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da85,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da86,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da87,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da88,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da89,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da8a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da8b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da8c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da8d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da8e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da8f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da90,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da91,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da92,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da93,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da94,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da95,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da96,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da97,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da98,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da99,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da9a,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da9b,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da9c,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da9d,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da9e,0f258abe-38f9-4670-a170-3cc42b8bf095-0009da9f,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa0,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa1,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa2,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa3,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa4,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa5,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa6,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa7,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa8,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa9,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daaa,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daab,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daac,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daad,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daae,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daaf,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab0,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab1,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab2,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab3,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab4,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab5,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab6,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab7,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab8,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab9,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daba,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dabb,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dabc,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dabd,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dabe,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dabf,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac0,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac1,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac2,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac3,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac4,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac5,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac6,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac7,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac8,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac9,0f258abe-38f9-4670-a170-3cc42b8bf095-0009daca,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dacb,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dacc,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dacd,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dace,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dacf,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad0,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad1,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad2,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad3,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad4,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad5,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad6,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad7,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad8,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad9,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dada,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dadb,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dadc,0f258abe-38f9-4670-a170-3cc42b8bf095-0009dadd,bfddad73-90ac-4502-bbe4-fd90e530168b-000a0c09",
      "Description": "Select multiple elements from the Revit document filtered by Category.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.ComboNodes.DSModelElementsByCategorySelection, DSRevitNodesUI",
      "SelectedIndex": 596,
      "SelectedString": "OST_StructuralFraming",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d620",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d626",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d627",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d62c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d630",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d632",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d636",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d63c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d63f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d640",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d641",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d643",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d644",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d646",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d649",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d64a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d650",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d653",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d654",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d656",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d658",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d660",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d661",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d662",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d663",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d666",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d667",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d668",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d66c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d66f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d674",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d67b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d67d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d67e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d680",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d683",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d706",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d70b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d70d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d70e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d70f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d710",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d717",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d719",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d71b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d71e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d720",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d727",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d728",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d729",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d72a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d72b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d72e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d730",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d733",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d737",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d738",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d73a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d73d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d73f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d742",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d749",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d74a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d751",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d753",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d757",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d762",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d763",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d765",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d767",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d76b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d76c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7da",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7db",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7dc",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7de",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7df",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e0",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e3",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e5",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e6",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e7",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e8",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7e9",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7ee",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7ef",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7f0",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7f2",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7f4",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7f5",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7f8",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7fb",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7fc",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7fd",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d7fe",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d800",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d802",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d803",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d804",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d805",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d806",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d807",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d808",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d80b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d80e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d80f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d810",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d813",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d814",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d815",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d835",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d836",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d837",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d838",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d839",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d83a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d83b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d83c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d83d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d83e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d83f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d840",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d841",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d842",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d843",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d844",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d845",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d846",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d847",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d848",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d849",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d84a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d84b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d84c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d84d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d84e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d84f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d850",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d851",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d852",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d853",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8b4",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8b5",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8b6",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8b7",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8b8",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8b9",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8ba",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8bb",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8bc",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8bd",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8be",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8bf",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c0",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c1",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c2",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c3",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c4",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c5",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c6",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c7",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c8",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8c9",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8ca",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8cb",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8cc",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8cd",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8ce",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8cf",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8d0",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8d1",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8d2",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8fa",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8fb",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8fc",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8fd",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8fe",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d8ff",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d900",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d901",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d902",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d903",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d904",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d905",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d906",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d907",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d908",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d909",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d90a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d90b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d90c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d90d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d90e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d90f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d910",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d911",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d912",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d913",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d914",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d915",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d916",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d917",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d918",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d919",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d91a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d91b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d91c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d91d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d91e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d91f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d920",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d921",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d922",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d923",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d924",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d925",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d926",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d927",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d928",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d929",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d92a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d92b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d92c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d92d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d92e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d92f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d930",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d931",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d932",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d933",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d934",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d935",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d936",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d937",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d938",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d939",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d93a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d93b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d93c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d93d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d93e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d93f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d940",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d941",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d942",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d943",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d944",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d945",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d946",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d947",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d948",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d949",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d94a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d94b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d94c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d94d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d94e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d94f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d950",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d951",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d952",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d953",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d954",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d955",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d956",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d95a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d95c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d95d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d95e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d960",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9d4",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9d6",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9d7",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9d8",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9d9",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9da",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9db",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9dc",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9dd",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9de",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9df",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e0",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e1",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e2",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e3",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e4",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e5",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e6",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e7",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e8",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9e9",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9ea",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9eb",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9ec",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9ed",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9ee",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9ef",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f0",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f1",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f2",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f3",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f4",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f5",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f6",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f7",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f8",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9f9",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9fa",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9fb",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9fc",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9fd",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9fe",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009d9ff",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da00",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da01",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da02",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da03",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da04",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da05",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da06",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da07",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da08",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da09",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da0a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da0b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da0c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da0d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da0e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da0f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da10",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da11",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da12",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da13",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da14",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da15",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da16",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da17",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da18",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da19",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da1a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da1b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da1c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da1d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da1e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da1f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da20",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da21",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da22",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da23",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da24",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da25",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da26",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da27",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da28",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da29",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da2a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da2b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da2c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da2d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da2e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da2f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da30",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da31",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da32",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da33",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da34",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da35",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da36",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da37",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da38",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da39",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da3a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da3b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da3c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da3d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da3e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da3f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da40",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da41",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da42",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da43",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da44",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da45",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da46",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da47",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da48",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da49",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da4a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da4b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da4c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da4d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da4e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da4f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da50",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da51",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da52",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da53",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da54",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da55",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da56",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da57",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da58",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da59",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da5a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da5b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da5c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da5d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da5e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da5f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da60",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da61",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da62",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da63",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da64",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da65",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da66",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da67",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da68",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da69",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da6a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da6b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da6c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da6d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da6e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da6f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da70",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da71",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da72",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da73",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da74",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da75",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da76",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da77",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da78",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da79",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da7a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da7b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da7c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da7d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da7e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da7f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da80",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da81",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da82",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da83",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da84",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da85",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da86",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da87",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da88",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da89",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da8a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da8b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da8c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da8d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da8e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da8f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da90",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da91",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da92",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da93",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da94",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da95",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da96",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da97",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da98",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da99",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da9a",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da9b",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da9c",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da9d",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da9e",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009da9f",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa0",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa1",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa2",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa3",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa4",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa5",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa6",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa7",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa8",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daa9",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daaa",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daab",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daac",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daad",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daae",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daaf",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab0",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab1",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab2",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab3",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab4",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab5",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab6",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab7",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab8",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dab9",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daba",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dabb",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dabc",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dabd",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dabe",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dabf",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac0",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac1",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac2",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac3",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac4",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac5",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac6",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac7",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac8",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dac9",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009daca",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dacb",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dacc",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dacd",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dace",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dacf",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad0",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad1",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad2",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad3",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad4",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad5",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad6",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad7",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad8",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dad9",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dada",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dadb",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dadc",
        "0f258abe-38f9-4670-a170-3cc42b8bf095-0009dadd",
        "bfddad73-90ac-4502-bbe4-fd90e530168b-000a0c09"
      ],
      "Id": "10b835d3cd3c4edc8b604312ab165e44",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0cb752704c6a43158f822af8e170125c",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select multiple elements from the Revit document filtered by Category."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a2b47f6d526b48c89a45cd49f523ffe5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f4f68b492e524dfeb9e9413dad40fa90",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "afb4a88d7a8142178727d2530e1470fd",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "afd60cfac41c40fbbd236c1e1b111358",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7f44e8f570a4fff9affc2024e5ce67a",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 38.0,
      "Id": "a09ad44a084a4f0898c699f6a0842261",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "307f81e7a8454c6e88060a8d32fce384",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "73a23042388740249ec541547b56a085",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "97c2dd486264413797857b9e87339a80",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a208e12c18424991a4e68ba7f3fd0be4",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3d5dee0f9b64790802f7d8dc4bc9f79",
          "Name": "Geometry",
          "Description": "Location Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Replication": "Auto",
      "Description": "Get an existing element's location\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8f63b8aa14214c28a1ce84d09f0b3644",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8171f9f9f2c7436cb5ac7305b7cba0ca",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "876916c2c871451b9722b0186aed1f4f",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "889deda7a9e04680aa242eb1bf5c2267",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b70d3ac2091440acbbd15aa1b9209832",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2806804560744615bfc93f63b45c7f53",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e181805bebe7424ab74dc0fbd5e1c917",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "da3aa757ff5943038a5e6b294226e11e",
          "Name": "line",
          "Description": "Autodesk.DesignScript.Geometry.Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a98ecbab6a245d0958639611c843a55",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.Direction",
      "Replication": "Auto",
      "Description": "The direction of the Curve\n\nLine.Direction: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "55e984775eea4ce7a603c3a562a79a84",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "ccef1cbe3cfa4d59b81e8785fc0d7b7a",
          "Name": "lenght",
          "Description": "lenght",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b445a9758d5c4ed38e375eab3638f30b",
          "Name": "width",
          "Description": "width",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bb9f2e034ec49b6b9eab07b96dd44b6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "lenght<width;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1630ad9ab400430ea89d2b31acfe9e2a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4d1f527bedcc402b821e4ddccfeab757",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c9cd316999a4837bbe1367983ff630e",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Y",
      "Replication": "Auto",
      "Description": "Get the Y value of a vector.\n\nVector.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "fb16410027ca43a3b34a606f312033d0",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cdea975f763d4bd18666bbe70bea928b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "230;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "db9882867865486c8fec77d64bd9d2b7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b364290e47834918907c32da91e724a0",
          "Name": "number",
          "Description": "Number to get absolute value from\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cea00a2e11d4fbb8446343a9d865cfc",
          "Name": "number",
          "Description": "Absolute value of the number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Abs@double",
      "Replication": "Auto",
      "Description": "Finds the absolute value of a number.\n\nMath.Abs (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d7a5c7a6a67643d2972ab9d8ac16184e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4b9f6d1b07c74e83974e4daff1707fd6",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7d13a3c964ec437d8e4c226a718167d1",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f89213afe6914ab7bca08ea7921ed9a4",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3b077da233b46e9bfd94ae9c8e06aa7",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "11f163ef374946eaa9992963b4990cb9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ca65dff2cd024d6c986aed7b89dcbcc1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8b36520b67b459292a0c685e5c49260",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c16035ae4d9740078084963042d30d5b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5d0ce9f718334fdfb2de93818fa069b1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed6d4de59ecf4688ac20c675efeda858",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1334e504361d4cd3b27e07f02a8dc95d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8c223d73276d41a2b46fb80d9c084110",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b99d90529cad48e4b084edd3c557b668",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83b511ebb8d24bc0a5c3789009aed3c5",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8cfa1e3ab37549c3ab463fd3d905928e",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "63c8a65fa0994ea79519a412511836ca",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2c9782ea92af4e53825c2d905635dc08",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97a05d7cd9134280ad8569cddc122708",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Round@double",
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "14a50943441b4e4b9db38f85acca77f6",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "5f9d44bddc4c4e06b721c584f3de2e8c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e3caa5d8b064e68b038339a5cacd821",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "x/100;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "360de54b08e2407c9e8b2fa8171dd64f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "34af5008813d49f9b175282327cdfa73",
          "Name": "number",
          "Description": "Number to round down\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02f50deb8a064d87832beb815fe2d4f3",
          "Name": "int",
          "Description": "First integer smaller than the number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Floor@double",
      "Replication": "Auto",
      "Description": "Returns the first integer smaller than the number.\n\nMath.Floor (number: double): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b454a56a7efd41e791c2cb380542c84a",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "6cf41e9df0bb451392fc5773384799f1",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "256774ce63794e17b130ef399b20373a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "x*100;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "4cb1c09afbfa4e43a4dd3ae34e22f443",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "9d9474eb7dc647d78756b2cce90e102d",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf118dd825bd46c88cf800c7e62751e2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "x*100;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "495e225622c54a2cbb2188f9d8b89fd9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3b215e775818475486beaa2acc44a5a0",
          "Name": "number",
          "Description": "Number to round down\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d6e390c1c4ad40e0a04c9df617f99411",
          "Name": "int",
          "Description": "First integer smaller than the number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Floor@double",
      "Replication": "Auto",
      "Description": "Returns the first integer smaller than the number.\n\nMath.Floor (number: double): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "4b2e89f3596a466bbf01b3db4868d583",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "381a232e88e344c2a812537ed7edff35",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ddc47d2d0104a2896a63e0a79e44b91",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "x/100;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "17e669f54a814a7594ed993d194198b1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8b4e8e813ad942ed8b937b36f61cb250",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abc852f207cd417ea7aecbc5a289b3a4",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Round@double",
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b1363073462545aba1bd92a10988fbbc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6fb482f0def74ea8b271fcc96639a7db",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f500fb1d8561487e93b2133b4741f6ad",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25a528bbd85a4d2c9a19d61d287984c1",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6f9447b03a248468120ef89f5bc92ac",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "67701671991246b0b03f02ae3bfed4b1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ab53b2845adf4974b3dca564842e6c96",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e034f23e4b9049acaff37457b8a7aedb",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5c0b2fc1ac7f443aafe6b947492ddd9e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3ad5241970e3417e88e33ff3cfac8333",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7f488f11a1e64335b6904f95970d5953",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22d75f1ef667408ba0452de0f256a5da",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a75122e8a7494db68a548f424cbeaf7d",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f3443f7d54ee4ee68053841ed7269dce",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1dd8a61608a9484bbac1160e9ff87bb3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7e82ea1f8c1946e1bc5b0a72e8a1b807",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b148884c7d744d9ae30ed8cee7f539d",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e665e099dcb40b792277acf5ea6f149",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f8d4892509e348db8c912b64535791d1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a974d33d2e5545ad86159f8024f921e7",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb383191731643ae90db418bda0759ae",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08f612fb37f845b397115404adb28474",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "72791b7a40ab4e078e0129dd4238f529",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0a8874193e254c50bbd60f896a04ab19",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b0e3fe578d7441eb4539ddf6601d5ae",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "486182fe1d9a419886bb92320fa79eef",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2c83d558334e468eb00d05efd0ed876d",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f792b6d60ec4095b7b986eed0ab4718",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dfda58298b4b479192bff6dfbc71f551",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1632812bf9ef4158a10a965824c4aaa0",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e869b8f0fae4d8cbc276aecaacb5a2e",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "43330608426f474295dd0f33fc942d74",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3400050794064fb9a44f6f0d3d1913ca",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d580875bc654c1d94bc22c06c0696a1",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1270f1c832584a8583b62f469ef8c6fa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "58f027b40227480ea4304101fad2e3f3",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9a67d70b1e4448c84ce0ef482fccbd4",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9b3b342ae8c0498cbfe33c83df210619",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "de0b4e2c18254e7e9db86c7aafee4772",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe5b66e8f3a245cf93ab9b38c316feea",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "38269870dc8a48ae9d2b222c201ff72f",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "fd22a0d1f00b49198eb09e32a90a5a13",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8cd05ff8339e4a1fb3d78d82a8fa64f5",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b9372c25e97443ccad950545623c3fe1",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1c4787a447d4ec283a66eb806300990",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "13e2d6cea2ea4ab0a4e7aaa47c68be73",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "3af3ffd6b0954d8c84714ee9983417b8",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a2a5506e6d204ac6be8f818ab49996b4",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0d4cfa38d0cf417c8c839812e7755b28",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "20328956d9fd4d6aaae84e54039c024a",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "fc1208176e5148758484f03729e5e810",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0bb628e4b3654902ab4ef30b94749395",
          "Name": "curve",
          "Description": "The curve which defines the center line of the beam.\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4ad86650d964aecbac6647ed25105e0",
          "Name": "level",
          "Description": "The level with which you'd like the beam to be associated.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f8534654bee4d39868e20e7839e5945",
          "Name": "structuralFramingType",
          "Description": "The structural framing type representing the beam.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f0aa034a29943f2a40f263fc59d7961",
          "Name": "StructuralFraming",
          "Description": "StructuralFraming",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.StructuralFraming.BeamByCurve@Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Level,Revit.Elements.FamilyType",
      "Replication": "Longest",
      "Description": "Create a beam.\n\nStructuralFraming.BeamByCurve (curve: Curve, level: Level, structuralFramingType: FamilyType): StructuralFraming"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "462aab1014414bbfa0de54e7f568cd3f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "32e2e68cdb794a9db20f46129d11d5ea",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7650a44cf7043e591ddc9addae0a544",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d61b8df70a1b4eaa9162c050b6820f9a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "09339bab0c6744c3a2616ec9ea3a7c6f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d32b437267e349469e64077c6614a32c",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "658599b14d824d6096a048f861800c23",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b03229bbfb124588b70a03cdc0ea5085",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "132bed7f8afd4a62a731dee1fb9c4d71",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ab65eb1f9fcf4a87807f3e1ff48e5f7d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"z Justification\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e10f4e2c242e48bcbb24cb8fee815328",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "115fd28b5c8543e6b46fd7a8ac7b7548",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "723531c3a37848b0897e500cff07b4f1",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "046a1464109d4440b4d13d51131cd601",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "7733e10fa22f48d1a2b0b5f404a33ec0",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e308598b8b674354b6cec7f0725f5d1d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "false;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0ad43ff10a4849a1ad2fdc5daf6cf50f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5b92788ec3284e9ba3ea3e2a83d8705a",
          "Name": "curve",
          "Description": "The curve which defines the center line of the beam.\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca95e20550494b4a8890ee5da79c06d6",
          "Name": "level",
          "Description": "The level with which you'd like the beam to be associated.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "954bbf0d2ff94fe9bd45489cbdb10ba1",
          "Name": "structuralFramingType",
          "Description": "The structural framing type representing the beam.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02f94c782a0345f5bdfd5d2eab5bc688",
          "Name": "StructuralFraming",
          "Description": "StructuralFraming",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.StructuralFraming.BeamByCurve@Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Level,Revit.Elements.FamilyType",
      "Replication": "Longest",
      "Description": "Create a beam.\n\nStructuralFraming.BeamByCurve (curve: Curve, level: Level, structuralFramingType: FamilyType): StructuralFraming"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "9d94042232444f65b4eb9e95079ebe71",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "00a4b1cc2c6a45d0bff53974481a4624",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09cb728b74024f239bca00af5560e73c",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "579a84be646d4b34bd7e0688d8eb4a2b",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "3d365cf8d00b40e8aaef73e96cc19ec3",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "d0d73d318f5f445f8eed05f4ddd64979",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e37ba8e9622a4cffb53ef3cbe3bc79ab",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2a0e77c0b58c4e27bac2f1ebf4c37e2e",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "073dd8774ec8407e9bd77581d8d0ac79",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "7771d0ff297c4775a5c3e75dfb1ed67c",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "9a24561bb0a744618b095a96a8d5e2c0",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d14d8bb36e634f1882aa9c8d281b4cfb",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e8f78f968b4b4a97b5452a8578f38d44",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e45cd7cd588400b9d023826232a798b",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8587ae897f3447c3bf7c1217c20910df",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0735bc48356142039cb6467b63cdccd1",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f26bb200e284e24977b2d669c84e710",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eda59c9613464f87ae49e4b381e8047a",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d62823fa635a48d7ba9590bc052995b5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4a102220f10a4d16a23e633b3db944a9",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b111d5f2415a4466a9f9c01e5e53b3a6",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12996f37e714418ea593e5978f23014d",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e8a2b9316adc4564bc2e8aa237d2bec5",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4dd0e352c51f49f59cfd6a478390bfa5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc9cb2d5a1434dff8e6a4723500fbd44",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1;\n-1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6119ea7d8afc4d2aa871228c1bdd0102",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bf89506157ca4bccb2ed26807fb0bc28",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "77a356254b6946b687fedd69234ea222",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ced03672d8624e63bb4716ae93b2289d",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f26a71fdbc2c43acbc0b65de38003449",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c23750954941408a815eabdd860add0f",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fff84aba00aa41bf830878236b6dea35",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "067b2f57ebbd470a8f178e3dd3557543",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8da62648524f4ebca9a8943d9986ddf3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e7f62d8e21c245b9a4e64eb220068fc4",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "86a09114b5e04c4189d6bfee1eacfd00",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb35584f9ef045918ff1b19b827dda9a",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f034da0181a04cfbaf0271f178c9532b",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0fa0a7402f794975a79955409268c333",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "49e87aca90a6402ca3ebcf0a2425ce21",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f17d642541a84484bfcd61d670dde045",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f492ab939c984060888029ef93c5eb54",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0030efb1d2bd4a1498c1385880a35f42",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "4fcc9a6d5e0c4c1eb15591c253c7273a",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2cab48113fdb4e8b82153e6722ef068a",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb9adb4ec1a04609b7c13a34f308d568",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9a52fed13c1d448caee74b49a7690b44",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b47f751e4d884804802ba84789c14ba9",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b39af3a5998405c9fae3f6d1e7ae61f",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "78ccc0cf37e04e95916051fc5b799812",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "859460931a0543c3b8dc76d89100a98a",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "901129a10e1c417cb20c39f78a4faa7c",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "286fa232c5a94828860bf6c1d77a206b",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc671a611a0d41a28bca97e701faccd0",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "61b05571a2c940da911a21618b2edff2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "afc352e431264f14909e4a35da28943c",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c488eb33f234bbfaffce5d407ace8ba",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "33bf80b320424f7197662eed97f893d4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "96fe6dc1d5ab437cb55f679b1d3e970c",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "76102c3d475d45cda47f592cfc67fb86",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7119ceadd80247ce8d1256d187ae2094",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2cd212fd58aa4cc988605fbe6f480010",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c0a662e48a1a474290a7f12a4693e363",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "15fd904f16754c27aaf4b50056886ede",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b74777df7754cfe99f618b6fa4414ee",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8e5b053b450a423e8c082bcd43d90d75",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bd553fe3cbe446e8a81d97843a70f14a",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e57c560ebc44cf781c0ba759d2c04e0",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0510ac940be4080a2cd2f2bf76c6e79",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f41d7a092ca9428794c7302411fdc765",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ffcb65bebe8f481bb0277062ce3855ff",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d062773b6d9a420686574f1a4fa4db85",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c746d112ca584488a8c2f75604542169",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7514369f34504feab3fd8289ccaab28a",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b76a3e2cf6141bc88179d6d6a8afe46",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4a0a66e0fc134870932862bddb383249",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2b94b021382743048d4c5790a17e8e87",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "269a94633ed245fbaa30905cd28714df",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af693b24c00a49ee8387ddd6a6eb37dd",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65f3281fcc3342778bec7a57573c68a3",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "bc2a51ddfe4649a38fb755a45226b55a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a5eff127cd6b4dee8d1b2dd6c8fe43cd",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f63300b87da9449595b7b1aa50398de1",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e37d5f788c64302be5f6133ab5c838e",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2367321ca025452fb1743bbc3ae8cb5a",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "277a5e6037a94e5da73d4b51a73c8fc9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1391d5788d3043a98e6034bfe23d7544",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea9693fe48fd45f6a3d7c997ca89720e",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3b43fafa4e764bbbaebe7b5b84f83d2a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4ccd7a792c414288b7a4335e33c87429",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de7843b12a1049fe83f6620354d164ed",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "82df5db45023429198fee2835aaa0a8a",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c89c715411a842fbad2b44444a321421",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48dcb5a45b014676a4959b3c1ebd3145",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1;\n-1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "833b510c9c854fd58f54894b9bbe2acd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "59a7dcfd7f624933a216ce5606488152",
          "Name": "elements",
          "Description": "List of elements to unjoin from each other\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4c1d6f08d624ba89874bf4ab2d1126c",
          "Name": "Element[]",
          "Description": "All input Elements, with their geometry now unjoined from each other.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.UnjoinAllGeometry@Revit.Elements.Element[]",
      "Replication": "Auto",
      "Description": "Unjoins the geometry of all elements from each other if they are joined. This performs only one transaction in Revit.\n\nElement.UnjoinAllGeometry (elements: Element[]): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ed0123c5453c44b3aa7eef198b93ec15",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "636de238cb4b4d03a16cf9ce3fd3e0aa",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c54cd1497434a8f846233100a5fe9c6",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "fdfd6ee3f2a94d0e86fe6999d89f092b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3fdae4a0615d44a087ea17366af858bb",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4cd5a68ebfb432d8e3f2de7cd081720",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75660efd41954bd09ef2d2823f5b99bc",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2edd5a49e65e4361ae88537804169d23",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4aba3e2609f34ded82a6f4a45e904371",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b81ddbf4918440ce8f5f283112b70c88",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3c9be86472942e99c0517bf5170df0c",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd6067604b3249698ac1e79f89eb332f",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "955685b1c73542bbb62a84c879c42264",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "87d6dfb3ca1b42868880b747d75ed375",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "373b42f148074937b42dea0c7756e79b",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "227eda0e56644495b596dc654f23fcf9",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3c76e8cc48f446a856da28b30440699",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "ba3c3fe1c9ee4731aad92cbf3720ceb0",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "4a04ea63276642ac968d51d3b762ca21",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8ba35e57b3e54c35a808e8edc93701c5",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d1bbfd18c37140329c45b37a803ffaae",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "922b3582acf54361bb282fd9bfd019eb",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9d0b2807ed6546e88a058bf5ad9652e2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8ed003be62d44b8a87164797bc264730",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74b8c736202244e5a5962977c5630949",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7917b08d43c346bc8c8344289b140605",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1d695423b464b9ab1a9fa481f6a2dfd",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ea9923ed124742efa5eaaa050e889c12",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "82d395ae47d14f38bb47aac604b2b273",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ce2c8e35dec443b8ed0dc6a6f13809d",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "509305050bf9487b934ffa01f2ca3775",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8fc90078f35b4a028c582c07471df116",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "fb67ac6e4f30448d9df41f79f19422dc",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ff9bd3c549714aff901baff096d0f5ff",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3b1d13a7b24149cfaa9dbe6346763561",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1;\n-1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "258c70d6762149aab9918c2bc410f00e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2e0975354774486bbbab76edcc3c1bb9",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9b478fb70a4344d7873a7015b2963975",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "137faf60d3804d20b504ee0fa74fd7aa",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "9c9fed628a264950a4e989807b7dddb7",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "ba43158f524e4a1ebb09d83eef1a2123",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "262398715e5b47fa90c4d2c5d8ed764a",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a5b42a32526849a1999b3fa628fbe667",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c639048dc57242e3ac35b778af8dee16",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "45927e636c6d49c59381fa26cb8696ae",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2af565ed498e469ca29054be0c4e5fe1",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "dcd485f4df144aceb6f74a5d948ebed4",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d621064bd18b49da82b4b4f6dd88434a",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "05c39a4068f5427c9c837c0dce7ea5cb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "eec9b36158cc4b1d9087b132de3797ef",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c046369e801a48a1bd8dd5da8aa7f528",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79b2f08046644754a6539c89a95462ba",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2bb2534611ef4063992a8342e737df6b",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8b4c219af1e44dc3bf88bd0919d116f8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "963121e6a2d1440e842d4ff1632453a2",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c748a87235f34f2cbf32e30f3069b5b4",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51235aedc80f4fb58af9aa24cdf8c325",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9e9da896dcd34159a82955c078573d0b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5d59a44693fe4ec8b520b2906c35ba95",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a30bd4a5e684050a0ffbf4e6ad037af",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b3e7f5e4e7749afb7727eae1bd1d195",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99f60bfe8c13433badbee5f0bf113ebd",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "71f64f84493748c291b9d9c9184bc88e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "68f9cff9e39044b3a674b6409873c931",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2731972fbd174450b4fddef3e87b68b8",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "cbfb49c9c8444dfba0be39864677d1e8",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4e8836a38b643c3a894f193c3f27ade",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8bcad4121cf441cb4c2056d60f5f540",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1;\n-1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "21df62382434492396e6315cbb534f74",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "61f32ac6c4754f52a544a66ba26bf02a",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0e7106a90a448f686ade18cadb7ad5b",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23a69b283c8d4d159f877931e19367d7",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5e57eb7a1dbd4a6dbebb3a8793e43b30",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bb3bacfc64704047aa6e799c3b653565",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d893c150f6d04efe961a0cbbb14dba7b",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff620fc105a946aeb0d4df351a02d131",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7fdc9657dd3e4ceda82a8e4d1d22c80a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "affb0ffb607f491dbd79e212cb900b65",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a73c78e145c64fd7884f7b16abf44355",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25a5a983f153446b98874ac7382c6bbe",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b82fc6dcd6df42babfa0bfec3a65a841",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9d376e7f302648038b17ffbdd606866e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1386aad9e3b04781b55335671fa59f25",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7ee17323109947c9b7cd964db433c975",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50a10e84c3d047b98dec14a142fbeb34",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "260377b31f6340188f3481f35b87a25f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a57ce56bbb8141e6afd658e291a4501d",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc2f041590ae432389db12930baab472",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "885186f365ae4687b2df2372f4fba066",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0800151c06ac4785b50980ab1f857709",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1dffe4ba2f774f959fc5b5536884128e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3ec53fa67ee048868696dca5dbd32741",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74ecde77599c42b489a40280a6f8e71f",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3b554f4527364997bff8be5b5a5325a1",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0a296171f5e843768dde968706b7fcb9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Reference Level\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f6ff184c5c8647de925e6ae840aa8756",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "37384ed16c224e0fb3eabe6beb0f8856",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50018b6fe4394dfcbd66f5bdd896235b",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "bfb0da0142014eff816702aa6b2e9cc6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "378257c952b549ba9bbb6d02a7dfb24f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8efdd2218267450ea0c7f6d8314f2840",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ead53defef334c4fad7dfea3deef63be",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "13c852a448744cbbae53de04e2c0cfc0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e0380cb8ed494c9f9e34083c60b7b5f7",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e471f3d39e2042aab724ed9def983c2b",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8fc72b48b20f42cabb5267ffe3c0e2f3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e4a7ee1e0843490b910aa8aa0e322d90",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5e522b824b94c18872ee6c949cb23a2",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "06bf53b6aceb42bea540c2ab38b75fe4",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3377748acf3344ec949a7bac46e8c3ab",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4dfd1278edae496397e59d0ca11de5d3",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d1896b56dc941cabebfca2a15651b8f",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8fc061da432b4edeaea03d029bfc287e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "98c1d0d8285648b4818e1fb8b6c86e0c",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "9d35976063174a278fbc9732c8b6b092",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fcdf1bd52c034d54a90f19ce2b84c5fa",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "52d862e55b66414093744819f3b2e94b",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "efd9bc7e5865440999cacf9dc3f400aa",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "81ad908766d348cfa29ac7df73d1bc40",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "58ed8e0c1acd4e3c82e06bfb5f198395",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ddba2b7ee97f493e94216c9ba9845fb8",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b2e7f4999f5647ea8a28fb63d6cc86ec",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "930f7ed89afc41008d57c015702a8bf3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "743795506b4944fb9954ef1f9791f055",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e917dd3f1c0c40aca599f5ad3bee464c",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f7e4351452d147dcaedb720a2d0529c6",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5b73daf0bb24395a5f52a576cf2ac21",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "844ad5aecfd140499bf8d9c1d64dd8df",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "Id": "a5b13eb72add49f18701e9d93cdbb9c7",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "23faf9f274774f8d81e696a64c39c0d4",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6779146baf12487aa3b407742cd19620",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "df0ea2edf20d4049b2dcd8b4ece225ff",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1e6c65b69f994224ba27b184fa89e3ed",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "713efa735ae34eec9ef5ed8d4d7257d9",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b6402103f9804aa88fe7b03c920dd353",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "682d14d2a7bb4a9da304a4db5da698b4",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0bdfc79237a4818beb97f10666d5b7d",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "580a9200bfc84efcbe2ca4c6a924d527",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5541768ee5e748b1b2a42459a2cfee92",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c12fd27b30f40f58f6d0f70924ee1b5",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "bcf6e5e6533e41b296400ec07b4cc6c4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "32d8d4a05905429b8d499b1ac0481a01",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8974a3ec0ea45baa9c8c31e0ec5f736",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "12651921a1fd4f9cb3e7a9a87cf7472a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "91a26f10cccd46fab41f3b06141b1023",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee39db7df2ca4d6bb823f685ddf3adee",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4c79b141dca74c54aa98c30486476108",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "db25f73c6d6f4827a68bae57744334f4",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48357e46e2aa48fb972b7bd7422b4f6f",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cc3a3bf32d37464ea057a7138a7cb2d0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5d52a0d0161741d481557b8b31aa911e",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3383b686405144e8a2f8a15f567489d7",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2c1d079499674cf788bef43516c9cc8b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "339d82e9283848978cdafc292737b9cf",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55d3dd51892e4a808f4a8b8b019d40d8",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ea7465edd6394e55a59576391ae00c55",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "afc2e42b173c4ffeadf9834b80c13aeb",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "623e7d0c8ef84e5cbc62d170f166ec45",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "00273bca6ea34e139b5426b2f22153a0",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a29d0c75438e4f5db79de5b25df40f47",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "923ead0d1115491091ca98a1c6ea4fc7",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae25ea50c1394344a08a5bd7b6fcf133",
          "Name": "y",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea11125e9fa14ca98f6b462d3f138777",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "x<=y;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9457d6c41b01457d8899d74fc1d814e9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "731ba7884b704f93b69c07f86a8e7708",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "177b8a8ee1a84b5d8ed590593bdf1ae8",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "534eee5306f44b59878b51df1ebf6543",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5d064f0d60f43e4977dd85fdfa0d7c5",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b01c91ee6da04436a2a939437cc6d502",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "031867014ac04521952a70157c13e6a1",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b1b6eb661bc4af380dbae71081b8522",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a36e1016ac714146aed5ef820a35cd69",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "11de9dd3ec184ff9b491004a39e5c521",
          "Name": "elements",
          "Description": "List of elements to unjoin from each other\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38556c81f1e14e7aae98b23a92a0aadf",
          "Name": "Element[]",
          "Description": "All input Elements, with their geometry now unjoined from each other.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.UnjoinAllGeometry@Revit.Elements.Element[]",
      "Replication": "Auto",
      "Description": "Unjoins the geometry of all elements from each other if they are joined. This performs only one transaction in Revit.\n\nElement.UnjoinAllGeometry (elements: Element[]): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2344c93a91f64035bb13c73ce8001cc5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b2cf292079ba4e82a0487841a8f0b296",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "76cdb8fb15b24ad0ba04207b985c7afd",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c011796e8d8a49609463c9095924ba07",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a7225f76e6d54419b32aeb5ecb861877",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b90f4bc6084140d58b2d8fd8d39258c7",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d238192cb9a049fe99fdf5b78dc37c05",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf7aa21109f04991abc23be887d4cc57",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0c5a4296b7eb41a0a11f1b1577248655",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "405eb05232bb4f9a971760f2cc1676be",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "100;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "69ce41c4c6124c489d08f37aa3e223c0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "db72104a89b048a2b92e38d924f5374c",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76cc21fd9711434787020db6861921ed",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef52c27245c2404ea08cc06de950dfd2",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a4941550c9b747b7bc90a58a95f7de09",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "02d4a0a20e784c39ac083d0387b410c0",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd2165e814b849a6a23bcadee43bdd77",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd364ece28a44042ba67176fc098416d",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "671e64019fd4495db723b53855d8fd86",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "ed35917aeab14e55a28452768f9e4470",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9efa6d5b328402cabcac973a0a60be7",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6ec52e9bfce4500b2fce22521ea2458",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4048ef2710a4c8ba941b60f424f8b99",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "4da5f2570aa648e4ad3bd7b9b990a182",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7b3aac33dd2c4f82a0b7d472c6c292af",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "300;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "baf7003a0c4b4b34bd567c7cf316267b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b7a35956b93f4c42832b6036d94647d5",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "471befec8a7748678f4bbd0c17a19057",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad00d81ed1594989a333582084fc5d88",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "a6f97b5259ce47c082b8404db1c21df1",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "2e8738de51444838bd734d39ea22db1e",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c59de430944c44fa83bddb298e750728",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ec73e7b8b584593980480762678f1e0",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89539af15b85400da975af1b4c255b89",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c7d7982330114a80a9c42c893c4958e0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "289142604fbc45dab869d5d1ebb9d9c1",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d21857572b824c65905d5016fdda169f",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7dfdbd7291b4c5fbc01fe2b4ebb7e8f",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3df80df1914a426a81487f65a0216865",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "801b5f778d1d4b239d7b7686f9eff3ab",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"empty\";"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "fcb784fff2f8439cb4242f5717f2d3ff",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "1b3c6642f88c4a2ea5398eaec55aebcb",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c8818f94d00c4e8e97266919d25bdc87",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "fab01aa406e84b2b93fbdb28353c63fe",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8e99e22609c43c49b5dfff99a06a932",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "ef6003646ca5474fb173bac84700ee56",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "39d858e9e7b2404b93f5c6be2d01d664",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "6d5e995835cc42b593dfa467953d7e9a",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "326f52cdc2c74b8386aacd6a78e02347",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78c7930fa0f14ac8939d912c3e4b7379",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7cdb23e6b03b40bf9695f783decf07cc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6d9ebd17a3ae4eefb71ffb184f561274",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "3af6995da3cc414482d76b8bf01d395e",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb7b4bdefa3a435ab0a00a853ca87813",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5dd6414184f54d57a877cf84cf78fcee",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b45043aa8dbd43c9b015109b1aa46b61",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5db486d9ad9748e9a54a8c74c821cd7e",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6d163d7597db4480a9dab4310161e311",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "870ae0f204ec457191646f7c4245839c",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1de2b04f8f9470d9a81bfa3b0309160",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "94574d8b87c44b1198cca0968d60e5bd",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6d3b13057c754736b2b09c9586251a06",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"empty\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "05584738260840ad93318c44d01c6bb9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b1f49b53604740beafd5cc67b16fea1b",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c05494c4c5ca433cbc1dad2e20c25946",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e0f3e1d91c3c4a009d56ef2ab574051f",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4f530727dc94f019f5b523b02a0ed41",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7e9c12e885dc426089672ead4eedee50",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bb05e315079e4ea9b02c36bfd556ff6d",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7be490bf59034641b130ea4cdde3b35f",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5cee199391134969952842ec46146576",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "105c2f86a32246bd9cb16285c6fefe72",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2100355b48134a7ebb61a1287b6015cc",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "1a0b7cccaaa046abb7599bf935ca9e17",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "ac0e0f93aeba4b809a69f649f5030a99",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "761e3bf45bb7474b8fe693f6309a5b24",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11a29a6e81874542bb77d1c6eec66c32",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e10be89a59254248b944d7629de46548",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "1ab5a62649e247b0bead12a1f399c8c3",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1dca4a23fbe646bdb1462195be8b8be5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "abc1baf1a47243f5870005f85da3ada2",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "true;\nfalse;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3c8b7b197dd749a2acc847a0bfdea3ad",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "67ecc248483c4f1aaf3da4128f185c6a",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cfd177ad8cdf4166bfb8b33d63188f71",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "83a669dff3fa4124ba03f6fb70f98887",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "68fe0e2ea51a477783ed906d94699a4b",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1be7c3089aff4337be739eeecc5108b6",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99372b9e60474506aa3a8c0af0a93698",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d526cbbfd3994972811d966e397888cb",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "28a31595613f409bbe5b064b92cf746e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ac4da29d16824da0888a17599de374aa",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37b3c7a09a5c4ed78b7b5677de8fa5ac",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5fb05c3317e445f1a2acb241e6ea07aa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c18cda9cfa2f4077a4cef5a04cb1b1c6",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7030a92eca83486dac8316e0efd9d7f8",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "214be7cf2d1648448593251eb1398f3e",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c4f6e9004b224cbbaa36923ba45587fa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b97bd9c3dda4441daf50f22fe99752e9",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9eae113afa24f389853f93a6dac0e23",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4bc2a4afd0eb4fb5a4b15b6579a9357a",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7627fa20161c458a9c9f97fe6f3ef272",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ce68a4edf80f42b183199144707f15a6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1c9a38316f864145a5e21c8c6dcc001a",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df91fcb3563f4f6785071a8f4ed3325c",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "03a551e4cd8e4b629e22baad683772cf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0217ad6f942c479588d1688e89869d59",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12d823222ae44edd8af3030c4b7c0584",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6502a91daac04f67b7a0e46f251bc2f9",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "ff179e0295e746e7aa66a11a844911d8",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "88009c8fed2d425b9d20082516625acd",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fbb75dbe03d54616b87cb0777fb62219",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converts an object to a string representation"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8f82e2eceab5403b8742a1402e08ca02",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3ec14fd6be524a8dbefaa12ca9ed57f2",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b673b25845440559e76924b3dbb55e2",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "134ea47016ab48a4bfb77648962f762f",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f192f3c1267343d289c64e036a0cdc3b",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ca5c2a6ec4f94b61bb021f2a1ebf9a1d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "36ecea965f1a4bc097181a40067cb567",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "900b9f182a1a4ac884ce1b31dc4fa05e",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c54182e31bb4669a4eb119bcb8a81ce",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24bec7c1d92f4b58923aa0043987b754",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "db9b5188bcc7467d9bc07f3cf9f5da8f",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9c99a12b3c1348de8346d5aa048a4d27",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"empty\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c4b740a7a28d493dad996d136bf9f0dc",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2ae5151ad11e4f93a3363e3fdfb2bb10",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "100;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a5a4547403854b73b0ed2a2001c3a4ed",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e61a775a7e9a4239a9932cb95eb51753",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Inputs\r\npoints_list = IN[0]  # Nested list of points (e.g., [[Point(X, Y, Z), ...], ...])\r\nbool_list = IN[1]    # Nested list of Booleans (e.g., [[true, false, ...], ...])\r\n\r\n# Function to group points at a single level\r\ndef group_points(points, bools):\r\n    grouped_points = []  # List to store grouped points\r\n    current_group = []   # Temporary storage for current group\r\n    \r\n    # Loop through the Boolean values and corresponding points\r\n    for i, is_true in enumerate(bools):\r\n        if not is_true:  # If the value is False, start a new group\r\n            if current_group:  # Append existing group if it's not empty\r\n                grouped_points.append(current_group)\r\n            current_group = []  # Reset current group\r\n        current_group.append(points[i])  # Add the current point\r\n    \r\n    # Append the last group if not empty\r\n    if current_group:\r\n        grouped_points.append(current_group)\r\n    \r\n    return grouped_points\r\n\r\n# Process nested lists\r\nresult = [group_points(points, bools) for points, bools in zip(points_list, bool_list)]\r\n\r\n# Output the grouped points\r\nOUT = result\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "7464fc33c1f446ea88740cba9914b9ac",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "46470a5d9f474f3a8c8200aebda20e3c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61f81e8b789d4ebeaf1f9a0fb331838a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a42c4be2be249969d8d6ef4d941a903",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0a1d7edc34ec4464b1b7aad4d481c8aa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6fb747f4219448f094f31f25d25fe841",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d5c6829ae10846c49283607634488d41",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28b6b2d86b6f4ab8964306ba59b16058",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3c8632e0788641de8699c4c8570adb20",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "81557fa11a1b41efba71485c005a79b7",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27596c3145ee48928ccec77011dd3bfd",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "697384945b2c438093efda106e3ff67f",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0d5c6f0cc63d48c4ad04b50cccc485e8",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8a7aff7bf9c24acda94e5d0964a90068",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1a38ffb167e84e9cad6062df417c3e95",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f1433655a5c545b5b97733234620bfab",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "478e9ffc234d4d31be6fb23a33811acd",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6f2b7adf87a843a19577c9b9fcc5f4ea",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4d9ed1fac2604f72ae16a42f24be8d54",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49f19f393c184216808f028a182d23f1",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32a3867a704943f78a282c2e8ea2f41a",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6498f9d1a0194ee79db72f848ae8dc99",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2423b46a532244b88e4114c48289b2a9",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9bdea982b73439d8458e7ae3e17379d",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38191ba6faef480e8d4e4bb715a76dec",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2d6e054f5f24ad997c54c004af018b1",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "46abd7a518104942ae22fbefc1b4cc70",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e9ee0883b76045f0b51255843b3d19dd",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3edcf4cffcb47a89c5cd74867d89276",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1f145e98fedc487ab1ee130f3b1523e8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0ce03190f54a41529207ced0d8a21612",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be0a105cb52d42af8a11b568f5e37df0",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33b781e2373e42c5a60d1bdbb82cb47c",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "335c1e9087984b30b24d02b1e54210a3",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c7c12a9fd78b4e5ba46f991055c962a7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "87c5772f5ebf44d58afa49d723f6bdc1",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6cdb9a6618bc4442bebb8ba4ca907991",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40c52ca132834917ba69623d12b7427b",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c739da40762748a9a006a992f7b5f20c",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "c9e04f1a8e8f4fd38568a60b4614b742",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "08681a1e1cd9456688204e968fd06c89",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e63944fd30b14821bb642548080669ae",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converts an object to a string representation"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3736caddd19f435ea3dbb0b4a2d50b92",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bfb4bd0d1caf4a95af8c90e9bb93b9ab",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "100;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "28647ec02981497ca1e22afaadb57a3f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c33f6e5718644ba18c7e568f154be59b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a374a529c193401782e59a31e29e5541",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9bd652b4b7cf458f8075c0b5fdff9a8d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "def group_points(points, bools):\r\n    grouped_points = []  # List to store the groups\r\n    current_group = []   # Temporary storage for the current group\r\n\r\n    for i, condition in enumerate(bools):\r\n        current_group.append(points[i])  # Add the current point to the group\r\n\r\n        # End the group when we encounter a False or at the end of the list\r\n        if not condition or i == len(bools) - 1:\r\n            grouped_points.append(current_group)  # Save the group\r\n            current_group = []  # Start a new group\r\n    \r\n    return grouped_points\r\n\r\n# Inputs\r\npoints_list = IN[0]  # Nested list of points (e.g., [[Point(X, Y, Z), ...], ...])\r\nbool_list = IN[1]    # Nested list of Booleans (e.g., [[True, False, ...], ...])\r\n\r\n# Process each level of nested lists\r\nresult = [group_points(points, bools) for points, bools in zip(points_list, bool_list)]\r\n\r\n# Output the grouped points\r\nOUT = result\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "934b27a28c9d4b5790a02eac38055fae",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "105813680d79469eb8230a29136eac50",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf1794d471014fbea4fbdf9d8fd8c4e6",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81d3c94b3e8c426b8931e9a5c61e216e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "95829e84b0624fccb10dfd2c742a4bed",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6b99d2cfaea447449f394184eb600632",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"empty\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "588180b0b14d47b9ab0ffccad3965395",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d220aeb72d6c4a469c6f70ef41b594c3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "100;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "708efaa882f843c697065f3662ed9895",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f0bb4819b19f431fb6b5ae8f2bb95976",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bd5b94980704869ab11ca9bf4a9e41a",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1125798d93d444139be6912c75fd7a0b",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "018b75d06bc4490e81b35229d19bb420",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "32dd3990430c48a6928aa5d946e3b988",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a6b4522d8e249d5a946705029985308",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd6cf74fd7aa43a79a85ddd43f987873",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "de90bce3606d4c85b726f5330d2f29b3",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "630ee415d97649e8bc324436f3acf980",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "300;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "77801beba0c145d8961dad0ad8528020",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "07803e23b3234eb881ab150e5ffa2eda",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e19a6c9b480541838cf087e8d86c296e",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82fd23e916254a7b96379c4c9e3b6adb",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dc9f54506fc34549bfd4b2e26960e3ad",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e9573854207e4193be08b17ab12ce738",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64ca0d42226f48a6980720ef4261d7a5",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ebebd761c513454494287c8b75ecbbde",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "00bb63324bbe44949d216086396fbe43",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6cbc323bd034be6966109c20cbdf8b3",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "true;\nfalse;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e65a14066d544f189e16118b3de36927",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d19d3e7caef043259106a40e546daf76",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d7595e099844a5db6ce2d67e15c0fe5",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "500bfbadaddd44bc9c819a27c5b77b1d",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4b0ea3935e794daba7c3d884e3b3f69a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"empty\";"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "b450efa4d8f74d0a88a69db37eaa3fe7",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "61a7e23d9e7c479087375392014f58b4",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec287dcb63fb46d2a36cfa4dd6b3d1c0",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5756425dd2e54372b6c01b92569c10a2",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69f8ce32ea5c43a4897ec33e43e2bff2",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "f88cfb3360374a86b782ca3d4ac7c529",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "76d0f15419be4647a2e13cac6a531100",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85b2d32193204159924b5b11419b2087",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4cf5324551c9486eafdd793ae5bacde7",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25b455b2fd40464b89f04b56fc22960c",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f01a2dba7ee5434ebe9deda1c8012888",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "da4271ac1b574a86a12c271f1191c604",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c986d232f21c4ad682a004d7a367edfb",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a31c8436908a40829c41feb900dd4f45",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "6833281a71d342d193403e98e1ed0717",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "7a25b9021ac140ffa7a1266b03b0b91b",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "338a4bb5a94447aa9484e89cb20b3926",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0dd71bbbdec244668b6243f15cdfab42",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e50d3771b024575b31f3cc074c3f8cf",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "02f2bf4b58134ded9cc0106d6dcadb85",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "83d63f4518b446368803a725ae52707d",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "082c9a6bdecb4f8a91916e6029fa0dd2",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9fbd56919754eac9c458f9a5458b256",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67947979a9154cbebe66199f09aae3ab",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "cdcd305f33e242a792e0893e07b6d542",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "1a8d19d8725d4dd183796aaa4f72cb30",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f9e8eb7a61384eb4b2116114a2de0fc0",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2b6087bd27ca4b3f8162ea65a3ab1bc7",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e65d766a5574939a42be004385f9eba",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e3813b1343534c79bbbb4613468062a4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5ddfdf20e03a4af78faf3baaed99d397",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3dbe4f8aa27a47f7a7962c9b305c3fbc",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1d3bef95ce054772a5948c96de0f0f52",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e0f5e246e716440bbd6774f48f878335",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74dee0bc04f6468e8515418e7789826f",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbd1825e075646279e3d4a17e0739f9e",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2827b4f1de07497fb4c042e237541997",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7d46a9cdb7634b9ba40714332b922d91",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "73e9b92293c44e808dfd05a8d0c52ca6",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b04ee73efa4d4c9795937197aff18d3e",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d3a668a55124d76942b730901044bd9",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "047634b336eb4a0196728957e916bb64",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b318afa67fbf420a96019aa067769751",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2cde6671f84543abb63eb100f48bc7c7",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13be7d35817741079b7666373e716113",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "895ce09d7e82476eb80a4b3a8c1c59b3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "76f31f05b88b402aab267f12741482ab",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "4c12016f0c3b48e388ee709bbf53f5c7",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86b3c8335d9944c6b51eda50f1ba9f60",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "de6dd42634b54bbf9c0e7149f65a2619",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f4c393544f5144668e763f2e2499cf37",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc722374cb984726b2e753714077e439",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "7e8d5c7353c247c5a97c88b5a69619aa",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "33ce644271334d00b9d869b2442b966c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"empty\";"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "e967bf3868aa4f9c86cc1465c593b85b",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "2a08f38f5ef642eca998698e0b755583",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d63bf4d9976f42c486dab99e9605f4e6",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "3bf17cc3eb3844878fc29e47aa48f6d9",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd18a6aae6ae49c5982983081c437e5d",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ef4a2c35f00041eba7b8bfd4a84c25b8",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "550db2bc8d4243d9bb0aaa3ab291a113",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "100;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e78dfaa13aab470685a51cc8218148c5",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0c018632b35e4bacbc388d0878d93820",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "100;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c43e28f24d764ec5a912c8d4fe691220",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "342e13bde0f645b687af91c80b917792",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c68d5bec4254260866ed17fae398534",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1a01f354afe4ca19a81a90bb6db6cca",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a6189be0bed84627b1aee52b2df0ab47",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bd454b6b07fe474c96e36e25963b4eea",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dfc5224b6b5d405ea2e771a1dff11d30",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3b6e5811593042f4b3ed1ba73d7cdcc5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5bf74c07a2d04487b8dc76a0131c7d1d",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f02e5e31f4df48fd810da47a2e7f275d",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "104eaea4027c4586818e68e481b417f4",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "fd846cd0bb134667a32b48da686b212a",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1b522747b7104260bd28447293faaebb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Inputs\r\npoints_list = IN[0]  # Nested list of points (e.g., [[Point(X, Y, Z), ...], ...])\r\nbool_list = IN[1]    # Nested list of Booleans (e.g., [[true, false, ...], ...])\r\n\r\n# Function to group points at a single level\r\ndef group_points(points, bools):\r\n    grouped_points = []  # List to store grouped points\r\n    current_group = []   # Temporary storage for current group\r\n    \r\n    # Loop through the Boolean values and corresponding points\r\n    for i, is_true in enumerate(bools):\r\n        if not is_true:  # If the value is False, start a new group\r\n            if current_group:  # Append existing group if it's not empty\r\n                grouped_points.append(current_group)\r\n            current_group = []  # Reset current group\r\n        current_group.append(points[i])  # Add the current point\r\n    \r\n    # Append the last group if not empty\r\n    if current_group:\r\n        grouped_points.append(current_group)\r\n    \r\n    return grouped_points\r\n\r\n# Process nested lists\r\nresult = [group_points(points, bools) for points, bools in zip(points_list, bool_list)]\r\n\r\n# Output the grouped points\r\nOUT = result\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "b7d08c432ce94f138db4f547e744e619",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "76bc79b8cd5f4d87bdc4385e6b58bbd7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8de774ac6978432f9772fe4da620553e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec225871975740ff82489a0e7fc4c887",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c6d155830bf74b9a89338b833490233e",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3062dbeb28fe46c6b1bb84760c953934",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a6e68634edd64caba6270057e2c67b34",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3ddbd49bc494413594bc8e06a8c6e0ab",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d18f246c2314cb9b6bfd25579a68fb3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "def group_points(points, bools):\r\n    grouped_points = []  # List to store the groups\r\n    current_group = []   # Temporary storage for the current group\r\n\r\n    for i, condition in enumerate(bools):\r\n        current_group.append(points[i])  # Add the current point to the group\r\n\r\n        # End the group when we encounter a False or at the end of the list\r\n        if not condition or i == len(bools) - 1:\r\n            grouped_points.append(current_group)  # Save the group\r\n            current_group = []  # Start a new group\r\n    \r\n    return grouped_points\r\n\r\n# Inputs\r\npoints_list = IN[0]  # Nested list of points (e.g., [[Point(X, Y, Z), ...], ...])\r\nbool_list = IN[1]    # Nested list of Booleans (e.g., [[True, False, ...], ...])\r\n\r\n# Process each level of nested lists\r\nresult = [group_points(points, bools) for points, bools in zip(points_list, bool_list)]\r\n\r\n# Output the grouped points\r\nOUT = result\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "0609224b9cdf4d4aa0a15724654dda42",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "e21559d21082440891a8880903f5c30c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ae495c9fdfe4e54b37f72960f6195e1",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "819f7b7ce2ab48f5bba95d853703666d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cecd0fbbba6646c8af5d68296b65877f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1e4edf2e26eb4c018aa83e0318758785",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ad90c3e29fb4a75861e7d4d9a9a9664",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be3643dfec1845289384a7d6cbea80f5",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c263af0d7e74471993e6b17c975a565b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "993cb67433364dc7b2e704fddd579b2f",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "ae9bea75555642e48c5de6aeb2862b44",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aee2f8f9dcfd42d88da161b3a50ef623",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e59a1f9dddd84b44b60b40a778ba03f2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "551944e352474c418f5efb3ccbb20f58",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5513b9b9e7aa4e47956b56cc9033d911",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1ce7297dab054239ac4269938503efa2",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d701902ad3d34e6089f933b132e71beb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a54292c1d3464aaf92e39ea1325f22d3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8a7e6027bd9e450785d1f394fea69df2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ffcab4c0fd714724b582f23400dab3b8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7822e62e6c2f448c8b3c32794054f73a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f1020d82148c4d1587a7108fd85d04c6",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "558ffb5ebc124e4587892846adb9eeed",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b216e51eaa84139a04dbd5214df94c8",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87d4b93405d342cd8037a24b391704fa",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8e71686f85b744d88f36d7a440d916e3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bde9a039fa3f45d389455e47d5c60a46",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "36ad2ea56a02474ba51236a23f606214",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "73c5cae843964beeb7714dadf2fc538e",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cdfa537e019f49789b72293c42f3c881",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "9a8df55783f940afbc8481c7ac7049c1",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7497320157ca41e3b2ddd98a7de97ac8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"empty\";"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "d1e1fd8924794f9e8b1103357994a56b",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "8b1211d82cd945cdac2b460744e76ef9",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6e8ee628b4754a8b8592c2359fec9241",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converts an object to a string representation"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "b934103cfcf34b119efdd5ea5e92c02e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "b2dc78cd662d4a03a5a2bc5ba887173f",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d8d4366772a41b3b0a78a4cb4f9640b",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converts an object to a string representation"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7401a824e9204353b6e2a23161e0b3fc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e721d3d6afbb419e85419826247e47ac",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fee03f50b2ad4e2ead41cdc377b21e1a",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4eea59fa11c4704bda7cbea61fd2d10",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "93da7823d4b44ea1aa66bad9066a873c",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "cf67494e7e6d46179b4942b1b2dcfec3",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f05ca6b42f2c4454a60a461d571730f1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"empty\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "79396dec98d14fddb25f54cd5326c927",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a646f26699ea41dd945773ba36d6353d",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd90bc71deb94fd0bb6a14b367804a3a",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4dcc66cb6428455491f634b00f5c8b2f",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7770c6bd6ab04e129139acd4d93cd24c",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1b406e2430ca4c8bb11fa5125ec408be",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f85aefc084e74d4982d0a67596ecbfe5",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1af5a89769314a5492ee802027aa9428",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1874274ff85f4ee4a8a0e0110f8ded16",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25b81c3db44540d4a36d919577b8a01c",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9346cf84c3a34146af70ebf67f4cff16",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cf4775f617d7499ab62073d2f2358cfa",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49ecef9a9349484f8e65d95418d40d16",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de076431fb15400c93009ea347837f55",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e61ba0a614d4d339087780769681621",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7499c48eacbd41ce937611e7792137fe",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "382dff5342b4440faac82d9eb85f91ee",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cad1630468ad4ddaad7bcda3763a0ea9",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2c3c035998c3412092b7433abe7a28c4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b3b0adb2b64f4038889f7bb72b3100cc",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0eef768a60841c18f281daf79e322e9",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "616522bdf4244469a0b9bf54fcd02fa4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5ba9e0a9758240f1aa4bd37d2ed68e87",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a49f5f5689b0436f82ddc866984ca3f5",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "fc4b28e396104629b4463d6e4aeaa952",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b0aadadb11ce42b3885e7dc91bb5cb07",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b7ce0b7753e442eeb7f009bdf42a6bf3",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1290f55b6e014ebe89021963cf83b069",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a1ada6fd3a54324a3854ce73843d6ad",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1b8028210b5f42bfa5ceb53c6f8d478f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "536388af3e7342c498b7467fca1b52ad",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "218d82691bac472a9f96258fbabba9ee",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c7967f0d819946e6a9f1613a3f02ec6e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f5d1218355224f78a0793160bfd90b44",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "875cc1b3cbe649ec9aea01be5be79f81",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5047c7a64e28496f84f1ca7cc61bdfec",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b59614829f854c28afedb079e3f5e842",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "387e119ce196487f851cba7ec8047880",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b661577696a34de0a7deb43fe92e4264",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb823183a62d4d8f83099147f603a48b",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3e151f2b7035432e9a819d73f29e7e96",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "58bd30f35c984a4bb1dc45ec77c452c0",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "19e667927b68439fb070f6535cae1aae",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec2948ff32d44fd69b4f4c4e4b7a968a",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c1db1a0468d4d46941f4e2cb5e67b2f",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6c7eb0db6f3b470a9cc9b08be2d592ea",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1e81cd2ef9c14a8e9fd0b0508ccf69d0",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bbcd9d8a6a43403583563deeaa5d369d",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "45f1e44368b5465da77df6cd5327bc99",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5373e722dc3d4b55a183ee7db1f11299",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "2b9a87775e7c4b6da1d9581b7006fbcf",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf43309516254e84877cdcbd8475570c",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eca78e8a222147369842e5881015baca",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ee80460b9f4d441298a8300693c060d9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1ab8760c61f942a3a63a7bd57c33926c",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ec204d4e58445cbab1789eca2f76512",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f407533fa3e94fcabd86b0fa1d4ff20f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d009e796a05e4ba383d7abab75c43a1e",
          "Name": "element",
          "Description": "The element to delete.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58ace9ef66e64ac7a58bfcd123cf78e4",
          "Name": "int[]",
          "Description": "The list of element id's deleted, including any dependent elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Delete@Revit.Elements.Element",
      "Replication": "Auto",
      "Description": "Delete the element and any elements that are totally dependent upon the element.\n\nElement.Delete (element: Element): int[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4f0db9718c704bc3b61deba94bb23af2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "98e2c388874b4e97a3e51a20cbd12f77",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1146c39a9b84446091b106481a9bb7e3",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d8bdb28a94e4575b6b305bcbfb0c906",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "18ffb23aaf9c46e7af384bc0711a2815",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "071c6a3e71404e1f88fd7c01e1977ab4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Reference Level\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d02ee4a57d69474986af13a45c6c25ed",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "42bcda6389844f98a91a81d2814ac1e4",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca645b4b6fc74ff7a9e487c46fba5977",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "829569e1e6414f148a02ff2e304dc8cb",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2919db1f12754781866ad06dfa33876a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5454f228f59341b0a698886bf673b8d0",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f877e0580de44e7b93fbd07874704a7",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "332b4702843a4d57a821f3c1dc8cf384",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "86df67f4f65047fa87f7372923ec4b46",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f80ae9d308c1456c91090a91dac4f635",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3f8c231c887647a2b1f4ee60666824f1",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "1a6d57e824f741f3ad10364407a05ea4",
          "Name": "data",
          "Description": "data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d80f47f1f6f44fda8c7573a234d15b51",
          "Name": "waitfor",
          "Description": "waitfor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea612a07b15544f9890cb4e67412d72e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[data,waitfor][0];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3dde450ce41b428a9468c1cc612e06ed",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b227ccf364b8444793dbece49dbbbb59",
          "Name": "elements",
          "Description": "List of elements to unjoin from each other\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "876bae66b58a42e28e193d22bd19e952",
          "Name": "Element[]",
          "Description": "All input Elements, with their geometry now unjoined from each other.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.UnjoinAllGeometry@Revit.Elements.Element[]",
      "Replication": "Auto",
      "Description": "Unjoins the geometry of all elements from each other if they are joined. This performs only one transaction in Revit.\n\nElement.UnjoinAllGeometry (elements: Element[]): Element[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 38.0,
      "Id": "036e2395986e4384967ad006ec433e4d",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "f5f67221d3354d8fadd684ee19594d0e",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "389eebeea1dd42b4a32f9c172dbb9f1f",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9409a21225004936b298c7e9f0413800",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a59d34aa69ae43cb967be0916870d057",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "316acd4e84ed4861900cc20736a3396d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b72828b71ce148ac9ef5a5b056e8ad11",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d32ef603b8ab481d871f0233ecd3f967",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "dabc1125818241409bd1595d4515f19d",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5721fed2fc0a4c42804c0452cf802c10",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e984bbfa7e0b4f999a8f4d085da72e04",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Inputs\r\ncurves_to_check = IN[0]  # First list of curves\r\nreference_curves = IN[1]  # Second list of curves to check against\r\n\r\n# Function to compare two curves based on their start and end points\r\ndef are_curves_equal(curve1, curve2):\r\n    return (curve1.StartPoint.IsAlmostEqualTo(curve2.StartPoint) and curve1.EndPoint.IsAlmostEqualTo(curve2.EndPoint)) or \\\r\n           (curve1.StartPoint.IsAlmostEqualTo(curve2.EndPoint) and curve1.EndPoint.IsAlmostEqualTo(curve2.StartPoint))\r\n\r\n# Check if each curve in curves_to_check exists in reference_curves\r\ndef check_curves_in_list(curves_to_check, reference_curves):\r\n    result = []\r\n    for curve in curves_to_check:\r\n        is_contained = any(are_curves_equal(curve, ref_curve) for ref_curve in reference_curves)\r\n        result.append(is_contained)\r\n    return result\r\n\r\n# Execute the function\r\nresult = check_curves_in_list(curves_to_check, reference_curves)\r\n\r\n# Output: A list of True/False values for each curve in curves_to_check\r\nOUT = result\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "f135c86d98f146919349b1cdafcabd44",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "f65736cc373d45dd873dee62c66e9e2f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9528c7d728c44aee87ebbe9a95aca6bb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "606f8fbed78f438f8f87e7250a4fac70",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5d6228bdc7794ca689061c925ae7601f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2b73d6cbea8642c79c58789cd2dd981b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4892c593718641bcb24ca037234bd14a",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99d620356a014502a49482731548e5da",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cdc8d92610384dc4968c635bc3f0df70",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "abef7a71e0a34daebf0bb98fa721088d",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f79c2a516f35459bab7b12a8d26b83af",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0da4f8db461b4b7caac431ede747e9c9",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "490db883a15e4a04b2f56ce0bbfbf87b",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "25f99d331402459cb1bac4af70addc2b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6043e0f9dd1948fabed95df7c4113d54",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "dbff76ea512c43fd8083c8f5ce8013ac",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e79e05b40284eddadfec34383b55823",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b8fd1a5e1f44f80ad585bbfd2e052f4",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 38.0,
      "Id": "77965262c52943dd8b83d151675010de",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "f8a336d418204870b379369647f47a1a",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9134161c10ef4055afbed623962327f5",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Inputs\r\ncurves_to_check = IN[0]  # First list of curves\r\nreference_curves = IN[1]  # Second list of curves to check against\r\n\r\n# Function to compare two curves based on their start and end points\r\ndef are_curves_equal(curve1, curve2):\r\n    return (curve1.StartPoint.IsAlmostEqualTo(curve2.StartPoint) and curve1.EndPoint.IsAlmostEqualTo(curve2.EndPoint)) or \\\r\n           (curve1.StartPoint.IsAlmostEqualTo(curve2.EndPoint) and curve1.EndPoint.IsAlmostEqualTo(curve2.StartPoint))\r\n\r\n# Check if each curve in curves_to_check exists in reference_curves\r\ndef check_curves_in_list(curves_to_check, reference_curves):\r\n    result = []\r\n    for curve in curves_to_check:\r\n        is_contained = any(are_curves_equal(curve, ref_curve) for ref_curve in reference_curves)\r\n        result.append(is_contained)\r\n    return result\r\n\r\n# Execute the function\r\nresult = check_curves_in_list(curves_to_check, reference_curves)\r\n\r\n# Output: A list of True/False values for each curve in curves_to_check\r\nOUT = result\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "915e3c4785e144b5887c8e310143609a",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "76529a5b1acf4478b14b5f6699b224e5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f6f917f08d44fc49ce3a70dc3e7fd58",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67638fdb06a747568dafbf168c2d7726",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "24b65c93e39f42f7a0256246411aaa3f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "58e1e07250f043ad908ab8319e23a6cd",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b4a40f8adb246058bd7f0eaffce52d8",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de72594c7a4c4201ad15f243cfbc97c9",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "03ae599bc43046f386375f79a649b180",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e6eb3eef34ca4457aed7da436c20d71d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0081999ab324f26bb8af16e57d70038",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dea84e014af1470b8b6ca61bb92c229b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2a6af5755da9484cad6ec6b4dbf9215b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ecd38c471104409d9317d51e102d951f",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "103c4e2e4a664d89baff5e29a999048a",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e5078cde25244f5bba0636686297303",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 38.0,
      "Id": "cb69882315134203b8a21799b02bf2a5",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "5fca4373e1e74a4dbc1c309aa4d12a53",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "351ad51bfd3d47b3bab0d3abe891e04b",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "212ba56413694c28a7bd259e61593350",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d1bc63ff4a1845dbac43f4505f552574",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99c3eae805414023aec6cc8a98af6fd0",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee4880774abd49d78e384876684beb7c",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0363c538c30a48e5ae00c0fa78ce114a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e651cd57629340f3a7b638369d0c10a9",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ee0bba017ba42c4a432f45251cbc0f9",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7d3c74e596d4450bde2f6c6dc50c1dd",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2ee81b88-e730-4ffa-a7a6-a89aaf327f47",
      "FunctionType": "Graph",
      "Id": "d8ebeb88f760491189ad3fba42226004",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9d83d05fc7104b2a8fb19ee5ff7ad9ad",
          "Name": "InputName",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ff8ae082b3047eca74c07d4b055b223",
          "Name": "Minimum",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f63bac916f34e93baed706c34aca8e9",
          "Name": "Maximum",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2e7f005aad54d79bfc922ef1cae4b4b",
          "Name": "Default_Value",
          "Description": "var\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1906fac562b6457cbe7d05df7d85d58a",
          "Name": "Step",
          "Description": "var\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7405b5df4fba426090b017538c17ebd0",
          "Name": "Slider input",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates slider input for UI.MultipleInputForm ++ . Set the step to decimal value if you want a double slider, or to a integer value if you want an integer slider. "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "aa267002dad04c5b86a7dc46d90985f2",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c042909ab3a74413b0fd50d1f8f7f10b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9fbd05c0-ec1f-4bd3-bf37-969a1552eab8",
      "FunctionType": "Graph",
      "Id": "7833ef9d17874eae8bce91a30675dd51",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8ca25c318c504779a599102811ef20f4",
          "Name": "Description_optional",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "473929e272714456810f4572a84fe4e0",
          "Name": "Logo_optional",
          "Description": "var\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58f6197354b549c597713046e92075e7",
          "Name": "ButtonText_optional",
          "Description": "string\nDefault value : \"Set Values\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35e55a63d0fe45208f1c3b2efbf4cebf",
          "Name": "Inputs",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6cea8df13e547379cebe8597889d4b7",
          "Name": "Toggle",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad3a420c4d5b45519cc379d8470fa608",
          "Name": "LinkToHelp_optional",
          "Description": "string\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "293eebba8c8e499c8f751dccbe4b9498",
          "Name": "CancelButtonText_optional",
          "Description": " Cancel button will only be displayed if a label text is entered here\n\nstring\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45f4bd39371548d6a53143a1309b9ce1",
          "Name": "MaxHeight_optional",
          "Description": "int\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "507f9952ed8640e68f7d4738d5878192",
          "Name": "Width_optional",
          "Description": "int\nDefault value : 400",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e65616220f1a482c81a68d21944cbb6d",
          "Name": "LabelWidth_optional",
          "Description": "int\nDefault value : 140",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a5b630d780a47d6878fdc2610ad94bd",
          "Name": "User Inputs",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d47abea943294460aa2ad3c248e1cb0f",
          "Name": "Was Run ",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3409added53b4b67bceeb62d3d8bb3cf",
          "Name": "Was Cancelled",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a form with multiple inputs. \r\nsee www.data-shapes.net for tutorials and infos!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "64e77c7b0f994e878c42913aa323c687",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dc8b710e946f4dc5a6805a2e25965a5a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fefb2c014c34480fb8e335e54aa6962f",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b106dd24fd8848b19b6749a1b90d236c",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "true;\n\"Run\";\n\"Slide to run each beam group untill all beams merges\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f892884bcae441ec8294fcc896c907e5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2ce637aa81d04d26872eed590b0f67f3",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25464bf5044f4d8281ad90adcafd07d7",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a179e1493db34c37adfb05ae27f8c097",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "0cb752704c6a43158f822af8e170125c",
      "End": "11de9dd3ec184ff9b491004a39e5c521",
      "Id": "b5a484bde4264d38bdc15cc7aa6850a2",
      "IsHidden": "False"
    },
    {
      "Start": "afd60cfac41c40fbbd236c1e1b111358",
      "End": "da3aa757ff5943038a5e6b294226e11e",
      "Id": "bfce90fd63304209aa492b8b84073d05",
      "IsHidden": "False"
    },
    {
      "Start": "afd60cfac41c40fbbd236c1e1b111358",
      "End": "4b9f6d1b07c74e83974e4daff1707fd6",
      "Id": "b76919f2bf484795a352fae95de5beb6",
      "IsHidden": "False"
    },
    {
      "Start": "73a23042388740249ec541547b56a085",
      "End": "7e82ea1f8c1946e1bc5b0a72e8a1b807",
      "Id": "c0fe930a134145cb8aa2090555fa6ece",
      "IsHidden": "False"
    },
    {
      "Start": "73a23042388740249ec541547b56a085",
      "End": "32e2e68cdb794a9db20f46129d11d5ea",
      "Id": "f43468a99d32462abe9346a27a8cece4",
      "IsHidden": "False"
    },
    {
      "Start": "c3d5dee0f9b64790802f7d8dc4bc9f79",
      "End": "8171f9f9f2c7436cb5ac7305b7cba0ca",
      "Id": "24c58b9c980a4e41bd321e9ba4df4d43",
      "IsHidden": "False"
    },
    {
      "Start": "c3d5dee0f9b64790802f7d8dc4bc9f79",
      "End": "f4f68b492e524dfeb9e9413dad40fa90",
      "Id": "eb6284b56ce6491ab7f21cccedaef1fe",
      "IsHidden": "False"
    },
    {
      "Start": "c3d5dee0f9b64790802f7d8dc4bc9f79",
      "End": "f5f67221d3354d8fadd684ee19594d0e",
      "Id": "ec2054f7c2284fa393def0d1f8502100",
      "IsHidden": "False"
    },
    {
      "Start": "c3d5dee0f9b64790802f7d8dc4bc9f79",
      "End": "5fca4373e1e74a4dbc1c309aa4d12a53",
      "Id": "2b7021071dd24350b8101b5d0c2d8a12",
      "IsHidden": "False"
    },
    {
      "Start": "876916c2c871451b9722b0186aed1f4f",
      "End": "b70d3ac2091440acbbd15aa1b9209832",
      "Id": "05cedeb587784598aaacf7f1b0156522",
      "IsHidden": "False"
    },
    {
      "Start": "2806804560744615bfc93f63b45c7f53",
      "End": "afb4a88d7a8142178727d2530e1470fd",
      "Id": "7ad73b87acc24a78bc00656cf1dbc506",
      "IsHidden": "False"
    },
    {
      "Start": "9a98ecbab6a245d0958639611c843a55",
      "End": "4d1f527bedcc402b821e4ddccfeab757",
      "Id": "a172ee73d88340e3bccbe89fd39bd366",
      "IsHidden": "False"
    },
    {
      "Start": "8bb9f2e034ec49b6b9eab07b96dd44b6",
      "End": "7d13a3c964ec437d8e4c226a718167d1",
      "Id": "d3d9ed7286bc4d2cadfea9ef50d9b408",
      "IsHidden": "False"
    },
    {
      "Start": "7c9cd316999a4837bbe1367983ff630e",
      "End": "b364290e47834918907c32da91e724a0",
      "Id": "87750686e3744a97b03174fc054fd7c0",
      "IsHidden": "False"
    },
    {
      "Start": "cdea975f763d4bd18666bbe70bea928b",
      "End": "b445a9758d5c4ed38e375eab3638f30b",
      "Id": "fb29ab90b79b48c99387339bae8767b5",
      "IsHidden": "False"
    },
    {
      "Start": "4cea00a2e11d4fbb8446343a9d865cfc",
      "End": "ccef1cbe3cfa4d59b81e8785fc0d7b7a",
      "Id": "2bc30e6b08d240968c75a26b3a95ae57",
      "IsHidden": "False"
    },
    {
      "Start": "f89213afe6914ab7bca08ea7921ed9a4",
      "End": "ca65dff2cd024d6c986aed7b89dcbcc1",
      "Id": "86aeae4667334b1abdda95b4c2bdac47",
      "IsHidden": "False"
    },
    {
      "Start": "f89213afe6914ab7bca08ea7921ed9a4",
      "End": "6fb482f0def74ea8b271fcc96639a7db",
      "Id": "ca8f1a45e343452e973d4e00f7ca255e",
      "IsHidden": "False"
    },
    {
      "Start": "c3b077da233b46e9bfd94ae9c8e06aa7",
      "End": "5d0ce9f718334fdfb2de93818fa069b1",
      "Id": "890ac08353c649639f47aa849367d9f3",
      "IsHidden": "False"
    },
    {
      "Start": "c3b077da233b46e9bfd94ae9c8e06aa7",
      "End": "8c223d73276d41a2b46fb80d9c084110",
      "Id": "e797b02ce99d4408bc66782117e24f64",
      "IsHidden": "False"
    },
    {
      "Start": "a8b36520b67b459292a0c685e5c49260",
      "End": "0a8874193e254c50bbd60f896a04ab19",
      "Id": "009c4b0d9b6647d9bcaadfcb85af5b9e",
      "IsHidden": "False"
    },
    {
      "Start": "ed6d4de59ecf4688ac20c675efeda858",
      "End": "2c83d558334e468eb00d05efd0ed876d",
      "Id": "245de30e091746bdb6513b42fc12f40a",
      "IsHidden": "False"
    },
    {
      "Start": "83b511ebb8d24bc0a5c3789009aed3c5",
      "End": "4dfd1278edae496397e59d0ca11de5d3",
      "Id": "dede1064619842029ff142978cc74871",
      "IsHidden": "False"
    },
    {
      "Start": "83b511ebb8d24bc0a5c3789009aed3c5",
      "End": "affb0ffb607f491dbd79e212cb900b65",
      "Id": "dce3c852d22349159315a74f833c4f63",
      "IsHidden": "False"
    },
    {
      "Start": "97a05d7cd9134280ad8569cddc122708",
      "End": "5f9d44bddc4c4e06b721c584f3de2e8c",
      "Id": "f21a66fae5074492b4255e720e4b3656",
      "IsHidden": "False"
    },
    {
      "Start": "7e3caa5d8b064e68b038339a5cacd821",
      "End": "34af5008813d49f9b175282327cdfa73",
      "Id": "98591b3240dd415faa36569f8db29cd9",
      "IsHidden": "False"
    },
    {
      "Start": "02f50deb8a064d87832beb815fe2d4f3",
      "End": "6cf41e9df0bb451392fc5773384799f1",
      "Id": "c96a86f199c44ee99a74fd3b79905849",
      "IsHidden": "False"
    },
    {
      "Start": "256774ce63794e17b130ef399b20373a",
      "End": "b99d90529cad48e4b084edd3c557b668",
      "Id": "3955d11549fb4896bb801a8abb85a080",
      "IsHidden": "False"
    },
    {
      "Start": "cf118dd825bd46c88cf800c7e62751e2",
      "End": "f500fb1d8561487e93b2133b4741f6ad",
      "Id": "5908622ced80435f84011e73f5162401",
      "IsHidden": "False"
    },
    {
      "Start": "d6e390c1c4ad40e0a04c9df617f99411",
      "End": "9d9474eb7dc647d78756b2cce90e102d",
      "Id": "cef2238815674ea3b3ebd9fa58f061ce",
      "IsHidden": "False"
    },
    {
      "Start": "2ddc47d2d0104a2896a63e0a79e44b91",
      "End": "3b215e775818475486beaa2acc44a5a0",
      "Id": "34345ff33dea4bd78a6f3ab9d0990e46",
      "IsHidden": "False"
    },
    {
      "Start": "abc852f207cd417ea7aecbc5a289b3a4",
      "End": "381a232e88e344c2a812537ed7edff35",
      "Id": "2716ff1f88284d5b99d4da443d16b19e",
      "IsHidden": "False"
    },
    {
      "Start": "25a528bbd85a4d2c9a19d61d287984c1",
      "End": "ab53b2845adf4974b3dca564842e6c96",
      "Id": "1e2aa182126d4eb495f170418c6bf00c",
      "IsHidden": "False"
    },
    {
      "Start": "25a528bbd85a4d2c9a19d61d287984c1",
      "End": "e7f62d8e21c245b9a4e64eb220068fc4",
      "Id": "ffc10cedb79a41e3aede25dd5c975733",
      "IsHidden": "False"
    },
    {
      "Start": "e034f23e4b9049acaff37457b8a7aedb",
      "End": "49e87aca90a6402ca3ebcf0a2425ce21",
      "Id": "896170be1cdf44e8918855ccddf85072",
      "IsHidden": "False"
    },
    {
      "Start": "22d75f1ef667408ba0452de0f256a5da",
      "End": "0b148884c7d744d9ae30ed8cee7f539d",
      "Id": "5861c43864004550ba506e067ce996b8",
      "IsHidden": "False"
    },
    {
      "Start": "f3443f7d54ee4ee68053841ed7269dce",
      "End": "7f488f11a1e64335b6904f95970d5953",
      "Id": "15cb63a29e1747fba4bdf1ea0b4c00f9",
      "IsHidden": "False"
    },
    {
      "Start": "2e665e099dcb40b792277acf5ea6f149",
      "End": "1632812bf9ef4158a10a965824c4aaa0",
      "Id": "d4eb5f91e96e4b94b502c031c5562fc8",
      "IsHidden": "False"
    },
    {
      "Start": "2e665e099dcb40b792277acf5ea6f149",
      "End": "3400050794064fb9a44f6f0d3d1913ca",
      "Id": "05e1081ebaa3463680f8d6c6cf9eed31",
      "IsHidden": "False"
    },
    {
      "Start": "08f612fb37f845b397115404adb28474",
      "End": "0bb628e4b3654902ab4ef30b94749395",
      "Id": "91049152ca624c7f915d0bada2384c15",
      "IsHidden": "False"
    },
    {
      "Start": "3b0e3fe578d7441eb4539ddf6601d5ae",
      "End": "8b4e8e813ad942ed8b937b36f61cb250",
      "Id": "51e667a20afe4a7aa19aecc4841e4afe",
      "IsHidden": "False"
    },
    {
      "Start": "0f792b6d60ec4095b7b986eed0ab4718",
      "End": "2c9782ea92af4e53825c2d905635dc08",
      "Id": "dc81de80cec34a75b107e818d078e4b5",
      "IsHidden": "False"
    },
    {
      "Start": "9e869b8f0fae4d8cbc276aecaacb5a2e",
      "End": "afc352e431264f14909e4a35da28943c",
      "Id": "a7bf7c50b55c4bd5b94390fe4b7f2919",
      "IsHidden": "False"
    },
    {
      "Start": "9e869b8f0fae4d8cbc276aecaacb5a2e",
      "End": "859460931a0543c3b8dc76d89100a98a",
      "Id": "bdf6d2ea0a9b444e93c24e44ddc2b3ef",
      "IsHidden": "False"
    },
    {
      "Start": "8d580875bc654c1d94bc22c06c0696a1",
      "End": "b47f751e4d884804802ba84789c14ba9",
      "Id": "4e34df47fb2b4477a6e2180e154bf970",
      "IsHidden": "False"
    },
    {
      "Start": "8d580875bc654c1d94bc22c06c0696a1",
      "End": "0030efb1d2bd4a1498c1385880a35f42",
      "Id": "57ed2977c3624503895d37cdf297b2d5",
      "IsHidden": "False"
    },
    {
      "Start": "e9a67d70b1e4448c84ce0ef482fccbd4",
      "End": "fff84aba00aa41bf830878236b6dea35",
      "Id": "a68a3505938e404bb18059728c704cc1",
      "IsHidden": "False"
    },
    {
      "Start": "e9a67d70b1e4448c84ce0ef482fccbd4",
      "End": "8f26bb200e284e24977b2d669c84e710",
      "Id": "e1a1882f9bd2456882c4a47777db2d90",
      "IsHidden": "False"
    },
    {
      "Start": "e9a67d70b1e4448c84ce0ef482fccbd4",
      "End": "2a0e77c0b58c4e27bac2f1ebf4c37e2e",
      "Id": "6ca2707c8bc443cfbc848ab2a59a6fef",
      "IsHidden": "False"
    },
    {
      "Start": "e9a67d70b1e4448c84ce0ef482fccbd4",
      "End": "d14d8bb36e634f1882aa9c8d281b4cfb",
      "Id": "a59f040541e04bd4985bc66c7880bb7e",
      "IsHidden": "False"
    },
    {
      "Start": "fe5b66e8f3a245cf93ab9b38c316feea",
      "End": "0735bc48356142039cb6467b63cdccd1",
      "Id": "3a9e266289484561ab96ed3412484bb1",
      "IsHidden": "False"
    },
    {
      "Start": "fe5b66e8f3a245cf93ab9b38c316feea",
      "End": "c23750954941408a815eabdd860add0f",
      "Id": "f89866b7c06743b8b886ea1222ae1eca",
      "IsHidden": "False"
    },
    {
      "Start": "fe5b66e8f3a245cf93ab9b38c316feea",
      "End": "e37ba8e9622a4cffb53ef3cbe3bc79ab",
      "Id": "7a56ee491a444fa6806279ffcd8a1980",
      "IsHidden": "False"
    },
    {
      "Start": "fe5b66e8f3a245cf93ab9b38c316feea",
      "End": "e8f78f968b4b4a97b5452a8578f38d44",
      "Id": "9780129fad5b4ebabacd689513594048",
      "IsHidden": "False"
    },
    {
      "Start": "a1c4787a447d4ec283a66eb806300990",
      "End": "4ccd7a792c414288b7a4335e33c87429",
      "Id": "c38ac833e4814340bcddc040d396550e",
      "IsHidden": "False"
    },
    {
      "Start": "a1c4787a447d4ec283a66eb806300990",
      "End": "a5eff127cd6b4dee8d1b2dd6c8fe43cd",
      "Id": "0fd29a6eef5b4cd88f533fc466e3c954",
      "IsHidden": "False"
    },
    {
      "Start": "20328956d9fd4d6aaae84e54039c024a",
      "End": "2b94b021382743048d4c5790a17e8e87",
      "Id": "cfb8c20212384065b6cec0450ce05382",
      "IsHidden": "False"
    },
    {
      "Start": "20328956d9fd4d6aaae84e54039c024a",
      "End": "1391d5788d3043a98e6034bfe23d7544",
      "Id": "22b61da0dd7545b0b34e0d11424eb571",
      "IsHidden": "False"
    },
    {
      "Start": "1f0aa034a29943f2a40f263fc59d7961",
      "End": "00a4b1cc2c6a45d0bff53974481a4624",
      "Id": "c17c8b940f0946cf99341f8ff901e2dd",
      "IsHidden": "False"
    },
    {
      "Start": "f7650a44cf7043e591ddc9addae0a544",
      "End": "3ad5241970e3417e88e33ff3cfac8333",
      "Id": "0378a86d283b4ff3bc2506ab3919a899",
      "IsHidden": "False"
    },
    {
      "Start": "b03229bbfb124588b70a03cdc0ea5085",
      "End": "d80f47f1f6f44fda8c7573a234d15b51",
      "Id": "5a131f37c08e49a090fc490206054e34",
      "IsHidden": "False"
    },
    {
      "Start": "b03229bbfb124588b70a03cdc0ea5085",
      "End": "b227ccf364b8444793dbece49dbbbb59",
      "Id": "799e47adb42d448aa1c6529ca259c39f",
      "IsHidden": "False"
    },
    {
      "Start": "ab65eb1f9fcf4a87807f3e1ff48e5f7d",
      "End": "25464bf5044f4d8281ad90adcafd07d7",
      "Id": "f3f272b04dae4582b7ca9cbbc8fc62c8",
      "IsHidden": "False"
    },
    {
      "Start": "ab65eb1f9fcf4a87807f3e1ff48e5f7d",
      "End": "d32b437267e349469e64077c6614a32c",
      "Id": "6e2aba66ce22446fa53638e2adda20a6",
      "IsHidden": "False"
    },
    {
      "Start": "046a1464109d4440b4d13d51131cd601",
      "End": "09339bab0c6744c3a2616ec9ea3a7c6f",
      "Id": "21b557211f4c4c8c8f486e9de7b98e74",
      "IsHidden": "False"
    },
    {
      "Start": "e308598b8b674354b6cec7f0725f5d1d",
      "End": "723531c3a37848b0897e500cff07b4f1",
      "Id": "e2c069d62c574eb2977c1bc2d492c73e",
      "IsHidden": "False"
    },
    {
      "Start": "02f94c782a0345f5bdfd5d2eab5bc688",
      "End": "09cb728b74024f239bca00af5560e73c",
      "Id": "e884c5fa2b054b1fb45c6ec3839df23f",
      "IsHidden": "False"
    },
    {
      "Start": "579a84be646d4b34bd7e0688d8eb4a2b",
      "End": "59a7dcfd7f624933a216ce5606488152",
      "Id": "27aff5736f414d25a860376a2773cb29",
      "IsHidden": "False"
    },
    {
      "Start": "073dd8774ec8407e9bd77581d8d0ac79",
      "End": "bd553fe3cbe446e8a81d97843a70f14a",
      "Id": "5c17ef10002c4c7589154e75a8836d11",
      "IsHidden": "False"
    },
    {
      "Start": "4e45cd7cd588400b9d023826232a798b",
      "End": "d062773b6d9a420686574f1a4fa4db85",
      "Id": "97712dfc984f4e0b8bbf3c7d1e036845",
      "IsHidden": "False"
    },
    {
      "Start": "eda59c9613464f87ae49e4b381e8047a",
      "End": "fd22a0d1f00b49198eb09e32a90a5a13",
      "Id": "79923ced87e2420b9efbfe7b6659e699",
      "IsHidden": "False"
    },
    {
      "Start": "eda59c9613464f87ae49e4b381e8047a",
      "End": "9a24561bb0a744618b095a96a8d5e2c0",
      "Id": "d21325b8dc594d7fb942c64568df2d85",
      "IsHidden": "False"
    },
    {
      "Start": "12996f37e714418ea593e5978f23014d",
      "End": "76cc21fd9711434787020db6861921ed",
      "Id": "2b7f0a27a0e0499ab1a489a7c28e3397",
      "IsHidden": "False"
    },
    {
      "Start": "4dd0e352c51f49f59cfd6a478390bfa5",
      "End": "76102c3d475d45cda47f592cfc67fb86",
      "Id": "161539b7b9cf4f7f98a8e8cc2dc49eda",
      "IsHidden": "False"
    },
    {
      "Start": "cc9cb2d5a1434dff8e6a4723500fbd44",
      "End": "15fd904f16754c27aaf4b50056886ede",
      "Id": "ed1d17aaedea417987e15eb4b699ec97",
      "IsHidden": "False"
    },
    {
      "Start": "ced03672d8624e63bb4716ae93b2289d",
      "End": "db72104a89b048a2b92e38d924f5374c",
      "Id": "5ffa747962244582ac3751877499c606",
      "IsHidden": "False"
    },
    {
      "Start": "067b2f57ebbd470a8f178e3dd3557543",
      "End": "3af3ffd6b0954d8c84714ee9983417b8",
      "Id": "317aaafbf80446f99e7ee70f7053ee83",
      "IsHidden": "False"
    },
    {
      "Start": "067b2f57ebbd470a8f178e3dd3557543",
      "End": "d0d73d318f5f445f8eed05f4ddd64979",
      "Id": "c0496e27f257440f8ea3b0a40c47a371",
      "IsHidden": "False"
    },
    {
      "Start": "eb35584f9ef045918ff1b19b827dda9a",
      "End": "307f81e7a8454c6e88060a8d32fce384",
      "Id": "b04cd406c5b24368bbf81569bdef7575",
      "IsHidden": "False"
    },
    {
      "Start": "f17d642541a84484bfcd61d670dde045",
      "End": "86a09114b5e04c4189d6bfee1eacfd00",
      "Id": "a2e3cd3926ce4f77afd9da8e3914978f",
      "IsHidden": "False"
    },
    {
      "Start": "2cab48113fdb4e8b82153e6722ef068a",
      "End": "de0b4e2c18254e7e9db86c7aafee4772",
      "Id": "7454d071d312421c96dc48971e31ff38",
      "IsHidden": "False"
    },
    {
      "Start": "2cab48113fdb4e8b82153e6722ef068a",
      "End": "a2a5506e6d204ac6be8f818ab49996b4",
      "Id": "d53379bd945041329184ad1815612dec",
      "IsHidden": "False"
    },
    {
      "Start": "2cab48113fdb4e8b82153e6722ef068a",
      "End": "b9372c25e97443ccad950545623c3fe1",
      "Id": "6456506ba0a1432db199b529bf385abe",
      "IsHidden": "False"
    },
    {
      "Start": "6b39af3a5998405c9fae3f6d1e7ae61f",
      "End": "4fcc9a6d5e0c4c1eb15591c253c7273a",
      "Id": "44028111f856474c95d4e1afa30f12a2",
      "IsHidden": "False"
    },
    {
      "Start": "286fa232c5a94828860bf6c1d77a206b",
      "End": "58f027b40227480ea4304101fad2e3f3",
      "Id": "b7d6db92f2e44a19a860642d4289c767",
      "IsHidden": "False"
    },
    {
      "Start": "286fa232c5a94828860bf6c1d77a206b",
      "End": "0d4cfa38d0cf417c8c839812e7755b28",
      "Id": "b05fde19100e4e0ebbf71388f8d5654d",
      "IsHidden": "False"
    },
    {
      "Start": "286fa232c5a94828860bf6c1d77a206b",
      "End": "8cd05ff8339e4a1fb3d78d82a8fa64f5",
      "Id": "1dbf8beb476d4de5b9b8bbeef97a9660",
      "IsHidden": "False"
    },
    {
      "Start": "2c488eb33f234bbfaffce5d407ace8ba",
      "End": "901129a10e1c417cb20c39f78a4faa7c",
      "Id": "ff92088927fd4b8fabeb7210239ea295",
      "IsHidden": "False"
    },
    {
      "Start": "7119ceadd80247ce8d1256d187ae2094",
      "End": "d238192cb9a049fe99fdf5b78dc37c05",
      "Id": "5965fee13e9a4089b54e0700106b6d27",
      "IsHidden": "False"
    },
    {
      "Start": "8b74777df7754cfe99f618b6fa4414ee",
      "End": "3af6995da3cc414482d76b8bf01d395e",
      "Id": "40abe868e4554bea859ced73f250efe0",
      "IsHidden": "False"
    },
    {
      "Start": "d0510ac940be4080a2cd2f2bf76c6e79",
      "End": "bf89506157ca4bccb2ed26807fb0bc28",
      "Id": "7fabf62c7114491ab1f6855537db0767",
      "IsHidden": "False"
    },
    {
      "Start": "7514369f34504feab3fd8289ccaab28a",
      "End": "4a102220f10a4d16a23e633b3db944a9",
      "Id": "6655adda2d184088a675eb700e9b0e03",
      "IsHidden": "False"
    },
    {
      "Start": "af693b24c00a49ee8387ddd6a6eb37dd",
      "End": "96fe6dc1d5ab437cb55f679b1d3e970c",
      "Id": "1b67be128b1f40b99f3a1e7a6c8fccde",
      "IsHidden": "False"
    },
    {
      "Start": "af693b24c00a49ee8387ddd6a6eb37dd",
      "End": "b45043aa8dbd43c9b015109b1aa46b61",
      "Id": "73bf9efd5e1b4204a2d59e7702f8320f",
      "IsHidden": "False"
    },
    {
      "Start": "0e37d5f788c64302be5f6133ab5c838e",
      "End": "c0a662e48a1a474290a7f12a4693e363",
      "Id": "fe76574c7b674e1a9252f5a88db2634b",
      "IsHidden": "False"
    },
    {
      "Start": "0e37d5f788c64302be5f6133ab5c838e",
      "End": "870ae0f204ec457191646f7c4245839c",
      "Id": "3516debf7ab142ac8dda4b06fdd0e9cc",
      "IsHidden": "False"
    },
    {
      "Start": "ea9693fe48fd45f6a3d7c997ca89720e",
      "End": "269a94633ed245fbaa30905cd28714df",
      "Id": "9129c65247d34f9f955956f39302b2f0",
      "IsHidden": "False"
    },
    {
      "Start": "ea9693fe48fd45f6a3d7c997ca89720e",
      "End": "5e57c560ebc44cf781c0ba759d2c04e0",
      "Id": "75b1ce975a014262847ebf52eee2d220",
      "IsHidden": "False"
    },
    {
      "Start": "de7843b12a1049fe83f6620354d164ed",
      "End": "f63300b87da9449595b7b1aa50398de1",
      "Id": "c7f8f62ecf184e61a838bd500388470a",
      "IsHidden": "False"
    },
    {
      "Start": "de7843b12a1049fe83f6620354d164ed",
      "End": "c746d112ca584488a8c2f75604542169",
      "Id": "3f2e9b9463bb4b67b5d943d1eb0f3ea9",
      "IsHidden": "False"
    },
    {
      "Start": "c89c715411a842fbad2b44444a321421",
      "End": "77a356254b6946b687fedd69234ea222",
      "Id": "7fc4ffb14e6543e4bf98fa7f286e722c",
      "IsHidden": "False"
    },
    {
      "Start": "48dcb5a45b014676a4959b3c1ebd3145",
      "End": "b111d5f2415a4466a9f9c01e5e53b3a6",
      "Id": "32ad646864584d34a3c3eabe2747f9e3",
      "IsHidden": "False"
    },
    {
      "Start": "b4c1d6f08d624ba89874bf4ab2d1126c",
      "End": "115fd28b5c8543e6b46fd7a8ac7b7548",
      "Id": "fb38e2b493c54d0ba6c2fc6a9bd2edce",
      "IsHidden": "False"
    },
    {
      "Start": "1c54cd1497434a8f846233100a5fe9c6",
      "End": "b81ddbf4918440ce8f5f283112b70c88",
      "Id": "0fdb61bd654046ed988409a2bf57135c",
      "IsHidden": "False"
    },
    {
      "Start": "75660efd41954bd09ef2d2823f5b99bc",
      "End": "a208e12c18424991a4e68ba7f3fd0be4",
      "Id": "37beba9502564d11aab36afb59db9b19",
      "IsHidden": "False"
    },
    {
      "Start": "75660efd41954bd09ef2d2823f5b99bc",
      "End": "f8a336d418204870b379369647f47a1a",
      "Id": "19a246799a754aaab971cad9d32860d4",
      "IsHidden": "False"
    },
    {
      "Start": "75660efd41954bd09ef2d2823f5b99bc",
      "End": "abef7a71e0a34daebf0bb98fa721088d",
      "Id": "f015197ab3c543c3b72c3f42c545ea86",
      "IsHidden": "False"
    },
    {
      "Start": "c3c9be86472942e99c0517bf5170df0c",
      "End": "3fdae4a0615d44a087ea17366af858bb",
      "Id": "c1c566afe3f346a48e402a2b92fcc7e1",
      "IsHidden": "False"
    },
    {
      "Start": "c3c9be86472942e99c0517bf5170df0c",
      "End": "98e2c388874b4e97a3e51a20cbd12f77",
      "Id": "ad87d45daffd452b8c697e36ba9ad516",
      "IsHidden": "False"
    },
    {
      "Start": "bd6067604b3249698ac1e79f89eb332f",
      "End": "031867014ac04521952a70157c13e6a1",
      "Id": "e18494648dc44fcb8c89c6e96a1fbcf1",
      "IsHidden": "False"
    },
    {
      "Start": "c3c76e8cc48f446a856da28b30440699",
      "End": "8ed003be62d44b8a87164797bc264730",
      "Id": "7c78d8dd3d28479687365961bc4e9148",
      "IsHidden": "False"
    },
    {
      "Start": "922b3582acf54361bb282fd9bfd019eb",
      "End": "82d395ae47d14f38bb47aac604b2b273",
      "Id": "3e290f08225849049223a41c1ff6627b",
      "IsHidden": "False"
    },
    {
      "Start": "7917b08d43c346bc8c8344289b140605",
      "End": "2e0975354774486bbbab76edcc3c1bb9",
      "Id": "0b6f9168954d472a944f6f06a718d1cb",
      "IsHidden": "False"
    },
    {
      "Start": "509305050bf9487b934ffa01f2ca3775",
      "End": "2af565ed498e469ca29054be0c4e5fe1",
      "Id": "01851e6fdf7a4ea88468a5472c4e2d3e",
      "IsHidden": "False"
    },
    {
      "Start": "ff9bd3c549714aff901baff096d0f5ff",
      "End": "9b478fb70a4344d7873a7015b2963975",
      "Id": "b960378da24e4d0c90f25fc1b69921d2",
      "IsHidden": "False"
    },
    {
      "Start": "3b1d13a7b24149cfaa9dbe6346763561",
      "End": "dcd485f4df144aceb6f74a5d948ebed4",
      "Id": "e49a7005233c407abe53d0c7ffe1b749",
      "IsHidden": "False"
    },
    {
      "Start": "137faf60d3804d20b504ee0fa74fd7aa",
      "End": "f0bb4819b19f431fb6b5ae8f2bb95976",
      "Id": "7069c44ecb9045d88f65463f932f487b",
      "IsHidden": "False"
    },
    {
      "Start": "c639048dc57242e3ac35b778af8dee16",
      "End": "5d59a44693fe4ec8b520b2906c35ba95",
      "Id": "b00d84194e1e421fafeb823b1db95a65",
      "IsHidden": "False"
    },
    {
      "Start": "c639048dc57242e3ac35b778af8dee16",
      "End": "339d82e9283848978cdafc292737b9cf",
      "Id": "a77e0e2e8d5044649ba996be61f68af6",
      "IsHidden": "False"
    },
    {
      "Start": "d621064bd18b49da82b4b4f6dd88434a",
      "End": "1bd5b94980704869ab11ca9bf4a9e41a",
      "Id": "fe621a0493da43f08cd8f76bda69b7b7",
      "IsHidden": "False"
    },
    {
      "Start": "79b2f08046644754a6539c89a95462ba",
      "End": "262398715e5b47fa90c4d2c5d8ed764a",
      "Id": "426306c549794578af15982720d86d8f",
      "IsHidden": "False"
    },
    {
      "Start": "79b2f08046644754a6539c89a95462ba",
      "End": "58ed8e0c1acd4e3c82e06bfb5f198395",
      "Id": "203600af452d4c2a933e44c21ae6cfdf",
      "IsHidden": "False"
    },
    {
      "Start": "79b2f08046644754a6539c89a95462ba",
      "End": "db25f73c6d6f4827a68bae57744334f4",
      "Id": "ac660ff88e3741f9bbf5f271b638a1fe",
      "IsHidden": "False"
    },
    {
      "Start": "51235aedc80f4fb58af9aa24cdf8c325",
      "End": "c986d232f21c4ad682a004d7a367edfb",
      "Id": "3b4dbef5bd6142e5b47d530883a76873",
      "IsHidden": "False"
    },
    {
      "Start": "5b3e7f5e4e7749afb7727eae1bd1d195",
      "End": "963121e6a2d1440e842d4ff1632453a2",
      "Id": "564ca05a66994216bd44fa2650775f29",
      "IsHidden": "False"
    },
    {
      "Start": "5b3e7f5e4e7749afb7727eae1bd1d195",
      "End": "5ddfdf20e03a4af78faf3baaed99d397",
      "Id": "48720e26df144ff8a7f58402ed0514d5",
      "IsHidden": "False"
    },
    {
      "Start": "2731972fbd174450b4fddef3e87b68b8",
      "End": "eec9b36158cc4b1d9087b132de3797ef",
      "Id": "e4d4b81b149c4885a72898151b307591",
      "IsHidden": "False"
    },
    {
      "Start": "2731972fbd174450b4fddef3e87b68b8",
      "End": "32d8d4a05905429b8d499b1ac0481a01",
      "Id": "1c4e6ceaf631455099504beff45b0a52",
      "IsHidden": "False"
    },
    {
      "Start": "b4e8836a38b643c3a894f193c3f27ade",
      "End": "c748a87235f34f2cbf32e30f3069b5b4",
      "Id": "1c6305dfb10249e0b1de865270753ff0",
      "IsHidden": "False"
    },
    {
      "Start": "c8bcad4121cf441cb4c2056d60f5f540",
      "End": "7ee17323109947c9b7cd964db433c975",
      "Id": "ce3c80d4640e436aaf9c6469b1fb9a72",
      "IsHidden": "False"
    },
    {
      "Start": "23a69b283c8d4d159f877931e19367d7",
      "End": "87d6dfb3ca1b42868880b747d75ed375",
      "Id": "942b02204ebc47d483b7b9f8b58ec7f0",
      "IsHidden": "False"
    },
    {
      "Start": "23a69b283c8d4d159f877931e19367d7",
      "End": "ba43158f524e4a1ebb09d83eef1a2123",
      "Id": "4391bfcc764b4e94b75fb02292adcbea",
      "IsHidden": "False"
    },
    {
      "Start": "ff620fc105a946aeb0d4df351a02d131",
      "End": "68f9cff9e39044b3a674b6409873c931",
      "Id": "87a925d4f9d148eda944d5135d40bc9d",
      "IsHidden": "False"
    },
    {
      "Start": "ff620fc105a946aeb0d4df351a02d131",
      "End": "1e6c65b69f994224ba27b184fa89e3ed",
      "Id": "d23f8862374e463c8ed0c255368ee347",
      "IsHidden": "False"
    },
    {
      "Start": "25a5a983f153446b98874ac7382c6bbe",
      "End": "23faf9f274774f8d81e696a64c39c0d4",
      "Id": "1ff039d5dfa64e2b87afcca1f698dbde",
      "IsHidden": "False"
    },
    {
      "Start": "50a10e84c3d047b98dec14a142fbeb34",
      "End": "4c12016f0c3b48e388ee709bbf53f5c7",
      "Id": "53588e3d041a40268f1a830a5fc60ea4",
      "IsHidden": "False"
    },
    {
      "Start": "885186f365ae4687b2df2372f4fba066",
      "End": "1386aad9e3b04781b55335671fa59f25",
      "Id": "c284dd2583d34c1db5345446f2e6f6aa",
      "IsHidden": "False"
    },
    {
      "Start": "885186f365ae4687b2df2372f4fba066",
      "End": "f4c393544f5144668e763f2e2499cf37",
      "Id": "db554fa7dbfa404b8d7d54619adacec6",
      "IsHidden": "False"
    },
    {
      "Start": "74ecde77599c42b489a40280a6f8e71f",
      "End": "37384ed16c224e0fb3eabe6beb0f8856",
      "Id": "a0574242b70140fe9fda09977fe9107a",
      "IsHidden": "False"
    },
    {
      "Start": "74ecde77599c42b489a40280a6f8e71f",
      "End": "378257c952b549ba9bbb6d02a7dfb24f",
      "Id": "bc767ffcac3c4da188e09c222d3627ef",
      "IsHidden": "False"
    },
    {
      "Start": "0a296171f5e843768dde968706b7fcb9",
      "End": "8efdd2218267450ea0c7f6d8314f2840",
      "Id": "51831876d59846dba275b6d680ea8491",
      "IsHidden": "False"
    },
    {
      "Start": "50018b6fe4394dfcbd66f5bdd896235b",
      "End": "954bbf0d2ff94fe9bd45489cbdb10ba1",
      "Id": "8cc16d2f9c9d496f959fbf35d8330441",
      "IsHidden": "False"
    },
    {
      "Start": "ead53defef334c4fad7dfea3deef63be",
      "End": "ca95e20550494b4a8890ee5da79c06d6",
      "Id": "976c8a6632a84be9a0b69dcc3e2da20f",
      "IsHidden": "False"
    },
    {
      "Start": "e471f3d39e2042aab724ed9def983c2b",
      "End": "98c1d0d8285648b4818e1fb8b6c86e0c",
      "Id": "9e65d203ebc546bfb50e5ead2c768645",
      "IsHidden": "False"
    },
    {
      "Start": "06bf53b6aceb42bea540c2ab38b75fe4",
      "End": "4a04ea63276642ac968d51d3b762ca21",
      "Id": "0a462056b75b4f41b46a3241256265d3",
      "IsHidden": "False"
    },
    {
      "Start": "06bf53b6aceb42bea540c2ab38b75fe4",
      "End": "efd9bc7e5865440999cacf9dc3f400aa",
      "Id": "d9f446fe32c64679905c165bbe0ecf57",
      "IsHidden": "False"
    },
    {
      "Start": "3d1896b56dc941cabebfca2a15651b8f",
      "End": "682d14d2a7bb4a9da304a4db5da698b4",
      "Id": "9cc668ecfab24fa393519888e0ac84f7",
      "IsHidden": "False"
    },
    {
      "Start": "fcdf1bd52c034d54a90f19ce2b84c5fa",
      "End": "d893c150f6d04efe961a0cbbb14dba7b",
      "Id": "70705b3c73e84f8095e3715d9e66b25e",
      "IsHidden": "False"
    },
    {
      "Start": "ddba2b7ee97f493e94216c9ba9845fb8",
      "End": "a57ce56bbb8141e6afd658e291a4501d",
      "Id": "25ffa149f82a4d76b693b2db8d252906",
      "IsHidden": "False"
    },
    {
      "Start": "ddba2b7ee97f493e94216c9ba9845fb8",
      "End": "5d52a0d0161741d481557b8b31aa911e",
      "Id": "abeba6f8aed94acd9dcec0e9a3b2bb1a",
      "IsHidden": "False"
    },
    {
      "Start": "930f7ed89afc41008d57c015702a8bf3",
      "End": "9d35976063174a278fbc9732c8b6b092",
      "Id": "f8c31bcd2610473c82b870ebbb7a1a31",
      "IsHidden": "False"
    },
    {
      "Start": "d5b73daf0bb24395a5f52a576cf2ac21",
      "End": "a5b42a32526849a1999b3fa628fbe667",
      "Id": "5271ae034d264c5fbd046139e4d7d5c7",
      "IsHidden": "False"
    },
    {
      "Start": "d5b73daf0bb24395a5f52a576cf2ac21",
      "End": "81ad908766d348cfa29ac7df73d1bc40",
      "Id": "4b428d32bc1548868f84d109adaed315",
      "IsHidden": "False"
    },
    {
      "Start": "d5b73daf0bb24395a5f52a576cf2ac21",
      "End": "91a26f10cccd46fab41f3b06141b1023",
      "Id": "55c217d5e49244dc864988a0a56de570",
      "IsHidden": "False"
    },
    {
      "Start": "6779146baf12487aa3b407742cd19620",
      "End": "bb3bacfc64704047aa6e799c3b653565",
      "Id": "334e8267a37c4a4783db4bc20b351785",
      "IsHidden": "False"
    },
    {
      "Start": "6779146baf12487aa3b407742cd19620",
      "End": "e0380cb8ed494c9f9e34083c60b7b5f7",
      "Id": "36c3b8c04f43472480fe4bbbe91cb04b",
      "IsHidden": "False"
    },
    {
      "Start": "713efa735ae34eec9ef5ed8d4d7257d9",
      "End": "e917dd3f1c0c40aca599f5ad3bee464c",
      "Id": "5976a611df264c65bf3183b1cacb8562",
      "IsHidden": "False"
    },
    {
      "Start": "713efa735ae34eec9ef5ed8d4d7257d9",
      "End": "5541768ee5e748b1b2a42459a2cfee92",
      "Id": "2859c87952934408b3c05306b980fb62",
      "IsHidden": "False"
    },
    {
      "Start": "a0bdfc79237a4818beb97f10666d5b7d",
      "End": "a73c78e145c64fd7884f7b16abf44355",
      "Id": "5e8ca6a6faa44f73b71d40886b7d59a5",
      "IsHidden": "False"
    },
    {
      "Start": "6c12fd27b30f40f58f6d0f70924ee1b5",
      "End": "f7e4351452d147dcaedb720a2d0529c6",
      "Id": "b96420a4e65d4caeb2ab1d3fab1a3c32",
      "IsHidden": "False"
    },
    {
      "Start": "a8974a3ec0ea45baa9c8c31e0ec5f736",
      "End": "c046369e801a48a1bd8dd5da8aa7f528",
      "Id": "3747b1704901459e986050046b909064",
      "IsHidden": "False"
    },
    {
      "Start": "ee39db7df2ca4d6bb823f685ddf3adee",
      "End": "e0e7106a90a448f686ade18cadb7ad5b",
      "Id": "c27b7c42d35c4361a712d48415cc6625",
      "IsHidden": "False"
    },
    {
      "Start": "ee39db7df2ca4d6bb823f685ddf3adee",
      "End": "b5e522b824b94c18872ee6c949cb23a2",
      "Id": "d8b74fc9d7f34c989f3b608d60501322",
      "IsHidden": "False"
    },
    {
      "Start": "ee39db7df2ca4d6bb823f685ddf3adee",
      "End": "8ba35e57b3e54c35a808e8edc93701c5",
      "Id": "633742c5af9644b39fcde467421c75f5",
      "IsHidden": "False"
    },
    {
      "Start": "ee39db7df2ca4d6bb823f685ddf3adee",
      "End": "227eda0e56644495b596dc654f23fcf9",
      "Id": "0dfdd3f92a9d49baa021d7a8acbda8a5",
      "IsHidden": "False"
    },
    {
      "Start": "48357e46e2aa48fb972b7bd7422b4f6f",
      "End": "61f32ac6c4754f52a544a66ba26bf02a",
      "Id": "f49d42b2df724a54a9b9f7abc7c7de8b",
      "IsHidden": "False"
    },
    {
      "Start": "48357e46e2aa48fb972b7bd7422b4f6f",
      "End": "e4a7ee1e0843490b910aa8aa0e322d90",
      "Id": "4c8d1371ec5549fdb7e09e724ac6d17c",
      "IsHidden": "False"
    },
    {
      "Start": "48357e46e2aa48fb972b7bd7422b4f6f",
      "End": "373b42f148074937b42dea0c7756e79b",
      "Id": "8763e8f2c507470bb2cdbb2b7cca6d1f",
      "IsHidden": "False"
    },
    {
      "Start": "48357e46e2aa48fb972b7bd7422b4f6f",
      "End": "d1bbfd18c37140329c45b37a803ffaae",
      "Id": "88bf7f3f03ac4fe3bb4891aed4b834a9",
      "IsHidden": "False"
    },
    {
      "Start": "3383b686405144e8a2f8a15f567489d7",
      "End": "cc2f041590ae432389db12930baab472",
      "Id": "627375581d2045d2b954b9b5f5588d48",
      "IsHidden": "False"
    },
    {
      "Start": "3383b686405144e8a2f8a15f567489d7",
      "End": "0ce2c8e35dec443b8ed0dc6a6f13809d",
      "Id": "ca2993a4ddf64d9c84217d915b47399f",
      "IsHidden": "False"
    },
    {
      "Start": "55d3dd51892e4a808f4a8b8b019d40d8",
      "End": "9a30bd4a5e684050a0ffbf4e6ad037af",
      "Id": "a7a93a61f40049c3b5e482fdeada7ee9",
      "IsHidden": "False"
    },
    {
      "Start": "55d3dd51892e4a808f4a8b8b019d40d8",
      "End": "74b8c736202244e5a5962977c5630949",
      "Id": "13600d8ff1974ee18afb724d61a1312e",
      "IsHidden": "False"
    },
    {
      "Start": "00273bca6ea34e139b5426b2f22153a0",
      "End": "5b92788ec3284e9ba3ea3e2a83d8705a",
      "Id": "f5a72cbde3a145419971f3b5162f8d96",
      "IsHidden": "False"
    },
    {
      "Start": "ea11125e9fa14ca98f6b462d3f138777",
      "End": "177b8a8ee1a84b5d8ed590593bdf1ae8",
      "Id": "49d30dd672da4de98dc94e63a1ff86b3",
      "IsHidden": "False"
    },
    {
      "Start": "534eee5306f44b59878b51df1ebf6543",
      "End": "1146c39a9b84446091b106481a9bb7e3",
      "Id": "a96b13d849cb45f6b232fee72f868bec",
      "IsHidden": "False"
    },
    {
      "Start": "534eee5306f44b59878b51df1ebf6543",
      "End": "a4cd5a68ebfb432d8e3f2de7cd081720",
      "Id": "af61f53ee7384d62b43385e92a515d43",
      "IsHidden": "False"
    },
    {
      "Start": "2b1b6eb661bc4af380dbae71081b8522",
      "End": "5f63bac916f34e93baed706c34aca8e9",
      "Id": "65b93085e8d748e6adf92f36aed3f6a9",
      "IsHidden": "False"
    },
    {
      "Start": "2b1b6eb661bc4af380dbae71081b8522",
      "End": "ae25ea50c1394344a08a5bd7b6fcf133",
      "Id": "c0d68566ca6848fc95176d0cfdc87614",
      "IsHidden": "False"
    },
    {
      "Start": "38556c81f1e14e7aae98b23a92a0aadf",
      "End": "636de238cb4b4d03a16cf9ce3fd3e0aa",
      "Id": "7bfa446a1fcc44d1a79096ced81669e6",
      "IsHidden": "False"
    },
    {
      "Start": "38556c81f1e14e7aae98b23a92a0aadf",
      "End": "4aba3e2609f34ded82a6f4a45e904371",
      "Id": "5604224db8eb4cf4a3ac9b4750fc19e3",
      "IsHidden": "False"
    },
    {
      "Start": "c011796e8d8a49609463c9095924ba07",
      "End": "81557fa11a1b41efba71485c005a79b7",
      "Id": "deb2e63f7bd74cb29501c63a3d63c8cb",
      "IsHidden": "False"
    },
    {
      "Start": "cf7aa21109f04991abc23be887d4cc57",
      "End": "46470a5d9f474f3a8c8200aebda20e3c",
      "Id": "5503cc43ca5645ca823bfa721d89bcca",
      "IsHidden": "False"
    },
    {
      "Start": "405eb05232bb4f9a971760f2cc1676be",
      "End": "bd2165e814b849a6a23bcadee43bdd77",
      "Id": "5a313a30de7048828debe9ed30453cc4",
      "IsHidden": "False"
    },
    {
      "Start": "405eb05232bb4f9a971760f2cc1676be",
      "End": "471befec8a7748678f4bbd0c17a19057",
      "Id": "16e4dfc5265b4b2eaf80057dc80321d2",
      "IsHidden": "False"
    },
    {
      "Start": "ef52c27245c2404ea08cc06de950dfd2",
      "End": "76cdb8fb15b24ad0ba04207b985c7afd",
      "Id": "4aea2606a4b0406696b7e0ab3d70fe3c",
      "IsHidden": "False"
    },
    {
      "Start": "ef52c27245c2404ea08cc06de950dfd2",
      "End": "d21857572b824c65905d5016fdda169f",
      "Id": "9669a12c57d144959e23b75edb9d3270",
      "IsHidden": "False"
    },
    {
      "Start": "ef52c27245c2404ea08cc06de950dfd2",
      "End": "02d4a0a20e784c39ac083d0387b410c0",
      "Id": "36799c1ae0074af7951661ecb20912cd",
      "IsHidden": "False"
    },
    {
      "Start": "ef52c27245c2404ea08cc06de950dfd2",
      "End": "b7a35956b93f4c42832b6036d94647d5",
      "Id": "2ee5479e79f64f71a513197363a13ab0",
      "IsHidden": "False"
    },
    {
      "Start": "cd364ece28a44042ba67176fc098416d",
      "End": "105c2f86a32246bd9cb16285c6fefe72",
      "Id": "412bfc412758408dbc28941a53ab5d8d",
      "IsHidden": "False"
    },
    {
      "Start": "c4048ef2710a4c8ba941b60f424f8b99",
      "End": "289142604fbc45dab869d5d1ebb9d9c1",
      "Id": "e3f475c0f133440bb709cfea8dcd5a39",
      "IsHidden": "False"
    },
    {
      "Start": "7b3aac33dd2c4f82a0b7d472c6c292af",
      "End": "b9efa6d5b328402cabcac973a0a60be7",
      "Id": "e85facf85cc8420cb6e7fd461d77ab7d",
      "IsHidden": "False"
    },
    {
      "Start": "7b3aac33dd2c4f82a0b7d472c6c292af",
      "End": "c59de430944c44fa83bddb298e750728",
      "Id": "c061ba838b7e4c469111d8ffa7476a1b",
      "IsHidden": "False"
    },
    {
      "Start": "ad00d81ed1594989a333582084fc5d88",
      "End": "67ecc248483c4f1aaf3da4128f185c6a",
      "Id": "7c34b03bea414d50bafd7bb83585c881",
      "IsHidden": "False"
    },
    {
      "Start": "89539af15b85400da975af1b4c255b89",
      "End": "b2cf292079ba4e82a0487841a8f0b296",
      "Id": "60f2e4c884034c93b57ee68daeb09bde",
      "IsHidden": "False"
    },
    {
      "Start": "f7dfdbd7291b4c5fbc01fe2b4ebb7e8f",
      "End": "0217ad6f942c479588d1688e89869d59",
      "Id": "62d2ce386eb9477491ab015c63c3bb7e",
      "IsHidden": "False"
    },
    {
      "Start": "801b5f778d1d4b239d7b7686f9eff3ab",
      "End": "e6ec52e9bfce4500b2fce22521ea2458",
      "Id": "a2403dcf8d7e418b9d7e64b7053052cc",
      "IsHidden": "False"
    },
    {
      "Start": "801b5f778d1d4b239d7b7686f9eff3ab",
      "End": "3ec73e7b8b584593980480762678f1e0",
      "Id": "491eec29856d4e6280555dca3f810447",
      "IsHidden": "False"
    },
    {
      "Start": "b8e99e22609c43c49b5dfff99a06a932",
      "End": "b90f4bc6084140d58b2d8fd8d39258c7",
      "Id": "36c67b5aa1b44124a0b7febe245d262c",
      "IsHidden": "False"
    },
    {
      "Start": "78c7930fa0f14ac8939d912c3e4b7379",
      "End": "6d9ebd17a3ae4eefb71ffb184f561274",
      "Id": "6215021cc0fe4702bcb6fb529694c4aa",
      "IsHidden": "False"
    },
    {
      "Start": "fb7b4bdefa3a435ab0a00a853ca87813",
      "End": "105813680d79469eb8230a29136eac50",
      "Id": "be63f48fcb2d4f7982274d4f78b8d5be",
      "IsHidden": "False"
    },
    {
      "Start": "5db486d9ad9748e9a54a8c74c821cd7e",
      "End": "b1f49b53604740beafd5cc67b16fea1b",
      "Id": "d05a718c099a423682163fc08a982be3",
      "IsHidden": "False"
    },
    {
      "Start": "5db486d9ad9748e9a54a8c74c821cd7e",
      "End": "bb05e315079e4ea9b02c36bfd556ff6d",
      "Id": "29b991df2864417c8d6fb12d2b515400",
      "IsHidden": "False"
    },
    {
      "Start": "b1de2b04f8f9470d9a81bfa3b0309160",
      "End": "6d5e995835cc42b593dfa467953d7e9a",
      "Id": "eee424f5c3ca4d2d9a04d792c5868ca6",
      "IsHidden": "False"
    },
    {
      "Start": "6d3b13057c754736b2b09c9586251a06",
      "End": "fab01aa406e84b2b93fbdb28353c63fe",
      "Id": "cd8d23efbc1f443983ee72395a2ece9c",
      "IsHidden": "False"
    },
    {
      "Start": "6d3b13057c754736b2b09c9586251a06",
      "End": "326f52cdc2c74b8386aacd6a78e02347",
      "Id": "74600d7ea3d6474f989f1851ecc28ecd",
      "IsHidden": "False"
    },
    {
      "Start": "e0f3e1d91c3c4a009d56ef2ab574051f",
      "End": "c8818f94d00c4e8e97266919d25bdc87",
      "Id": "337878a6409144ed911bafc8619d03ff",
      "IsHidden": "False"
    },
    {
      "Start": "7be490bf59034641b130ea4cdde3b35f",
      "End": "c05494c4c5ca433cbc1dad2e20c25946",
      "Id": "817d2fc116b74fb1976335b7c015b5e1",
      "IsHidden": "False"
    },
    {
      "Start": "2100355b48134a7ebb61a1287b6015cc",
      "End": "ac0e0f93aeba4b809a69f649f5030a99",
      "Id": "7c07924cc60547d9814bf9222fe8faf0",
      "IsHidden": "False"
    },
    {
      "Start": "2100355b48134a7ebb61a1287b6015cc",
      "End": "1b3c6642f88c4a2ea5398eaec55aebcb",
      "Id": "cd4659d862cb409494814a0832b6de33",
      "IsHidden": "False"
    },
    {
      "Start": "e10be89a59254248b944d7629de46548",
      "End": "ed35917aeab14e55a28452768f9e4470",
      "Id": "1cd3083702ae425fbc8b4b432977962e",
      "IsHidden": "False"
    },
    {
      "Start": "1dca4a23fbe646bdb1462195be8b8be5",
      "End": "761e3bf45bb7474b8fe693f6309a5b24",
      "Id": "5d9e08110f45428ca5e141b9e8c8a743",
      "IsHidden": "False"
    },
    {
      "Start": "1dca4a23fbe646bdb1462195be8b8be5",
      "End": "1be7c3089aff4337be739eeecc5108b6",
      "Id": "aa5092892d6b489f87e76a0dd3858325",
      "IsHidden": "False"
    },
    {
      "Start": "abc1baf1a47243f5870005f85da3ada2",
      "End": "11a29a6e81874542bb77d1c6eec66c32",
      "Id": "547607b3a39545c1a1815b9d354d1901",
      "IsHidden": "False"
    },
    {
      "Start": "abc1baf1a47243f5870005f85da3ada2",
      "End": "99372b9e60474506aa3a8c0af0a93698",
      "Id": "671b4ea80a734e138e502821a08de3a9",
      "IsHidden": "False"
    },
    {
      "Start": "cfd177ad8cdf4166bfb8b33d63188f71",
      "End": "68fe0e2ea51a477783ed906d94699a4b",
      "Id": "90f67220ee1742caa9e45e175ca35734",
      "IsHidden": "False"
    },
    {
      "Start": "cfd177ad8cdf4166bfb8b33d63188f71",
      "End": "39d858e9e7b2404b93f5c6be2d01d664",
      "Id": "d14f38017b954fc6bdf35f3bfeab2ee1",
      "IsHidden": "False"
    },
    {
      "Start": "d526cbbfd3994972811d966e397888cb",
      "End": "2e8738de51444838bd734d39ea22db1e",
      "Id": "8a02273f5e64405f899ee69c807fe9a9",
      "IsHidden": "False"
    },
    {
      "Start": "37b3c7a09a5c4ed78b7b5677de8fa5ac",
      "End": "c18cda9cfa2f4077a4cef5a04cb1b1c6",
      "Id": "46a24eb751b24403b0f953ee8c8ad259",
      "IsHidden": "False"
    },
    {
      "Start": "214be7cf2d1648448593251eb1398f3e",
      "End": "a9eae113afa24f389853f93a6dac0e23",
      "Id": "dba51bc6ae5a4053bcb519fe545fa87a",
      "IsHidden": "False"
    },
    {
      "Start": "4bc2a4afd0eb4fb5a4b15b6579a9357a",
      "End": "88009c8fed2d425b9d20082516625acd",
      "Id": "57b78946c0e847e289286bb9e0723251",
      "IsHidden": "False"
    },
    {
      "Start": "4bc2a4afd0eb4fb5a4b15b6579a9357a",
      "End": "3ec14fd6be524a8dbefaa12ca9ed57f2",
      "Id": "bd24466f28704ae5842912fe4e927c2c",
      "IsHidden": "False"
    },
    {
      "Start": "df91fcb3563f4f6785071a8f4ed3325c",
      "End": "a974d33d2e5545ad86159f8024f921e7",
      "Id": "a3d93442a690421b9d2926fb00a65238",
      "IsHidden": "False"
    },
    {
      "Start": "6502a91daac04f67b7a0e46f251bc2f9",
      "End": "61f81e8b789d4ebeaf1f9a0fb331838a",
      "Id": "4fe077652ff34d359c13bc7dfef496b7",
      "IsHidden": "False"
    },
    {
      "Start": "fbb75dbe03d54616b87cb0777fb62219",
      "End": "36ecea965f1a4bc097181a40067cb567",
      "Id": "996673f27f994c18b12c7b6b449feaa7",
      "IsHidden": "False"
    },
    {
      "Start": "f192f3c1267343d289c64e036a0cdc3b",
      "End": "1ab8760c61f942a3a63a7bd57c33926c",
      "Id": "5ddfbbaeb97b4f56bc88da66067bb61f",
      "IsHidden": "False"
    },
    {
      "Start": "f192f3c1267343d289c64e036a0cdc3b",
      "End": "5373e722dc3d4b55a183ee7db1f11299",
      "Id": "fe105a275e5c4443957cd9c58b194fce",
      "IsHidden": "False"
    },
    {
      "Start": "24bec7c1d92f4b58923aa0043987b754",
      "End": "4b673b25845440559e76924b3dbb55e2",
      "Id": "e77be04d1190484ca0635cb6f82abb91",
      "IsHidden": "False"
    },
    {
      "Start": "9c99a12b3c1348de8346d5aa048a4d27",
      "End": "900b9f182a1a4ac884ce1b31dc4fa05e",
      "Id": "50a512f92119425db5b4e8e60ad535ef",
      "IsHidden": "False"
    },
    {
      "Start": "2ae5151ad11e4f93a3363e3fdfb2bb10",
      "End": "12d823222ae44edd8af3030c4b7c0584",
      "Id": "0d8a36b9c1bf4666afc331bb2fc8bb9a",
      "IsHidden": "False"
    },
    {
      "Start": "e61a775a7e9a4239a9932cb95eb51753",
      "End": "7030a92eca83486dac8316e0efd9d7f8",
      "Id": "2ef52634b1ab49d381b3860ae636ae22",
      "IsHidden": "False"
    },
    {
      "Start": "1a42c4be2be249969d8d6ef4d941a903",
      "End": "ac4da29d16824da0888a17599de374aa",
      "Id": "ae30b2df8dcb4f7b993eec81872a992f",
      "IsHidden": "False"
    },
    {
      "Start": "1a42c4be2be249969d8d6ef4d941a903",
      "End": "6fb747f4219448f094f31f25d25fe841",
      "Id": "1c91af8293944613a164658925e7a43a",
      "IsHidden": "False"
    },
    {
      "Start": "28b6b2d86b6f4ab8964306ba59b16058",
      "End": "b97bd9c3dda4441daf50f22fe99752e9",
      "Id": "aa9c744018084ac0bcc44da31d299da3",
      "IsHidden": "False"
    },
    {
      "Start": "697384945b2c438093efda106e3ff67f",
      "End": "bf1794d471014fbea4fbdf9d8fd8c4e6",
      "Id": "670a66594d844a2eb77e29fe15e58ca2",
      "IsHidden": "False"
    },
    {
      "Start": "8a7aff7bf9c24acda94e5d0964a90068",
      "End": "49f19f393c184216808f028a182d23f1",
      "Id": "14fa4f765bdc448f8a1f7f67323ab368",
      "IsHidden": "False"
    },
    {
      "Start": "478e9ffc234d4d31be6fb23a33811acd",
      "End": "4d9ed1fac2604f72ae16a42f24be8d54",
      "Id": "e2a8d52ab84c4e779487a5febefc1d6b",
      "IsHidden": "False"
    },
    {
      "Start": "32a3867a704943f78a282c2e8ea2f41a",
      "End": "d9bdea982b73439d8458e7ae3e17379d",
      "Id": "3824eb7a1291447ba0ceecab42fe87b9",
      "IsHidden": "False"
    },
    {
      "Start": "38191ba6faef480e8d4e4bb715a76dec",
      "End": "08681a1e1cd9456688204e968fd06c89",
      "Id": "8f46ac6023c548c48452206863eaaa2a",
      "IsHidden": "False"
    },
    {
      "Start": "38191ba6faef480e8d4e4bb715a76dec",
      "End": "0ce03190f54a41529207ced0d8a21612",
      "Id": "8fb7e52d5d2240d8bb2f50d2f7f95b82",
      "IsHidden": "False"
    },
    {
      "Start": "c3edcf4cffcb47a89c5cd74867d89276",
      "End": "eb383191731643ae90db418bda0759ae",
      "Id": "53a96aef7982453cb67eec048ebf13fd",
      "IsHidden": "False"
    },
    {
      "Start": "335c1e9087984b30b24d02b1e54210a3",
      "End": "536388af3e7342c498b7467fca1b52ad",
      "Id": "6dae647ef7f24ae1b2fb2d9550e39fd3",
      "IsHidden": "False"
    },
    {
      "Start": "335c1e9087984b30b24d02b1e54210a3",
      "End": "b0aadadb11ce42b3885e7dc91bb5cb07",
      "Id": "ae90d9d5e1544fd99bce0ef0458120a0",
      "IsHidden": "False"
    },
    {
      "Start": "c739da40762748a9a006a992f7b5f20c",
      "End": "be0a105cb52d42af8a11b568f5e37df0",
      "Id": "cbc1ef82a8934952853a257c5837a576",
      "IsHidden": "False"
    },
    {
      "Start": "e63944fd30b14821bb642548080669ae",
      "End": "87c5772f5ebf44d58afa49d723f6bdc1",
      "Id": "47289867eb5f46678731b3bb14863511",
      "IsHidden": "False"
    },
    {
      "Start": "bfb4bd0d1caf4a95af8c90e9bb93b9ab",
      "End": "27596c3145ee48928ccec77011dd3bfd",
      "Id": "c6cfc9c96a0e487db525a6bdc6daeb4c",
      "IsHidden": "False"
    },
    {
      "Start": "9bd652b4b7cf458f8075c0b5fdff9a8d",
      "End": "2423b46a532244b88e4114c48289b2a9",
      "Id": "c0ec44fd85714f9f93e806461ebd64ee",
      "IsHidden": "False"
    },
    {
      "Start": "81d3c94b3e8c426b8931e9a5c61e216e",
      "End": "f1433655a5c545b5b97733234620bfab",
      "Id": "5a87ca47a5034f2eb5eb185edab98cf1",
      "IsHidden": "False"
    },
    {
      "Start": "81d3c94b3e8c426b8931e9a5c61e216e",
      "End": "c33f6e5718644ba18c7e568f154be59b",
      "Id": "b3c7911452ac4aefbb6791a164d4b540",
      "IsHidden": "False"
    },
    {
      "Start": "6b99d2cfaea447449f394184eb600632",
      "End": "6cdb9a6618bc4442bebb8ba4ca907991",
      "Id": "6c8d3c36abfa4163ba47630e51523d87",
      "IsHidden": "False"
    },
    {
      "Start": "d220aeb72d6c4a469c6f70ef41b594c3",
      "End": "6a6b4522d8e249d5a946705029985308",
      "Id": "ec664fcefd234fa1ae59cf813cb2f2a7",
      "IsHidden": "False"
    },
    {
      "Start": "d220aeb72d6c4a469c6f70ef41b594c3",
      "End": "e19a6c9b480541838cf087e8d86c296e",
      "Id": "7e5ee1b4eeef4c59a3357dcab42c8fac",
      "IsHidden": "False"
    },
    {
      "Start": "1125798d93d444139be6912c75fd7a0b",
      "End": "b04ee73efa4d4c9795937197aff18d3e",
      "Id": "b33c5b342faa4197b7389d8ae9bae346",
      "IsHidden": "False"
    },
    {
      "Start": "1125798d93d444139be6912c75fd7a0b",
      "End": "2cde6671f84543abb63eb100f48bc7c7",
      "Id": "7257d4166ae84e8aaff6a01780ac11c3",
      "IsHidden": "False"
    },
    {
      "Start": "1125798d93d444139be6912c75fd7a0b",
      "End": "32dd3990430c48a6928aa5d946e3b988",
      "Id": "8af11d57f67747aab3bc1d88524b8ba9",
      "IsHidden": "False"
    },
    {
      "Start": "1125798d93d444139be6912c75fd7a0b",
      "End": "07803e23b3234eb881ab150e5ffa2eda",
      "Id": "052fafd9184f4db58e1b03d0e0c9a7b5",
      "IsHidden": "False"
    },
    {
      "Start": "cd6cf74fd7aa43a79a85ddd43f987873",
      "End": "e9573854207e4193be08b17ab12ce738",
      "Id": "e5a9d19f2be1446a9c1843935aab2d34",
      "IsHidden": "False"
    },
    {
      "Start": "630ee415d97649e8bc324436f3acf980",
      "End": "338a4bb5a94447aa9484e89cb20b3926",
      "Id": "00dfc6e1c6ae421bbe7bf62c93c233f3",
      "IsHidden": "False"
    },
    {
      "Start": "630ee415d97649e8bc324436f3acf980",
      "End": "082c9a6bdecb4f8a91916e6029fa0dd2",
      "Id": "af2f3030d2ae4e6396b72169fb1a72b3",
      "IsHidden": "False"
    },
    {
      "Start": "82fd23e916254a7b96379c4c9e3b6adb",
      "End": "d19d3e7caef043259106a40e546daf76",
      "Id": "6b89cef621e944f2b13ed82c35542978",
      "IsHidden": "False"
    },
    {
      "Start": "64ca0d42226f48a6980720ef4261d7a5",
      "End": "61a7e23d9e7c479087375392014f58b4",
      "Id": "a876c388f4f748dbaa60767db629ff22",
      "IsHidden": "False"
    },
    {
      "Start": "64ca0d42226f48a6980720ef4261d7a5",
      "End": "1a8d19d8725d4dd183796aaa4f72cb30",
      "Id": "564bd4a430cc4b338040a6185f9c4f1d",
      "IsHidden": "False"
    },
    {
      "Start": "00bb63324bbe44949d216086396fbe43",
      "End": "ec287dcb63fb46d2a36cfa4dd6b3d1c0",
      "Id": "b51db31677ed465988f8ae06b1dd216a",
      "IsHidden": "False"
    },
    {
      "Start": "00bb63324bbe44949d216086396fbe43",
      "End": "85b2d32193204159924b5b11419b2087",
      "Id": "6e043e4a38dd48c88e9e90f33fd0aec7",
      "IsHidden": "False"
    },
    {
      "Start": "d6cbc323bd034be6966109c20cbdf8b3",
      "End": "5756425dd2e54372b6c01b92569c10a2",
      "Id": "72b470bbfe7144a2bca6237d08371415",
      "IsHidden": "False"
    },
    {
      "Start": "d6cbc323bd034be6966109c20cbdf8b3",
      "End": "4cf5324551c9486eafdd793ae5bacde7",
      "Id": "bd46563badd94365b6950804292f87d9",
      "IsHidden": "False"
    },
    {
      "Start": "7d7595e099844a5db6ce2d67e15c0fe5",
      "End": "76d0f15419be4647a2e13cac6a531100",
      "Id": "171afdd8ceb74cf4a1ad8e1f52055540",
      "IsHidden": "False"
    },
    {
      "Start": "7d7595e099844a5db6ce2d67e15c0fe5",
      "End": "2a08f38f5ef642eca998698e0b755583",
      "Id": "74f93988fe044eaca84486f7a3950aa7",
      "IsHidden": "False"
    },
    {
      "Start": "4b0ea3935e794daba7c3d884e3b3f69a",
      "End": "0dd71bbbdec244668b6243f15cdfab42",
      "Id": "c83993b295454dd9846dd411ae34ef1f",
      "IsHidden": "False"
    },
    {
      "Start": "4b0ea3935e794daba7c3d884e3b3f69a",
      "End": "f9fbd56919754eac9c458f9a5458b256",
      "Id": "059000aac5e1420f8718dfb700eef04b",
      "IsHidden": "False"
    },
    {
      "Start": "69f8ce32ea5c43a4897ec33e43e2bff2",
      "End": "7a25b9021ac140ffa7a1266b03b0b91b",
      "Id": "53c79f425c124904bad6bc30177912ab",
      "IsHidden": "False"
    },
    {
      "Start": "25b455b2fd40464b89f04b56fc22960c",
      "End": "83d63f4518b446368803a725ae52707d",
      "Id": "e635ba64aa914ca6923cbfff7770de7f",
      "IsHidden": "False"
    },
    {
      "Start": "a31c8436908a40829c41feb900dd4f45",
      "End": "76bc79b8cd5f4d87bdc4385e6b58bbd7",
      "Id": "b819615bcf9349afb584bbcc375dff08",
      "IsHidden": "False"
    },
    {
      "Start": "5e50d3771b024575b31f3cc074c3f8cf",
      "End": "b318afa67fbf420a96019aa067769751",
      "Id": "897c9920a7154487bbf024b3cc934d76",
      "IsHidden": "False"
    },
    {
      "Start": "67947979a9154cbebe66199f09aae3ab",
      "End": "73e9b92293c44e808dfd05a8d0c52ca6",
      "Id": "0e64723da1e54a79bbfdb18377a8e93b",
      "IsHidden": "False"
    },
    {
      "Start": "8e65d766a5574939a42be004385f9eba",
      "End": "da4271ac1b574a86a12c271f1191c604",
      "Id": "89fc4087871e436faabd26ee2ed87af0",
      "IsHidden": "False"
    },
    {
      "Start": "3dbe4f8aa27a47f7a7962c9b305c3fbc",
      "End": "e0f5e246e716440bbd6774f48f878335",
      "Id": "c301f2d7ceab4224b3777d803f631bd4",
      "IsHidden": "False"
    },
    {
      "Start": "3dbe4f8aa27a47f7a7962c9b305c3fbc",
      "End": "5ba9e0a9758240f1aa4bd37d2ed68e87",
      "Id": "14ef4085a98f43de8d53c3356d304810",
      "IsHidden": "False"
    },
    {
      "Start": "cbd1825e075646279e3d4a17e0739f9e",
      "End": "f9e8eb7a61384eb4b2116114a2de0fc0",
      "Id": "03550372a40a4c9abf817d33ce9294d3",
      "IsHidden": "False"
    },
    {
      "Start": "6d3a668a55124d76942b730901044bd9",
      "End": "342e13bde0f645b687af91c80b917792",
      "Id": "40cfee8edebc40d5906dcc1a570fe554",
      "IsHidden": "False"
    },
    {
      "Start": "13be7d35817741079b7666373e716113",
      "End": "5bf74c07a2d04487b8dc76a0131c7d1d",
      "Id": "04ddd48effc1497380b013f67f90c97f",
      "IsHidden": "False"
    },
    {
      "Start": "86b3c8335d9944c6b51eda50f1ba9f60",
      "End": "e21559d21082440891a8880903f5c30c",
      "Id": "6f986df462fc465a906e76e7bfea8ada",
      "IsHidden": "False"
    },
    {
      "Start": "fc722374cb984726b2e753714077e439",
      "End": "d63bf4d9976f42c486dab99e9605f4e6",
      "Id": "333f60cf5faa4daab79d85530561f2fe",
      "IsHidden": "False"
    },
    {
      "Start": "33ce644271334d00b9d869b2442b966c",
      "End": "2b6087bd27ca4b3f8162ea65a3ab1bc7",
      "Id": "d8acef0f7c77440080e9ddffc0bf882c",
      "IsHidden": "False"
    },
    {
      "Start": "33ce644271334d00b9d869b2442b966c",
      "End": "3bf17cc3eb3844878fc29e47aa48f6d9",
      "Id": "8ce2d3759a6c444ea3cc0fc929b7009d",
      "IsHidden": "False"
    },
    {
      "Start": "cd18a6aae6ae49c5982983081c437e5d",
      "End": "76f31f05b88b402aab267f12741482ab",
      "Id": "0c340f5e8e094c37b2e28fbdacee7db6",
      "IsHidden": "False"
    },
    {
      "Start": "550db2bc8d4243d9bb0aaa3ab291a113",
      "End": "0c68d5bec4254260866ed17fae398534",
      "Id": "1a114891d2604a6c8c1f38197537efc3",
      "IsHidden": "False"
    },
    {
      "Start": "0c018632b35e4bacbc388d0878d93820",
      "End": "f02e5e31f4df48fd810da47a2e7f275d",
      "Id": "0b7781cc99764a7cb2a8eaf495c2dfbd",
      "IsHidden": "False"
    },
    {
      "Start": "a1a01f354afe4ca19a81a90bb6db6cca",
      "End": "1ae495c9fdfe4e54b37f72960f6195e1",
      "Id": "792cd92c718c4443a294fbadfb58e012",
      "IsHidden": "False"
    },
    {
      "Start": "dfc5224b6b5d405ea2e771a1dff11d30",
      "End": "551944e352474c418f5efb3ccbb20f58",
      "Id": "b8b9d2ad21a64c17bf70ddcda9b31cb6",
      "IsHidden": "False"
    },
    {
      "Start": "104eaea4027c4586818e68e481b417f4",
      "End": "8de774ac6978432f9772fe4da620553e",
      "Id": "89b69f01477e45edab7bd97a1ce96e47",
      "IsHidden": "False"
    },
    {
      "Start": "1b522747b7104260bd28447293faaebb",
      "End": "5513b9b9e7aa4e47956b56cc9033d911",
      "Id": "623a7d899c8a4fb1b197cc894664352c",
      "IsHidden": "False"
    },
    {
      "Start": "ec225871975740ff82489a0e7fc4c887",
      "End": "bd454b6b07fe474c96e36e25963b4eea",
      "Id": "e5c1472d340e4cfcaedcaf778a1ecd36",
      "IsHidden": "False"
    },
    {
      "Start": "ec225871975740ff82489a0e7fc4c887",
      "End": "a54292c1d3464aaf92e39ea1325f22d3",
      "Id": "6ea9ee45c7f847aa966c099021c5b21c",
      "IsHidden": "False"
    },
    {
      "Start": "3062dbeb28fe46c6b1bb84760c953934",
      "End": "0ad90c3e29fb4a75861e7d4d9a9a9664",
      "Id": "cee433a9f6da4d1ba1efc838ab74d040",
      "IsHidden": "False"
    },
    {
      "Start": "9d18f246c2314cb9b6bfd25579a68fb3",
      "End": "1e4edf2e26eb4c018aa83e0318758785",
      "Id": "374dbfd66e2c48008e9e83ce55767807",
      "IsHidden": "False"
    },
    {
      "Start": "819f7b7ce2ab48f5bba95d853703666d",
      "End": "3ddbd49bc494413594bc8e06a8c6e0ab",
      "Id": "40de77901cc943d0b467c5d69d526db3",
      "IsHidden": "False"
    },
    {
      "Start": "819f7b7ce2ab48f5bba95d853703666d",
      "End": "993cb67433364dc7b2e704fddd579b2f",
      "Id": "571687b23b684ac88b2efb5d1faa5620",
      "IsHidden": "False"
    },
    {
      "Start": "be3643dfec1845289384a7d6cbea80f5",
      "End": "36ad2ea56a02474ba51236a23f606214",
      "Id": "0f655710334a4ffab77cf5e91da8c61c",
      "IsHidden": "False"
    },
    {
      "Start": "aee2f8f9dcfd42d88da161b3a50ef623",
      "End": "bde9a039fa3f45d389455e47d5c60a46",
      "Id": "f16d8143bc074e359d53e3b152a8f6b7",
      "IsHidden": "False"
    },
    {
      "Start": "1ce7297dab054239ac4269938503efa2",
      "End": "558ffb5ebc124e4587892846adb9eeed",
      "Id": "510ec2f8b65b44c189a83babe58c8341",
      "IsHidden": "False"
    },
    {
      "Start": "ffcab4c0fd714724b582f23400dab3b8",
      "End": "f1020d82148c4d1587a7108fd85d04c6",
      "Id": "9f9bf7efc4e14a8b99a48bd69ba728bc",
      "IsHidden": "False"
    },
    {
      "Start": "7b216e51eaa84139a04dbd5214df94c8",
      "End": "b2dc78cd662d4a03a5a2bc5ba887173f",
      "Id": "7766315f650e43478c25526030f3467b",
      "IsHidden": "False"
    },
    {
      "Start": "7b216e51eaa84139a04dbd5214df94c8",
      "End": "f85aefc084e74d4982d0a67596ecbfe5",
      "Id": "41da5130c68846c39308140bb658ab0e",
      "IsHidden": "False"
    },
    {
      "Start": "73c5cae843964beeb7714dadf2fc538e",
      "End": "8b1211d82cd945cdac2b460744e76ef9",
      "Id": "2dcf9525bcdb4a0da4993c68f6bd57b7",
      "IsHidden": "False"
    },
    {
      "Start": "73c5cae843964beeb7714dadf2fc538e",
      "End": "cf4775f617d7499ab62073d2f2358cfa",
      "Id": "235a66e8a846406b9217aa5dbf1d7f7b",
      "IsHidden": "False"
    },
    {
      "Start": "7497320157ca41e3b2ddd98a7de97ac8",
      "End": "bd90bc71deb94fd0bb6a14b367804a3a",
      "Id": "ef1902bdc26a4b2e9e7755718f315402",
      "IsHidden": "False"
    },
    {
      "Start": "6e8ee628b4754a8b8592c2359fec9241",
      "End": "a646f26699ea41dd945773ba36d6353d",
      "Id": "c0eedfa6c6da4da6bb33e257bc76f28f",
      "IsHidden": "False"
    },
    {
      "Start": "6d8d4366772a41b3b0a78a4cb4f9640b",
      "End": "e721d3d6afbb419e85419826247e47ac",
      "Id": "19bc836c05264ce78867ff1096427c58",
      "IsHidden": "False"
    },
    {
      "Start": "93da7823d4b44ea1aa66bad9066a873c",
      "End": "1af5a89769314a5492ee802027aa9428",
      "Id": "f7d0e849e9c54aa28937bda9db5fa9fb",
      "IsHidden": "False"
    },
    {
      "Start": "f05ca6b42f2c4454a60a461d571730f1",
      "End": "fee03f50b2ad4e2ead41cdc377b21e1a",
      "Id": "c0e554e05d2d4765bc15bdab72aecaf7",
      "IsHidden": "False"
    },
    {
      "Start": "7770c6bd6ab04e129139acd4d93cd24c",
      "End": "49ecef9a9349484f8e65d95418d40d16",
      "Id": "b74f0f1331e24a1784e8fd6b99c2164b",
      "IsHidden": "False"
    },
    {
      "Start": "25b81c3db44540d4a36d919577b8a01c",
      "End": "b661577696a34de0a7deb43fe92e4264",
      "Id": "15b55561e01a4de69af75b8eecb0f5f2",
      "IsHidden": "False"
    },
    {
      "Start": "25b81c3db44540d4a36d919577b8a01c",
      "End": "f5d1218355224f78a0793160bfd90b44",
      "Id": "0024d054dc874ad9a48e7f71b72856c6",
      "IsHidden": "False"
    },
    {
      "Start": "0e61ba0a614d4d339087780769681621",
      "End": "1e81cd2ef9c14a8e9fd0b0508ccf69d0",
      "Id": "ac9b395fc8d14c2d925b82bf66e95bb7",
      "IsHidden": "False"
    },
    {
      "Start": "0e61ba0a614d4d339087780769681621",
      "End": "58bd30f35c984a4bb1dc45ec77c452c0",
      "Id": "e640a07dc10c472483cb82abe324b1b6",
      "IsHidden": "False"
    },
    {
      "Start": "cad1630468ad4ddaad7bcda3763a0ea9",
      "End": "afc2e42b173c4ffeadf9834b80c13aeb",
      "Id": "80537f23cccf4b1880c9ee72eb3ccb1e",
      "IsHidden": "False"
    },
    {
      "Start": "a0eef768a60841c18f281daf79e322e9",
      "End": "623e7d0c8ef84e5cbc62d170f166ec45",
      "Id": "fb7833b04bd74ef6bcfd0ccb931272e7",
      "IsHidden": "False"
    },
    {
      "Start": "a49f5f5689b0436f82ddc866984ca3f5",
      "End": "74dee0bc04f6468e8515418e7789826f",
      "Id": "0bff12daa9ad448ab136a38f4a67d8c8",
      "IsHidden": "False"
    },
    {
      "Start": "1290f55b6e014ebe89021963cf83b069",
      "End": "e9ee0883b76045f0b51255843b3d19dd",
      "Id": "04745b506b9b42ee9520a210558e1ffb",
      "IsHidden": "False"
    },
    {
      "Start": "1290f55b6e014ebe89021963cf83b069",
      "End": "103c4e2e4a664d89baff5e29a999048a",
      "Id": "7398a38f500143748c66438d34ce8c1c",
      "IsHidden": "False"
    },
    {
      "Start": "218d82691bac472a9f96258fbabba9ee",
      "End": "b7ce0b7753e442eeb7f009bdf42a6bf3",
      "Id": "23a7b536bcfb4e4c859aed08df826b53",
      "IsHidden": "False"
    },
    {
      "Start": "5047c7a64e28496f84f1ca7cc61bdfec",
      "End": "382dff5342b4440faac82d9eb85f91ee",
      "Id": "48202829068c4511bbc713af1f8ec12f",
      "IsHidden": "False"
    },
    {
      "Start": "5047c7a64e28496f84f1ca7cc61bdfec",
      "End": "dabc1125818241409bd1595d4515f19d",
      "Id": "2ec6a60db8594ea2abe920237bdd3705",
      "IsHidden": "False"
    },
    {
      "Start": "fb823183a62d4d8f83099147f603a48b",
      "End": "875cc1b3cbe649ec9aea01be5be79f81",
      "Id": "c502937e89cb4a589116a52fc765d88e",
      "IsHidden": "False"
    },
    {
      "Start": "ec2948ff32d44fd69b4f4c4e4b7a968a",
      "End": "b3b0adb2b64f4038889f7bb72b3100cc",
      "Id": "553b9dff92594fbaad1b703d9d6a6e81",
      "IsHidden": "False"
    },
    {
      "Start": "ec2948ff32d44fd69b4f4c4e4b7a968a",
      "End": "5721fed2fc0a4c42804c0452cf802c10",
      "Id": "733a01926e074fe292dd2c92934b8577",
      "IsHidden": "False"
    },
    {
      "Start": "bbcd9d8a6a43403583563deeaa5d369d",
      "End": "19e667927b68439fb070f6535cae1aae",
      "Id": "c99fbf7128d84eddb51653829bd28a48",
      "IsHidden": "False"
    },
    {
      "Start": "cf43309516254e84877cdcbd8475570c",
      "End": "1c9a38316f864145a5e21c8c6dcc001a",
      "Id": "5c2c6bb5e73448038b21ce0985aff7f6",
      "IsHidden": "False"
    },
    {
      "Start": "cf43309516254e84877cdcbd8475570c",
      "End": "ecd38c471104409d9317d51e102d951f",
      "Id": "1182e65746724331884ca0d9bed7a25d",
      "IsHidden": "False"
    },
    {
      "Start": "9ec204d4e58445cbab1789eca2f76512",
      "End": "2b9a87775e7c4b6da1d9581b7006fbcf",
      "Id": "16e32f9b5d8743509191236626cd5eff",
      "IsHidden": "False"
    },
    {
      "Start": "6d8bdb28a94e4575b6b305bcbfb0c906",
      "End": "3ec53fa67ee048868696dca5dbd32741",
      "Id": "814563f23c4c4044ade135df1ccaecd7",
      "IsHidden": "False"
    },
    {
      "Start": "6d8bdb28a94e4575b6b305bcbfb0c906",
      "End": "86df67f4f65047fa87f7372923ec4b46",
      "Id": "1ed4bd8862cb4bef930ae583ea6501fc",
      "IsHidden": "False"
    },
    {
      "Start": "071c6a3e71404e1f88fd7c01e1977ab4",
      "End": "ca645b4b6fc74ff7a9e487c46fba5977",
      "Id": "748f619b87ea499bbfb99faff8cc670d",
      "IsHidden": "False"
    },
    {
      "Start": "829569e1e6414f148a02ff2e304dc8cb",
      "End": "c4ad86650d964aecbac6647ed25105e0",
      "Id": "f6f4fdfa58d54691b213298e82632329",
      "IsHidden": "False"
    },
    {
      "Start": "5f877e0580de44e7b93fbd07874704a7",
      "End": "3f8534654bee4d39868e20e7839e5945",
      "Id": "4537f11061cf4604b3d4ebd240c4a168",
      "IsHidden": "False"
    },
    {
      "Start": "f80ae9d308c1456c91090a91dac4f635",
      "End": "42bcda6389844f98a91a81d2814ac1e4",
      "Id": "f21dda6e4e9740f79d24d85424ee5a64",
      "IsHidden": "False"
    },
    {
      "Start": "f80ae9d308c1456c91090a91dac4f635",
      "End": "5454f228f59341b0a698886bf673b8d0",
      "Id": "e3f5e29abe134632aefbc1e6683b4eef",
      "IsHidden": "False"
    },
    {
      "Start": "f80ae9d308c1456c91090a91dac4f635",
      "End": "2ce637aa81d04d26872eed590b0f67f3",
      "Id": "642db798a188417d94c919f455331a4e",
      "IsHidden": "False"
    },
    {
      "Start": "ea612a07b15544f9890cb4e67412d72e",
      "End": "d009e796a05e4ba383d7abab75c43a1e",
      "Id": "5bc1cea6ef4a403b9cd33f4c93e07e7c",
      "IsHidden": "False"
    },
    {
      "Start": "389eebeea1dd42b4a32f9c172dbb9f1f",
      "End": "a59d34aa69ae43cb967be0916870d057",
      "Id": "ab061f59918d41b19133a36f09c172b0",
      "IsHidden": "False"
    },
    {
      "Start": "b72828b71ce148ac9ef5a5b056e8ad11",
      "End": "f65736cc373d45dd873dee62c66e9e2f",
      "Id": "51086279ed2849e7a997ff34e221ed78",
      "IsHidden": "False"
    },
    {
      "Start": "e984bbfa7e0b4f999a8f4d085da72e04",
      "End": "2b73d6cbea8642c79c58789cd2dd981b",
      "Id": "afc7bb7c93f94edf85c68632ac6e8a34",
      "IsHidden": "False"
    },
    {
      "Start": "606f8fbed78f438f8f87e7250a4fac70",
      "End": "f79c2a516f35459bab7b12a8d26b83af",
      "Id": "a1a1a93166034b45918a8fabd867d9b5",
      "IsHidden": "False"
    },
    {
      "Start": "99d620356a014502a49482731548e5da",
      "End": "9528c7d728c44aee87ebbe9a95aca6bb",
      "Id": "5fd21a5a479d499592bd25e7456b22f9",
      "IsHidden": "False"
    },
    {
      "Start": "0da4f8db461b4b7caac431ede747e9c9",
      "End": "99c3eae805414023aec6cc8a98af6fd0",
      "Id": "2ca2cbbe4f6647248491a5ce745ef084",
      "IsHidden": "False"
    },
    {
      "Start": "1e79e05b40284eddadfec34383b55823",
      "End": "d1bc63ff4a1845dbac43f4505f552574",
      "Id": "175941827f674e70a842e86197c0622e",
      "IsHidden": "False"
    },
    {
      "Start": "9134161c10ef4055afbed623962327f5",
      "End": "e651cd57629340f3a7b638369d0c10a9",
      "Id": "83b72116532140d9a091ae89d47ff324",
      "IsHidden": "False"
    },
    {
      "Start": "67638fdb06a747568dafbf168c2d7726",
      "End": "dbff76ea512c43fd8083c8f5ce8013ac",
      "Id": "61a834e518ad4a3fa795c076e005cc46",
      "IsHidden": "False"
    },
    {
      "Start": "de72594c7a4c4201ad15f243cfbc97c9",
      "End": "2f6f917f08d44fc49ce3a70dc3e7fd58",
      "Id": "6514e37bc34c4fbea879e1b783155496",
      "IsHidden": "False"
    },
    {
      "Start": "dea84e014af1470b8b6ca61bb92c229b",
      "End": "76529a5b1acf4478b14b5f6699b224e5",
      "Id": "37f6dfbeced74360ba63a6e31796cf43",
      "IsHidden": "False"
    },
    {
      "Start": "3e5078cde25244f5bba0636686297303",
      "End": "58e1e07250f043ad908ab8319e23a6cd",
      "Id": "335e25beda0b4ee995af6dd740c4a325",
      "IsHidden": "False"
    },
    {
      "Start": "351ad51bfd3d47b3bab0d3abe891e04b",
      "End": "e6eb3eef34ca4457aed7da436c20d71d",
      "Id": "eb3481b8847d4ed9bc9b9b04a11c3f1f",
      "IsHidden": "False"
    },
    {
      "Start": "ee4880774abd49d78e384876684beb7c",
      "End": "1a6d57e824f741f3ad10364407a05ea4",
      "Id": "39b7f4b183534b1f86eeea33a9bcf5c5",
      "IsHidden": "False"
    },
    {
      "Start": "f7d3c74e596d4450bde2f6c6dc50c1dd",
      "End": "6043e0f9dd1948fabed95df7c4113d54",
      "Id": "a2d29340870d4264bce1d02d126bdcab",
      "IsHidden": "False"
    },
    {
      "Start": "7405b5df4fba426090b017538c17ebd0",
      "End": "35e55a63d0fe45208f1c3b2efbf4cebf",
      "Id": "15e791ed342e46baa946401eed5bdf97",
      "IsHidden": "False"
    },
    {
      "Start": "c042909ab3a74413b0fd50d1f8f7f10b",
      "End": "9ff8ae082b3047eca74c07d4b055b223",
      "Id": "a65548c89fde45babf1532833344c23d",
      "IsHidden": "False"
    },
    {
      "Start": "3a5b630d780a47d6878fdc2610ad94bd",
      "End": "731ba7884b704f93b69c07f86a8e7708",
      "Id": "c955b49c8e404f30afd69a2a0bd0405f",
      "IsHidden": "False"
    },
    {
      "Start": "3a5b630d780a47d6878fdc2610ad94bd",
      "End": "923ead0d1115491091ca98a1c6ea4fc7",
      "Id": "7114a4463b6d43c6be4dd2605942e790",
      "IsHidden": "False"
    },
    {
      "Start": "dc8b710e946f4dc5a6805a2e25965a5a",
      "End": "e6cea8df13e547379cebe8597889d4b7",
      "Id": "6dea4d3107e7433f9c559381ab8fbeb0",
      "IsHidden": "False"
    },
    {
      "Start": "fefb2c014c34480fb8e335e54aa6962f",
      "End": "58f6197354b549c597713046e92075e7",
      "Id": "272691c95b4e452aa5a6320e81f902c1",
      "IsHidden": "False"
    },
    {
      "Start": "b106dd24fd8848b19b6749a1b90d236c",
      "End": "8ca25c318c504779a599102811ef20f4",
      "Id": "02bd01e840e6441c98902305fd63fdca",
      "IsHidden": "False"
    },
    {
      "Start": "a179e1493db34c37adfb05ae27f8c097",
      "End": "658599b14d824d6096a048f861800c23",
      "Id": "a2d761c48e7c4651b2b22d8fa1756963",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "2ee81b88-e730-4ffa-a7a6-a89aaf327f47",
    "9fbd05c0-ec1f-4bd3-bf37-969a1552eab8"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Data-Shapes",
      "Version": "2025.3.118",
      "ReferenceType": "Package",
      "Nodes": [
        "d8ebeb88f760491189ad3fba42226004",
        "7833ef9d17874eae8bce91a30675dd51"
      ]
    }
  ],
  "Thumbnail": "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCACWAJgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAooooAKKKKACvn344ftwfDn9n7xx/winiiLW31T7JHeZ0+yEsfluWC/MXHPyHjFfQVfkP/wAFRP8Ak6P/ALgFl/6HPW1KKnKzPPx2IlhqDqQ30Ptv4a/8FD/hV8VPHmieEdFh8QJqurz/AGe2N1p6pFu2s3zMJDgYU9q+na/Dj9iz/k674Y/9hU/+iJa/cenWgqcrIjL8TPFUnOe97BRRRWB6YUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFfkP8A8FRP+To/+4BZf+hz1+vFfkP/AMFRP+To/wDuAWX/AKHPXTh/4h42b/7pL1R5h+xZ/wAnXfDH/sKn/wBES1+49fhx+xZ/ydd8Mf8AsKn/ANES1+49VifjMcl/3Z+r/QKKKK5D3wooooAKKKKACiiigAooooAKKKKACiiigAooooA8i/aO/aEi/Z38PaTrF14eutdtb+7NoWt51iEL7C67iQeoVv8AvmvzE/4KBeLP+E8+M3h7xN9ifTl1jwjpt+tpI4d4lkaZlUkcE7SD+Nfpb+2P8P7j4j/s9+JtPsLd7rVLVY7+zijXczSROCVA9Sm9f+BV+cH/AAUe0WLw3+0BpWkQf6jT/Cum2kf+6hmUfoKWF9r9alf4LK3rrf8AT7y88+of2BSdNf7R7SSlr9lKHLp0u3Jf9unBfsWf8nXfDH/sKn/0RLX7j1+HH7Fn/J13wx/7Cp/9ES1+49dmJ+M+dyX/AHZ+r/QKKKK5D3wooooAKKKKACiiigAooooAKKKKACimu6xozuwVFGSzHAA9aVWDKCDkHkEUALRRRQAV+Q//AAVE/wCTo/8AuAWX/oc9frxX5D/8FRP+To/+4BZf+hz104f+IeNm/wDukvVHmH7Fn/J13wx/7Cp/9ES1+49fhx+xZ/ydd8Mf+wqf/REtfuPVYn4zHJf92fq/0Ciio7i4itYXlmkSGJBlpJGCqB6kmuQ98koqnpOsWGvWKXumX1tqNm7Mq3FpMssbFWKsAykjIIIPoQauUDd1owooooEFFFFAFTVNWsdD0+a+1K8t9PsoRmW5upVijQE4yzMQByQOfWua/wCFyeAf+h48N/8Ag2t//i68u/b7UN+yF8RwwBH2SDgj/p6hr8TPs8X/ADzT/vkV00qPtFe542OzD6nNR5b3P6BP+FyeAf8AoePDf/g2t/8A4uj/AIXJ4B/6Hjw3/wCDa3/+Lr+fv7PF/wA80/75FH2eL/nmn/fIrb6r5nm/25/07/H/AIB+8fxE+IXgnxf8P/E2hWnjvwtHdapplzZRPPq8AjV5ImRS2GJxlhnANfLHwl+COo/D9onj/ai0jQolABsdJ1CK4gHXos0vl+nWP1r8w/s8X/PNP++RR9ni/wCeaf8AfIrmqZbTqzjOTd1tq1+TPbwXGuMy/D1cLQhHkqW5k4wle17fFF23e1j98vDvxS8H6Totraal8TtA1y9jXEl/NqFnE8x9SkbBR+AFaX/C5PAP/Q8eG/8AwbW//wAXX8/f2eL/AJ5p/wB8ij7PF/zzT/vkV0fVfM8V57d39n+P/AP6EdH+JHhLxFqCWOk+KNF1O9kBKW1nqEM0jADJIVWJOBzXx1+2R+wj45/aI+Mn/CXeHta8P2Gn/wBmW9l5OpSzrLvjaQk4SJhj5x37Gvkz/gnBDGv7XvhIhFB+yahyAP8An1kr9m6wknRnoz1aM4Zlh71I6X/I/Ob9nz/gnB8RfhP8a/B/jHVvEHhm503Rr37TPDZzXDTOvluuFDQgZyw6kV99694+8M+FbtLXWvEek6RcunmLDf30UDspJG4KzAkZBGfY1vV+T3/BWCJH/aI8PFkVj/wjEAyR/wBPVzQr1p2kx1PZ5bh3KnHS5+ld58W/AV5aTQDx9oFuZEZBNDrFuHTIxuUljgjtxXy/8T/2dfh38SWkkuv2iry6kbkR63r1rfQKfaMNGAM9hivyh+zxf880/wC+RR9ni/55p/3yKdXL6dePJU1RGX8X4vKqyxGDXJNddH+aZ+3/AOz/AHngX4I/CvSvB0vxK8Mau1hJcP8AbI9QghDiSd5B8nmtggOB1PSvRf8AhcngH/oePDf/AINrf/4uv5+/s8X/ADzT/vkUfZ4v+eaf98itIYONOKhF6LQ48RxJVxdaeIrRvObcm77tu7eitqz+gT/hcngH/oePDf8A4Nrf/wCLo/4XJ4B/6Hjw3/4Nrf8A+Lr+fv7PF/zzT/vkUfZ4v+eaf98ir+q+Zz/25/07/H/gH9Bdh8VPBWqXsFnZeL9BvLudxHFb2+pwPJIx6Kqhskn0FFfiL+yvBGP2mPhYRGoI8SWR+6P+eoormqU/Zu1z2sFi/rlNztazP2x+MHwu0z40/DfW/BWs3N3aaZq0aRTTWLKsyhZFcbSysOqDqDxmvlf/AIdN/C3/AKGjxf8A+BNr/wDI9fbVFRGco7M6amHpVnepFM+Jf+HTfwt/6Gjxf/4E2v8A8j0f8Om/hb/0NHi//wACbX/5Hr7aoqvaz7mP1HDf8+19x8S/8Om/hb/0NHi//wACbX/5Ho/4dN/C3/oaPF//AIE2v/yPX21RR7WfcPqOG/59r7j4l/4dN/C3/oaPF/8A4E2v/wAj0f8ADpv4W/8AQ0eL/wDwJtf/AJHr7aoo9rPuH1HDf8+19x8wfA//AIJ++A/gN8SNO8a6HrviK+1Oxjmijh1CeBoSJIyjZCRKejHHPWoP2kP2+dA/Zw+JH/CH6j4S1XWrn7DDffarOeJI9sjOAuGOcjYfzr6mr8h/+Con/J0f/cAsv/Q56qmvaztIwxcvqOGcqCS1Pq/4Q/8ABSzw18XfiZ4d8GWngnWtOudaufs0d1cXEDRxnYzZYKc4+Xt616D+0R+xD4L/AGlPGll4m8RaxrunX1pYLp6R6XNCkZjWR3BIeJjuzIe+MAcV+YH7Fn/J13wx/wCwqf8A0RLX7j1VWPsp+6Rgarx2HbrpPU+Jf+HTfwt/6Gjxf/4E2v8A8j0f8Om/hb/0NHi//wACbX/5Hr7aorP2s+51fUcN/wA+19x8S/8ADpv4W/8AQ0eL/wDwJtf/AJHo/wCHTfwt/wCho8X/APgTa/8AyPX21RR7WfcPqOG/59r7j4l/4dN/C3/oaPF//gTa/wDyPR/w6b+Fv/Q0eL//AAJtf/kevtqij2s+4fUcN/z7X3HyL8Pf+CZ/w5+HHjrw/wCKtP8AEXii4v8ARb6K/ghubi3MTvGwYBgsIJGRzgiivrqiolJy3Z006NOiuWnGyCiiipNQooooAKKKKACiiigCvqOoW2k6fdX15MtvaWsTTTTP91EUEsx9gATX5Ef8FNb631T9pW3vLWVZ7W48OWE0UqdHRmmKsPYgiv0R/bO8aDwT+zj4ulV9txqUA0mIZ5bz2Eb49xGZD+FflZ+1hr48TeIvh7qG7dI3gbS4JTnP7yJp4W/WM08PWj9a9h1tf9Cc4y2tHIv7TfwOp7P5pKX5Mh/Ys/5Ou+GP/YVP/oiWv3Hr8OP2LP8Ak674Y/8AYVP/AKIlr9x66sT8Z4WS/wC7P1f6BRRRXIe+FFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAGB408A+HPiNpcWm+J9EstdsIphcJb30IkRZArKHAPfDMM+5r8kf+CjnhXR/BX7RFvo2g6db6TpVvoFp5NnaoEjTdLcM2AOmSSfxr9ja/If/AIKif8nR/wDcAsv/AEOet8PFe15ranl5vVqPAuk5Pluna+l+9u55h+xZ/wAnXfDH/sKn/wBES1+49fhx+xZ/ydd8Mf8AsKn/ANES1+49aYn4zkyX/dn6v9AooorkPfCiiigAooooAKKKKACiiigAooooAKKKKACiiigAr8h/+Con/J0f/cAsv/Q56/XivyH/AOCon/J0f/cAsv8A0OeunD/xDxs3/wB0l6o8w/Ys/wCTrvhj/wBhU/8AoiWv3Hr8OP2LP+Trvhj/ANhU/wDoiWv3HqsT8Zjkv+7P1f6BRRRXIe+FFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABXxz+1X+wFe/tI/Fb/hMbfxvb6BH/Z8Fj9jl0xrg5jaQ7t4lXrv6Y7UUVUZOLujGrRhXjyVFdHK/A/8A4Jm6h8Ifi54W8aTfEK21SPRbv7SbNNIaIzfIy7d5mbb97OcHpX3hRRTlJzd5Co0KeHjyUlZBRRRUG4UUUUAFFFFABRRRQB//2Q==",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.18",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "6.0",
      "Data": {}
    }
  ],
  "Author": "BVC",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [
    {
      "NodeId": "fc120817-6e51-4875-8484-f03729e5e810",
      "Binding": {
        "BeamByCurve_InClassDecl-1_InFunctionScope-1_Instance0_fc120817-6e51-4875-8484-f03729e5e810": ""
      }
    },
    {
      "NodeId": "0ad43ff1-0a48-49a1-ad2f-dc5daf6cf50f",
      "Binding": {
        "BeamByCurve_InClassDecl-1_InFunctionScope-1_Instance0_0ad43ff1-0a48-49a1-ad2f-dc5daf6cf50f": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.18.1.5096",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": 45637.49609375,
      "EyeY": 12847.4384765625,
      "EyeZ": -41175.15625,
      "LookX": -9990.10546875,
      "LookY": 3698.0654296875,
      "LookZ": 16567.91015625,
      "UpX": 0.20341919362545013,
      "UpY": 0.91913431882858276,
      "UpZ": -0.33736157417297363
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "10b835d3cd3c4edc8b604312ab165e44",
        "Name": "  Select Beam Model Elements",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7432.0689861145484,
        "Y": -421.41583330389943
      },
      {
        "Id": "a2b47f6d526b48c89a45cd49f523ffe5",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 12176.889418570476,
        "Y": 91.426767815234371
      },
      {
        "Id": "a09ad44a084a4f0898c699f6a0842261",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 17808.294364302637,
        "Y": -979.85944611522189
      },
      {
        "Id": "97c2dd486264413797857b9e87339a80",
        "Name": "Element.GetLocation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 11323.061950272077,
        "Y": 153.68256891978
      },
      {
        "Id": "8f63b8aa14214c28a1ce84d09f0b3644",
        "Name": "Curve.StartPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 11650.07870602028,
        "Y": 236.11334450103698
      },
      {
        "Id": "889deda7a9e04680aa242eb1bf5c2267",
        "Name": "Point.Z",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 11902.700916745513,
        "Y": 185.94371223242189
      },
      {
        "Id": "e181805bebe7424ab74dc0fbd5e1c917",
        "Name": "Line.Direction",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 12685.892738376,
        "Y": 40.498461240367874
      },
      {
        "Id": "55e984775eea4ce7a603c3a562a79a84",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 13593.717638098495,
        "Y": 119.49348563847752
      },
      {
        "Id": "1630ad9ab400430ea89d2b31acfe9e2a",
        "Name": "Vector.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 12954.2334264311,
        "Y": 36.696156110209245
      },
      {
        "Id": "fb16410027ca43a3b34a606f312033d0",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 13262.233426431132,
        "Y": 196.52365611020912
      },
      {
        "Id": "db9882867865486c8fec77d64bd9d2b7",
        "Name": "Math.Abs",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 13262.233426431132,
        "Y": 36.69615611020879
      },
      {
        "Id": "d7a5c7a6a67643d2972ab9d8ac16184e",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 13878.961156250043,
        "Y": -58.595365070290143
      },
      {
        "Id": "11f163ef374946eaa9992963b4990cb9",
        "Name": "Curve.StartPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 14576.740555172,
        "Y": -409.215337004327
      },
      {
        "Id": "c16035ae4d9740078084963042d30d5b",
        "Name": "Curve.StartPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 14577.812943096214,
        "Y": 647.90094381406948
      },
      {
        "Id": "1334e504361d4cd3b27e07f02a8dc95d",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 15973.466975426698,
        "Y": 452.1669180491765
      },
      {
        "Id": "63c8a65fa0994ea79519a412511836ca",
        "Name": "Math.Round",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 15080.814814606303,
        "Y": 630.99865594454855
      },
      {
        "Id": "14a50943441b4e4b9db38f85acca77f6",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 15351.384402532543,
        "Y": 601.10054401807918
      },
      {
        "Id": "360de54b08e2407c9e8b2fa8171dd64f",
        "Name": "Math.Floor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 15537.680213002974,
        "Y": 602.59926072722726
      },
      {
        "Id": "b454a56a7efd41e791c2cb380542c84a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 15782.249568976889,
        "Y": 599.474501042425
      },
      {
        "Id": "4cb1c09afbfa4e43a4dd3ae34e22f443",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 15814.8593430225,
        "Y": -399.286620315091
      },
      {
        "Id": "495e225622c54a2cbb2188f9d8b89fd9",
        "Name": "Math.Floor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 15568.9320049411,
        "Y": -385.434641375479
      },
      {
        "Id": "4b2e89f3596a466bbf01b3db4868d583",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 15345.3909197185,
        "Y": -410.051114827351
      },
      {
        "Id": "17e669f54a814a7594ed993d194198b1",
        "Name": "Math.Round",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 15056.8408543257,
        "Y": -341.623408329675
      },
      {
        "Id": "b1363073462545aba1bd92a10988fbbc",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 15989.4150191621,
        "Y": -583.73494509313
      },
      {
        "Id": "67701671991246b0b03f02ae3bfed4b1",
        "Name": "Curve.StartPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 16829.659704747075,
        "Y": -885.81455415156825
      },
      {
        "Id": "5c0b2fc1ac7f443aafe6b947492ddd9e",
        "Name": "List.AllIndicesOf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 18431.046276098637,
        "Y": -1004.3011111329903
      },
      {
        "Id": "a75122e8a7494db68a548f424cbeaf7d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 18178.873484852335,
        "Y": -888.79638987085627
      },
      {
        "Id": "1dd8a61608a9484bbac1160e9ff87bb3",
        "Name": "List.RemoveItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 18744.834542815719,
        "Y": -1112.1290160248238
      },
      {
        "Id": "f8d4892509e348db8c912b64535791d1",
        "Name": "Line.ByStartPointEndPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 32295.602131379725,
        "Y": -649.56455387706887
      },
      {
        "Id": "72791b7a40ab4e078e0129dd4238f529",
        "Name": "Point.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 14829.1758934262,
        "Y": -361.652372668383
      },
      {
        "Id": "486182fe1d9a419886bb92320fa79eef",
        "Name": "Point.X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 14811.713253814911,
        "Y": 624.53021574848049
      },
      {
        "Id": "dfda58298b4b479192bff6dfbc71f551",
        "Name": "Curve.EndPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 19170.07890621715,
        "Y": -828.0542735546793
      },
      {
        "Id": "43330608426f474295dd0f33fc942d74",
        "Name": "Curve.StartPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 19142.685591791549,
        "Y": -1274.9040583218573
      },
      {
        "Id": "1270f1c832584a8583b62f469ef8c6fa",
        "Name": "Point.X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 20275.614954126555,
        "Y": -969.39431273501293
      },
      {
        "Id": "9b3b342ae8c0498cbfe33c83df210619",
        "Name": "Point.X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 20223.235869325024,
        "Y": -1456.9583953527476
      },
      {
        "Id": "38269870dc8a48ae9d2b222c201ff72f",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 21429.042292591952,
        "Y": -1008.1839919916383
      },
      {
        "Id": "13e2d6cea2ea4ab0a4e7aaa47c68be73",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 21414.724464314229,
        "Y": -1426.3692903494848
      },
      {
        "Id": "fc1208176e5148758484f03729e5e810",
        "Name": "StructuralFraming.BeamByCurve",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 32765.374373134073,
        "Y": -708.64949053659643
      },
      {
        "Id": "462aab1014414bbfa0de54e7f568cd3f",
        "Name": "List.Count",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 18187.280119266536,
        "Y": -1064.3897465746104
      },
      {
        "Id": "d61b8df70a1b4eaa9162c050b6820f9a",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 35469.157234766171,
        "Y": -520.58380400356566
      },
      {
        "Id": "132bed7f8afd4a62a731dee1fb9c4d71",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 34228.069101392408,
        "Y": -427.51790227012543
      },
      {
        "Id": "e10f4e2c242e48bcbb24cb8fee815328",
        "Name": "List.Clean",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 34224.7970813903,
        "Y": -583.977187251419
      },
      {
        "Id": "7733e10fa22f48d1a2b0b5f404a33ec0",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 34002.75966030742,
        "Y": -552.61596184361179
      },
      {
        "Id": "0ad43ff10a4849a1ad2fdc5daf6cf50f",
        "Name": "StructuralFraming.BeamByCurve",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 32778.208839934377,
        "Y": -507.0348831673241
      },
      {
        "Id": "9d94042232444f65b4eb9e95079ebe71",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 33242.178212155683,
        "Y": -649.48608962487356
      },
      {
        "Id": "3d365cf8d00b40e8aaef73e96cc19ec3",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 21843.348175600415,
        "Y": -2296.94257529168
      },
      {
        "Id": "7771d0ff297c4775a5c3e75dfb1ed67c",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 21854.436028491622,
        "Y": -1842.0959056995146
      },
      {
        "Id": "8587ae897f3447c3bf7c1217c20910df",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 20830.26187074773,
        "Y": -1034.0155663920559
      },
      {
        "Id": "d62823fa635a48d7ba9590bc052995b5",
        "Name": "List.DropItems",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22904.438819095489,
        "Y": -1887.6127334178941
      },
      {
        "Id": "e8a2b9316adc4564bc2e8aa237d2bec5",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22769.016309510189,
        "Y": -1059.0710611818345
      },
      {
        "Id": "6119ea7d8afc4d2aa871228c1bdd0102",
        "Name": "List.DropItems",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22886.376214136802,
        "Y": -2296.4656789456735
      },
      {
        "Id": "f26a71fdbc2c43acbc0b65de38003449",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 20800.869696503494,
        "Y": -1394.8955190220654
      },
      {
        "Id": "8da62648524f4ebca9a8943d9986ddf3",
        "Name": "List.SortByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 17345.545702705473,
        "Y": -981.20221532283472
      },
      {
        "Id": "0fa0a7402f794975a79955409268c333",
        "Name": "Point.X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 17092.034266133072,
        "Y": -895.67539069971008
      },
      {
        "Id": "f492ab939c984060888029ef93c5eb54",
        "Name": "List.SortByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 19923.459269206483,
        "Y": -1431.2480043941528
      },
      {
        "Id": "9a52fed13c1d448caee74b49a7690b44",
        "Name": "Point.X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 19488.65656959148,
        "Y": -1371.0149683499053
      },
      {
        "Id": "78ccc0cf37e04e95916051fc5b799812",
        "Name": "List.SortByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 19973.780879281196,
        "Y": -899.89043716329923
      },
      {
        "Id": "61b05571a2c940da911a21618b2edff2",
        "Name": "Point.X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 19574.82656717614,
        "Y": -942.02413931618423
      },
      {
        "Id": "33bf80b320424f7197662eed97f893d4",
        "Name": "List.DropItems",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 23021.548087904437,
        "Y": -1218.9635569436437
      },
      {
        "Id": "2cd212fd58aa4cc988605fbe6f480010",
        "Name": "List.DropItems",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 23060.998017086553,
        "Y": -761.99394974263942
      },
      {
        "Id": "8e5b053b450a423e8c082bcd43d90d75",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22334.97765773466,
        "Y": -2292.6917179463521
      },
      {
        "Id": "ffcb65bebe8f481bb0277062ce3855ff",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22519.543397368812,
        "Y": -1835.9723803760564
      },
      {
        "Id": "4a0a66e0fc134870932862bddb383249",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22478.633491244331,
        "Y": -1262.7253488816134
      },
      {
        "Id": "bc2a51ddfe4649a38fb755a45226b55a",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22427.406500359943,
        "Y": -762.93107652492017
      },
      {
        "Id": "277a5e6037a94e5da73d4b51a73c8fc9",
        "Name": "Point.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22049.296103395482,
        "Y": -1191.5395667370503
      },
      {
        "Id": "3b43fafa4e764bbbaebe7b5b84f83d2a",
        "Name": "Point.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22034.99616422621,
        "Y": -731.32424565513293
      },
      {
        "Id": "82df5db45023429198fee2835aaa0a8a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22620.111747824249,
        "Y": -2231.3983978377278
      },
      {
        "Id": "833b510c9c854fd58f54894b9bbe2acd",
        "Name": "Element.UnjoinAllGeometry",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 33454.212350950365,
        "Y": -551.84215573291976
      },
      {
        "Id": "ed0123c5453c44b3aa7eef198b93ec15",
        "Name": "Element.ElementType",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8219.3108093671326,
        "Y": -306.84911691199972
      },
      {
        "Id": "fdfd6ee3f2a94d0e86fe6999d89f092b",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 10760.05794945701,
        "Y": -317.51101435644011
      },
      {
        "Id": "2edd5a49e65e4361ae88537804169d23",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8498.1737816927689,
        "Y": -427.32945330798782
      },
      {
        "Id": "955685b1c73542bbb62a84c879c42264",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22311.8458711141,
        "Y": 636.76106186110462
      },
      {
        "Id": "ba3c3fe1c9ee4731aad92cbf3720ceb0",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22335.575848989633,
        "Y": 1144.2369179107845
      },
      {
        "Id": "9d0b2807ed6546e88a058bf5ad9652e2",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22803.4753532484,
        "Y": 641.0119192064343
      },
      {
        "Id": "ea9923ed124742efa5eaaa050e889c12",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 23000.683217866834,
        "Y": 1150.3604432342445
      },
      {
        "Id": "fb67ac6e4f30448d9df41f79f19422dc",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 23071.0863203711,
        "Y": 767.61869764612447
      },
      {
        "Id": "258c70d6762149aab9918c2bc410f00e",
        "Name": "List.DropItems",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 23397.837818087814,
        "Y": 622.14384650049885
      },
      {
        "Id": "9c9fed628a264950a4e989807b7dddb7",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 21346.245476225416,
        "Y": 972.48663589102023
      },
      {
        "Id": "45927e636c6d49c59381fa26cb8696ae",
        "Name": "List.DropItems",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 23385.578639593532,
        "Y": 1098.7200901924043
      },
      {
        "Id": "05c39a4068f5427c9c837c0dce7ea5cb",
        "Name": "List.SortByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 19833.612381714098,
        "Y": 1000.4906187436617
      },
      {
        "Id": "8b4c219af1e44dc3bf88bd0919d116f8",
        "Name": "List.DropItems",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 23199.847933541379,
        "Y": 1878.9173663548909
      },
      {
        "Id": "9e9da896dcd34159a82955c078573d0b",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22663.240010440157,
        "Y": 1709.5562105164734
      },
      {
        "Id": "71f64f84493748c291b9d9c9184bc88e",
        "Name": "Curve.StartPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 19059.33921277427,
        "Y": 1072.3279546387389
      },
      {
        "Id": "cbfb49c9c8444dfba0be39864677d1e8",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22906.858415334769,
        "Y": 1922.5633808904913
      },
      {
        "Id": "21df62382434492396e6315cbb534f74",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 20675.169056379687,
        "Y": 985.194615384254
      },
      {
        "Id": "5e57eb7a1dbd4a6dbebb3a8793e43b30",
        "Name": "List.RemoveItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 18661.488163798469,
        "Y": 1235.10299693577
      },
      {
        "Id": "7fdc9657dd3e4ceda82a8e4d1d22c80a",
        "Name": "List.SortByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 17188.443756336736,
        "Y": 1414.6301796333835
      },
      {
        "Id": "9d376e7f302648038b17ffbdd606866e",
        "Name": "List.DropItems",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 23226.278370601591,
        "Y": 2231.9425123462943
      },
      {
        "Id": "260377b31f6340188f3481f35b87a25f",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22613.478253428093,
        "Y": 2256.2777309239395
      },
      {
        "Id": "1dffe4ba2f774f959fc5b5536884128e",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30672.30414847557,
        "Y": -728.907246936348
      },
      {
        "Id": "3b554f4527364997bff8be5b5a5325a1",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30633.539412471375,
        "Y": -547.65232114916284
      },
      {
        "Id": "f6ff184c5c8647de925e6ae840aa8756",
        "Name": "Element.ElementType",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 31243.210353421364,
        "Y": -757.06499185290227
      },
      {
        "Id": "bfb0da0142014eff816702aa6b2e9cc6",
        "Name": "Element.GetParameterValueByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 31151.853810783472,
        "Y": -599.05597320968332
      },
      {
        "Id": "13c852a448744cbbae53de04e2c0cfc0",
        "Name": "List.Count",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 18103.933740249267,
        "Y": 1282.8422663859842
      },
      {
        "Id": "8fc72b48b20f42cabb5267ffe3c0e2f3",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 20687.280462464914,
        "Y": 1259.4486366092315
      },
      {
        "Id": "3377748acf3344ec949a7bac46e8c3ab",
        "Name": "Curve.StartPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 16672.557758378334,
        "Y": 1510.0178408046502
      },
      {
        "Id": "8fc061da432b4edeaea03d029bfc287e",
        "Name": "List.AllIndicesOf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 18347.699897081369,
        "Y": 1342.930901827604
      },
      {
        "Id": "52d862e55b66414093744819f3b2e94b",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 21333.732937383986,
        "Y": 1295.5462893661061
      },
      {
        "Id": "b2e7f4999f5647ea8a28fb63d6cc86ec",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 18095.52710583507,
        "Y": 1458.4356230897379
      },
      {
        "Id": "743795506b4944fb9954ef1f9791f055",
        "Name": "List.SortByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 19890.434500263967,
        "Y": 1447.3415757972948
      },
      {
        "Id": "a5b13eb72add49f18701e9d93cdbb9c7",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 17724.947985285369,
        "Y": 1367.3725668453721
      },
      {
        "Id": "df0ea2edf20d4049b2dcd8b4ece225ff",
        "Name": "Curve.EndPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 19086.732527199867,
        "Y": 1519.177739405915
      },
      {
        "Id": "b6402103f9804aa88fe7b03c920dd353",
        "Name": "Point.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 16923.106469430917,
        "Y": 1495.3302677107279
      },
      {
        "Id": "580a9200bfc84efcbe2ca4c6a924d527",
        "Name": "Point.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 19459.325459335618,
        "Y": 1446.5543667990805
      },
      {
        "Id": "bcf6e5e6533e41b296400ec07b4cc6c4",
        "Name": "Point.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 19429.952577008909,
        "Y": 1128.3380022727733
      },
      {
        "Id": "12651921a1fd4f9cb3e7a9a87cf7472a",
        "Name": "Point.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 20194.89325542505,
        "Y": 1418.9943588083966
      },
      {
        "Id": "4c79b141dca74c54aa98c30486476108",
        "Name": "Point.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 20183.141181282288,
        "Y": 954.21549709835392
      },
      {
        "Id": "cc3a3bf32d37464ea057a7138a7cb2d0",
        "Name": "Point.X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22216.155976189792,
        "Y": 2266.2701828090662
      },
      {
        "Id": "2c1d079499674cf788bef43516c9cc8b",
        "Name": "Point.X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 22226.11818205595,
        "Y": 1769.3737862955707
      },
      {
        "Id": "ea7465edd6394e55a59576391ae00c55",
        "Name": "Line.ByStartPointEndPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 32309.261971822518,
        "Y": -447.78040675877173
      },
      {
        "Id": "a29d0c75438e4f5db79de5b25df40f47",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 10203.43377475725,
        "Y": -417.26081036829521
      },
      {
        "Id": "9457d6c41b01457d8899d74fc1d814e9",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 10438.29524852511,
        "Y": -474.30887829670206
      },
      {
        "Id": "b01c91ee6da04436a2a939437cc6d502",
        "Name": "Number of times to move the slidder",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8779.1261043972281,
        "Y": -341.14222063750003
      },
      {
        "Id": "a36e1016ac714146aed5ef820a35cd69",
        "Name": "Element.UnjoinAllGeometry",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7894.8260368392439,
        "Y": -420.64498157515868
      },
      {
        "Id": "2344c93a91f64035bb13c73ce8001cc5",
        "Name": "List.AddItemToEnd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26902.529124125191,
        "Y": -2474.2638200777055
      },
      {
        "Id": "a7225f76e6d54419b32aeb5ecb861877",
        "Name": "List.AddItemToFront",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26808.833445918262,
        "Y": -1767.750914251641
      },
      {
        "Id": "0c5a4296b7eb41a0a11f1b1577248655",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25187.4936612745,
        "Y": -2426.6997967661491
      },
      {
        "Id": "69ce41c4c6124c489d08f37aa3e223c0",
        "Name": "-",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 24873.320783739924,
        "Y": -2447.6638141299782
      },
      {
        "Id": "a4941550c9b747b7bc90a58a95f7de09",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25527.406874004526,
        "Y": -2686.0382991593979
      },
      {
        "Id": "671e64019fd4495db723b53855d8fd86",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26598.810344610221,
        "Y": -2732.7954940053469
      },
      {
        "Id": "4da5f2570aa648e4ad3bd7b9b990a182",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25532.608689347624,
        "Y": -2483.8741170169087
      },
      {
        "Id": "baf7003a0c4b4b34bd567c7cf316267b",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25517.135844529061,
        "Y": -2316.0573598908495
      },
      {
        "Id": "a6f97b5259ce47c082b8404db1c21df1",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26593.36186538867,
        "Y": -2467.5317765394975
      },
      {
        "Id": "c7d7982330114a80a9c42c893c4958e0",
        "Name": "List.AddItemToFront",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26888.596151979011,
        "Y": -2729.9516104879622
      },
      {
        "Id": "3df80df1914a426a81487f65a0216865",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26235.241564047428,
        "Y": -2521.2612679086824
      },
      {
        "Id": "fcb784fff2f8439cb4242f5717f2d3ff",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26486.908199702691,
        "Y": -1817.8746688297069
      },
      {
        "Id": "ef6003646ca5474fb173bac84700ee56",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26396.600277378166,
        "Y": -1370.437873375909
      },
      {
        "Id": "7cdb23e6b03b40bf9695f783decf07cc",
        "Name": "List.AddItemToEnd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26837.759425885055,
        "Y": -1417.04758003195
      },
      {
        "Id": "5dd6414184f54d57a877cf84cf78fcee",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25603.106923971216,
        "Y": -1749.6289750404524
      },
      {
        "Id": "6d163d7597db4480a9dab4310161e311",
        "Name": "List.LastItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25623.848459304765,
        "Y": -1381.0734223266886
      },
      {
        "Id": "94574d8b87c44b1198cca0968d60e5bd",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25993.134362903522,
        "Y": -1395.7271282973907
      },
      {
        "Id": "05584738260840ad93318c44d01c6bb9",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26089.807982422481,
        "Y": -1761.637912073892
      },
      {
        "Id": "7e9c12e885dc426089672ead4eedee50",
        "Name": "Point.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25848.445325825865,
        "Y": -1736.2430378173094
      },
      {
        "Id": "5cee199391134969952842ec46146576",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25854.648822626034,
        "Y": -2725.0164846878215
      },
      {
        "Id": "1a0b7cccaaa046abb7599bf935ca9e17",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26234.058816150748,
        "Y": -2727.3556875380191
      },
      {
        "Id": "1ab5a62649e247b0bead12a1f399c8c3",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25854.436707517532,
        "Y": -2528.13212809819
      },
      {
        "Id": "3c8b7b197dd749a2acc847a0bfdea3ad",
        "Name": "List.LastItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25852.173256318667,
        "Y": -2314.0724776643083
      },
      {
        "Id": "83a669dff3fa4124ba03f6fb70f98887",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26228.362137030526,
        "Y": -2383.9033453440907
      },
      {
        "Id": "28a31595613f409bbe5b064b92cf746e",
        "Name": "List.Count",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28479.961091755104,
        "Y": -2716.1712456725159
      },
      {
        "Id": "5fb05c3317e445f1a2acb241e6ea07aa",
        "Name": ">",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28741.816487281169,
        "Y": -2645.795274040282
      },
      {
        "Id": "c4f6e9004b224cbbaa36923ba45587fa",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29036.816487281169,
        "Y": -2751.795274040282
      },
      {
        "Id": "ce68a4edf80f42b183199144707f15a6",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 31080.879332663175,
        "Y": -2592.0806615064748
      },
      {
        "Id": "03a551e4cd8e4b629e22baad683772cf",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 27955.642626859721,
        "Y": -2714.4308604271832
      },
      {
        "Id": "ff179e0295e746e7aa66a11a844911d8",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29373.097917392468,
        "Y": -2734.795274040282
      },
      {
        "Id": "8f82e2eceab5403b8742a1402e08ca02",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29998.520156406368,
        "Y": -2818.227695538952
      },
      {
        "Id": "ca5c2a6ec4f94b61bb021f2a1ebf9a1d",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29682.816487281169,
        "Y": -2734.795274040282
      },
      {
        "Id": "db9b5188bcc7467d9bc07f3cf9f5da8f",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29371.816487281169,
        "Y": -2563.8097811044013
      },
      {
        "Id": "c4b740a7a28d493dad996d136bf9f0dc",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 27676.4840504053,
        "Y": -2654.9401780347157
      },
      {
        "Id": "a5a4547403854b73b0ed2a2001c3a4ed",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28474.816487281169,
        "Y": -2554.9677740402817
      },
      {
        "Id": "7464fc33c1f446ea88740cba9914b9ac",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28211.855070754813,
        "Y": -2783.6429159263721
      },
      {
        "Id": "0a1d7edc34ec4464b1b7aad4d481c8aa",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28741.816487281169,
        "Y": -2823.795274040282
      },
      {
        "Id": "3c8632e0788641de8699c4c8570adb20",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 27936.607631129718,
        "Y": -1535.2750456338517
      },
      {
        "Id": "0d5c6f0cc63d48c4ad04b50cccc485e8",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28484.693880935905,
        "Y": -1364.1972584693667
      },
      {
        "Id": "1a38ffb167e84e9cad6062df417c3e95",
        "Name": "List.Count",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28509.01256923829,
        "Y": -1524.7127697575679
      },
      {
        "Id": "6f2b7adf87a843a19577c9b9fcc5f4ea",
        "Name": ">",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28751.693880935905,
        "Y": -1455.0247584693666
      },
      {
        "Id": "6498f9d1a0194ee79db72f848ae8dc99",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29046.693880935905,
        "Y": -1561.0247584693666
      },
      {
        "Id": "46abd7a518104942ae22fbefc1b4cc70",
        "Name": "List.LastItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 31311.510146091146,
        "Y": -1452.2025087753937
      },
      {
        "Id": "1f145e98fedc487ab1ee130f3b1523e8",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30013.693880935905,
        "Y": -1578.0247584693666
      },
      {
        "Id": "c7c12a9fd78b4e5ba46f991055c962a7",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29692.693880935905,
        "Y": -1544.0247584693666
      },
      {
        "Id": "c9e04f1a8e8f4fd38568a60b4614b742",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29381.693880935905,
        "Y": -1544.0247584693666
      },
      {
        "Id": "3736caddd19f435ea3dbb0b4a2d50b92",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 27692.693880935905,
        "Y": -1433.9472584693667
      },
      {
        "Id": "28647ec02981497ca1e22afaadb57a3f",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28751.693880935905,
        "Y": -1633.0247584693666
      },
      {
        "Id": "934b27a28c9d4b5790a02eac38055fae",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28193.402597879638,
        "Y": -1596.5080444893301
      },
      {
        "Id": "95829e84b0624fccb10dfd2c742a4bed",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29325.511684936897,
        "Y": -1346.2581516513924
      },
      {
        "Id": "588180b0b14d47b9ab0ffccad3965395",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25234.654153051422,
        "Y": 614.72818432284294
      },
      {
        "Id": "708efaa882f843c697065f3662ed9895",
        "Name": "-",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 24920.481275516824,
        "Y": 593.764166959013
      },
      {
        "Id": "018b75d06bc4490e81b35229d19bb420",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25574.567365781422,
        "Y": 355.38968192959328
      },
      {
        "Id": "de90bce3606d4c85b726f5330d2f29b3",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25579.769181124524,
        "Y": 557.55386407208334
      },
      {
        "Id": "77801beba0c145d8961dad0ad8528020",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25564.296336305924,
        "Y": 725.37062119814345
      },
      {
        "Id": "dc9f54506fc34549bfd4b2e26960e3ad",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25901.809314402923,
        "Y": 316.41149640117328
      },
      {
        "Id": "ebebd761c513454494287c8b75ecbbde",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25901.597199294421,
        "Y": 513.29585299080372
      },
      {
        "Id": "e65a14066d544f189e16118b3de36927",
        "Name": "List.LastItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25899.333748095523,
        "Y": 727.35550342468377
      },
      {
        "Id": "500bfbadaddd44bc9c819a27c5b77b1d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26282.402055824325,
        "Y": 520.16671318031331
      },
      {
        "Id": "b450efa4d8f74d0a88a69db37eaa3fe7",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26281.219307927622,
        "Y": 314.072293550973
      },
      {
        "Id": "f88cfb3360374a86b782ca3d4ac7c529",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26275.522628807423,
        "Y": 657.52463574490321
      },
      {
        "Id": "f01a2dba7ee5434ebe9deda1c8012888",
        "Name": "List.AddItemToFront",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26712.264159750237,
        "Y": 1441.2734956489312
      },
      {
        "Id": "6833281a71d342d193403e98e1ed0717",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26645.970836387121,
        "Y": 308.63248708364335
      },
      {
        "Id": "02f2bf4b58134ded9cc0106d6dcadb85",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26640.522357165522,
        "Y": 573.89620454949363
      },
      {
        "Id": "cdcd305f33e242a792e0893e07b6d542",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26390.338913534637,
        "Y": 1391.1497410708616
      },
      {
        "Id": "e3813b1343534c79bbbb4613468062a4",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25515.643172051015,
        "Y": 1500.2846904928936
      },
      {
        "Id": "1d3bef95ce054772a5948c96de0f0f52",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25993.238696254437,
        "Y": 1447.3864978266811
      },
      {
        "Id": "7d46a9cdb7634b9ba40714332b922d91",
        "Name": "List.AddItemToEnd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26949.689615902022,
        "Y": 567.16416101129289
      },
      {
        "Id": "047634b336eb4a0196728957e916bb64",
        "Name": "List.AddItemToFront",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26935.756643755922,
        "Y": 311.47637060103352
      },
      {
        "Id": "895ce09d7e82476eb80a4b3a8c1c59b3",
        "Name": "List.AddItemToEnd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26741.190139717037,
        "Y": 1791.9768298686213
      },
      {
        "Id": "de6dd42634b54bbf9c0e7149f65a2619",
        "Name": "List.LastItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25527.279173136736,
        "Y": 1827.9509875738813
      },
      {
        "Id": "7e8d5c7353c247c5a97c88b5a69619aa",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25896.565076735435,
        "Y": 1813.2972816031811
      },
      {
        "Id": "e967bf3868aa4f9c86cc1465c593b85b",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 26300.030991210137,
        "Y": 1838.5865365246614
      },
      {
        "Id": "ef4a2c35f00041eba7b8bfd4a84c25b8",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 27854.045407579648,
        "Y": 1651.8276639591809
      },
      {
        "Id": "e78dfaa13aab470685a51cc8218148c5",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 27983.175105410111,
        "Y": 287.35395241868355
      },
      {
        "Id": "c43e28f24d764ec5a912c8d4fe691220",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28097.95915777345,
        "Y": 1550.4998767947009
      },
      {
        "Id": "a6189be0bed84627b1aee52b2df0ab47",
        "Name": "List.Count",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28786.652146759912,
        "Y": 226.1228847808834
      },
      {
        "Id": "3b6e5811593042f4b3ed1ba73d7cdcc5",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28262.333681864511,
        "Y": 227.86327002621329
      },
      {
        "Id": "fd846cd0bb134667a32b48da686b212a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28781.507542285912,
        "Y": 387.326356413123
      },
      {
        "Id": "b7d08c432ce94f138db4f547e744e619",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28469.461851819709,
        "Y": 128.90316971496304
      },
      {
        "Id": "c6d155830bf74b9a89338b833490233e",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28646.045407579648,
        "Y": 1721.5776639591809
      },
      {
        "Id": "a6e68634edd64caba6270057e2c67b34",
        "Name": "List.Count",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28670.364095882051,
        "Y": 1561.0621526709806
      },
      {
        "Id": "0609224b9cdf4d4aa0a15724654dda42",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28354.754124523348,
        "Y": 1489.2668779392206
      },
      {
        "Id": "cecd0fbbba6646c8af5d68296b65877f",
        "Name": ">",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28913.045407579648,
        "Y": 1630.750163959181
      },
      {
        "Id": "c263af0d7e74471993e6b17c975a565b",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 28913.045407579648,
        "Y": 1452.750163959181
      },
      {
        "Id": "e59a1f9dddd84b44b60b40a778ba03f2",
        "Name": ">",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29048.507542285912,
        "Y": 296.49885641311357
      },
      {
        "Id": "d701902ad3d34e6089f933b132e71beb",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29048.507542285912,
        "Y": 118.49885641311357
      },
      {
        "Id": "7822e62e6c2f448c8b3c32794054f73a",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29343.507542285912,
        "Y": 190.49885641311357
      },
      {
        "Id": "8e71686f85b744d88f36d7a440d916e3",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29208.045407579648,
        "Y": 1524.750163959181
      },
      {
        "Id": "9a8df55783f940afbc8481c7ac7049c1",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29486.86321158065,
        "Y": 1739.5167707771607
      },
      {
        "Id": "d1e1fd8924794f9e8b1103357994a56b",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29543.045407579648,
        "Y": 1541.750163959181
      },
      {
        "Id": "b934103cfcf34b119efdd5ea5e92c02e",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29678.507542285912,
        "Y": 207.49885641311357
      },
      {
        "Id": "7401a824e9204353b6e2a23161e0b3fc",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29989.507542285912,
        "Y": 207.49885641311357
      },
      {
        "Id": "cf67494e7e6d46179b4942b1b2dcfec3",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29678.507542285912,
        "Y": 378.48434934900342
      },
      {
        "Id": "79396dec98d14fddb25f54cd5326c927",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 29854.045407579648,
        "Y": 1541.750163959181
      },
      {
        "Id": "1b406e2430ca4c8bb11fa5125ec408be",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30305.211211411111,
        "Y": 124.06643491444356
      },
      {
        "Id": "9346cf84c3a34146af70ebf67f4cff16",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30175.045407579648,
        "Y": 1507.750163959181
      },
      {
        "Id": "7499c48eacbd41ce937611e7792137fe",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 31218.257875033865,
        "Y": 157.03417882999838
      },
      {
        "Id": "2c3c035998c3412092b7433abe7a28c4",
        "Name": "List.LastItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 31202.148775911119,
        "Y": 1521.0596025857735
      },
      {
        "Id": "616522bdf4244469a0b9bf54fcd02fa4",
        "Name": "Point.X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 25724.338148821967,
        "Y": 1481.7822212378417
      },
      {
        "Id": "fc4b28e396104629b4463d6e4aeaa952",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30898.861330702988,
        "Y": -1518.2370123199919
      },
      {
        "Id": "1b8028210b5f42bfa5ceb53c6f8d478f",
        "Name": "Point.Z",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30483.896242930303,
        "Y": -1366.7103207432092
      },
      {
        "Id": "c7967f0d819946e6a9f1613a3f02ec6e",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30899.234768418897,
        "Y": 199.02090073147855
      },
      {
        "Id": "387e119ce196487f851cba7ec8047880",
        "Name": "Point.Z",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30576.101090826298,
        "Y": 287.95158010272689
      },
      {
        "Id": "3e151f2b7035432e9a819d73f29e7e96",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30917.50948422392,
        "Y": 1551.2449499551387
      },
      {
        "Id": "6c7eb0db6f3b470a9cc9b08be2d592ea",
        "Name": "Point.Z",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30523.578372397635,
        "Y": 1628.273743202182
      },
      {
        "Id": "45f1e44368b5465da77df6cd5327bc99",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30768.898329241718,
        "Y": -2696.1566964923127
      },
      {
        "Id": "ee80460b9f4d441298a8300693c060d9",
        "Name": "Point.Z",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30409.230371569814,
        "Y": -2647.9557912034857
      },
      {
        "Id": "f407533fa3e94fcabd86b0fa1d4ff20f",
        "Name": "Element.Delete",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 36289.253165385366,
        "Y": -887.85525211554079
      },
      {
        "Id": "4f0db9718c704bc3b61deba94bb23af2",
        "Name": "List.GetItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 10758.800966406132,
        "Y": -551.50952799775462
      },
      {
        "Id": "18ffb23aaf9c46e7af384bc0711a2815",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30780.026724108116,
        "Y": -1999.5958592125571
      },
      {
        "Id": "d02ee4a57d69474986af13a45c6c25ed",
        "Name": "Element.GetParameterValueByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 31289.619987610018,
        "Y": -2048.8192275705374
      },
      {
        "Id": "2919db1f12754781866ad06dfa33876a",
        "Name": "Element.ElementType",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 31381.29560939025,
        "Y": -2200.553203954481
      },
      {
        "Id": "332b4702843a4d57a821f3c1dc8cf384",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 30788.744915695817,
        "Y": -2147.3763607706896
      },
      {
        "Id": "3f8c231c887647a2b1f4ee60666824f1",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 35955.324792959924,
        "Y": -879.63686726219726
      },
      {
        "Id": "3dde450ce41b428a9468c1cc612e06ed",
        "Name": "Element.UnjoinAllGeometry",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 35850.82763180363,
        "Y": -523.03873377111427
      },
      {
        "Id": "036e2395986e4384967ad006ec433e4d",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 32502.992870172875,
        "Y": 589.04806954818582
      },
      {
        "Id": "9409a21225004936b298c7e9f0413800",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 32889.477112698005,
        "Y": 571.74437221110179
      },
      {
        "Id": "d32ef603b8ab481d871f0233ecd3f967",
        "Name": "Line.ByStartPointEndPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 32529.985520754712,
        "Y": 367.93781217463606
      },
      {
        "Id": "f135c86d98f146919349b1cdafcabd44",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 33168.86332245369,
        "Y": 495.6440239894506
      },
      {
        "Id": "5d6228bdc7794ca689061c925ae7601f",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 32879.979760609,
        "Y": 306.36000878747319
      },
      {
        "Id": "cdc8d92610384dc4968c635bc3f0df70",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 33459.71096574892,
        "Y": 280.19202996933853
      },
      {
        "Id": "25f99d331402459cb1bac4af70addc2b",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 33507.569777693432,
        "Y": -1765.7648819564047
      },
      {
        "Id": "77965262c52943dd8b83d151675010de",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 32968.015167359452,
        "Y": -1918.0589281161176
      },
      {
        "Id": "915e3c4785e144b5887c8e310143609a",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 33130.569777693432,
        "Y": -1591.7648819564047
      },
      {
        "Id": "24b65c93e39f42f7a0256246411aaa3f",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 32835.569777693432,
        "Y": -1485.7648819564047
      },
      {
        "Id": "03ae599bc43046f386375f79a649b180",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 32835.569777693432,
        "Y": -1663.7648819564047
      },
      {
        "Id": "2a6af5755da9484cad6ec6b4dbf9215b",
        "Name": "Line.ByStartPointEndPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 32458.569777693432,
        "Y": -1430.7425839192215
      },
      {
        "Id": "cb69882315134203b8a21799b02bf2a5",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 32458.569777693432,
        "Y": -1731.7648819564047
      },
      {
        "Id": "212ba56413694c28a7bd259e61593350",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 35718.913140323661,
        "Y": -877.85542495379082
      },
      {
        "Id": "0363c538c30a48e5ae00c0fa78ce114a",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 33278.419726472042,
        "Y": -1953.1975182893896
      },
      {
        "Id": "d8ebeb88f760491189ad3fba42226004",
        "Name": "Slider",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9179.6441811447949,
        "Y": -460.62090637367504
      },
      {
        "Id": "aa267002dad04c5b86a7dc46d90985f2",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8904.84998097047,
        "Y": -207.55043143554008
      },
      {
        "Id": "7833ef9d17874eae8bce91a30675dd51",
        "Name": "MultipleInputForm ++",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9759.3236043211546,
        "Y": -471.92659512791317
      },
      {
        "Id": "64e77c7b0f994e878c42913aa323c687",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9120.18512221744,
        "Y": -194.81204948414694
      },
      {
        "Id": "f892884bcae441ec8294fcc896c907e5",
        "Name": "Element.GetParameterValueByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 34765.028122097545,
        "Y": -504.48929581639845
      }
    ],
    "Annotations": [
      {
        "Id": "d0c72247cf554b5caf1a4f3719eb39d2",
        "Title": "Select Elements",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "10b835d3cd3c4edc8b604312ab165e44",
          "ed0123c5453c44b3aa7eef198b93ec15",
          "2edd5a49e65e4361ae88537804169d23",
          "fdfd6ee3f2a94d0e86fe6999d89f092b",
          "9457d6c41b01457d8899d74fc1d814e9",
          "a29d0c75438e4f5db79de5b25df40f47",
          "b01c91ee6da04436a2a939437cc6d502",
          "a36e1016ac714146aed5ef820a35cd69",
          "d8ebeb88f760491189ad3fba42226004",
          "aa267002dad04c5b86a7dc46d90985f2",
          "7833ef9d17874eae8bce91a30675dd51",
          "64e77c7b0f994e878c42913aa323c687",
          "4f0db9718c704bc3b61deba94bb23af2"
        ],
        "HasNestedGroups": false,
        "Left": 7422.0689861145484,
        "Top": -624.50952799775462,
        "Width": 3570.9889633424618,
        "Height": 594.58293286984144,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -551.50952799775462,
        "InitialHeight": 501.69747851360768,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b0bde43a44f745b6a155aebfde4fe5ac",
        "Title": "Getting Location",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "97c2dd486264413797857b9e87339a80",
          "8f63b8aa14214c28a1ce84d09f0b3644",
          "889deda7a9e04680aa242eb1bf5c2267",
          "a2b47f6d526b48c89a45cd49f523ffe5"
        ],
        "HasNestedGroups": false,
        "Left": 11313.061950272077,
        "Top": 18.426767815234371,
        "Width": 1097.8274682983993,
        "Height": 361.68657668580261,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 91.426767815234371,
        "InitialHeight": 289.68657668580261,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f425faca81c6491cad11cf6bba04a18f",
        "Title": "Grouping By X & Y Direction",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e181805bebe7424ab74dc0fbd5e1c917",
          "55e984775eea4ce7a603c3a562a79a84",
          "1630ad9ab400430ea89d2b31acfe9e2a",
          "fb16410027ca43a3b34a606f312033d0",
          "db9882867865486c8fec77d64bd9d2b7",
          "d7a5c7a6a67643d2972ab9d8ac16184e"
        ],
        "HasNestedGroups": false,
        "Left": 12675.892738376,
        "Top": -131.59536507029014,
        "Width": 1448.068417874043,
        "Height": 472.11902118049926,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -58.595365070290143,
        "InitialHeight": 400.11902118049926,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "14e9c70602e7493bacdc1fac6be28ce4",
        "Title": "Grouping By \"Point X\"",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1334e504361d4cd3b27e07f02a8dc95d",
          "63c8a65fa0994ea79519a412511836ca",
          "14a50943441b4e4b9db38f85acca77f6",
          "360de54b08e2407c9e8b2fa8171dd64f",
          "b454a56a7efd41e791c2cb380542c84a",
          "c16035ae4d9740078084963042d30d5b",
          "486182fe1d9a419886bb92320fa79eef"
        ],
        "HasNestedGroups": false,
        "Left": 14567.812943096214,
        "Top": 379.1669180491765,
        "Width": 1639.6540323304835,
        "Height": 412.734025764893,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 452.1669180491765,
        "InitialHeight": 340.734025764893,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a1093597cec142d18b4cfcd6e25e8956",
        "Title": "Grouping By \"Point Y\"",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b1363073462545aba1bd92a10988fbbc",
          "17e669f54a814a7594ed993d194198b1",
          "4b2e89f3596a466bbf01b3db4868d583",
          "495e225622c54a2cbb2188f9d8b89fd9",
          "4cb1c09afbfa4e43a4dd3ae34e22f443",
          "11f163ef374946eaa9992963b4990cb9",
          "72791b7a40ab4e078e0129dd4238f529"
        ],
        "HasNestedGroups": false,
        "Left": 14566.740555172,
        "Top": -656.73494509313,
        "Width": 1656.674463990099,
        "Height": 459.11153676345504,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -583.73494509313,
        "InitialHeight": 387.11153676345504,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "141f17cd72044a259faaf40c0170ae51",
        "Title": "Sorting by Point X",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "67701671991246b0b03f02ae3bfed4b1",
          "0fa0a7402f794975a79955409268c333",
          "8da62648524f4ebca9a8943d9986ddf3"
        ],
        "HasNestedGroups": false,
        "Left": 16819.659704747075,
        "Top": -1054.2022153228347,
        "Width": 756.88599795839764,
        "Height": 312.38766117126647,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -981.20221532283472,
        "InitialHeight": 240.38766117126647,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "afbbb1e477a64f4fbbc5ee089a9897d9",
        "Title": "Separating Beams",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5c0b2fc1ac7f443aafe6b947492ddd9e",
          "a75122e8a7494db68a548f424cbeaf7d",
          "1dd8a61608a9484bbac1160e9ff87bb3",
          "dfda58298b4b479192bff6dfbc71f551",
          "43330608426f474295dd0f33fc942d74",
          "1270f1c832584a8583b62f469ef8c6fa",
          "9b3b342ae8c0498cbfe33c83df210619",
          "38269870dc8a48ae9d2b222c201ff72f",
          "13e2d6cea2ea4ab0a4e7aaa47c68be73",
          "462aab1014414bbfa0de54e7f568cd3f",
          "a09ad44a084a4f0898c699f6a0842261",
          "8587ae897f3447c3bf7c1217c20910df",
          "f26a71fdbc2c43acbc0b65de38003449",
          "f492ab939c984060888029ef93c5eb54",
          "9a52fed13c1d448caee74b49a7690b44",
          "78ccc0cf37e04e95916051fc5b799812",
          "61b05571a2c940da911a21618b2edff2"
        ],
        "HasNestedGroups": false,
        "Left": 17798.294364302637,
        "Top": -1529.9583953527476,
        "Width": 3833.7479282893146,
        "Height": 845.90412179806833,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -1456.9583953527476,
        "InitialHeight": 773.90412179806833,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "af3601c9452b4078b3faf9bbd870eff8",
        "Title": "Beam Justification",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d61b8df70a1b4eaa9162c050b6820f9a",
          "132bed7f8afd4a62a731dee1fb9c4d71",
          "e10f4e2c242e48bcbb24cb8fee815328",
          "7733e10fa22f48d1a2b0b5f404a33ec0",
          "3dde450ce41b428a9468c1cc612e06ed",
          "f892884bcae441ec8294fcc896c907e5"
        ],
        "HasNestedGroups": false,
        "Left": 33992.75966030742,
        "Top": -656.977187251419,
        "Width": 2149.06797149621,
        "Height": 373.45928498129354,
        "FontSize": 36.0,
        "GroupStyleId": "bc688959-ce34-4bf5-90f8-6ddd23f80989",
        "InitialTop": -583.977187251419,
        "InitialHeight": 301.45928498129354,
        "TextblockHeight": 63.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "e82f4aa54a4349288e45d07663f1456c",
        "Title": "Grouping Start PNT by Y axis and droping 1st start point in gp",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3d365cf8d00b40e8aaef73e96cc19ec3",
          "8e5b053b450a423e8c082bcd43d90d75",
          "6119ea7d8afc4d2aa871228c1bdd0102",
          "82df5db45023429198fee2835aaa0a8a"
        ],
        "HasNestedGroups": false,
        "Left": 21833.348175600415,
        "Top": -2369.94257529168,
        "Width": 1258.0280385363876,
        "Height": 292.54417745395222,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -2296.94257529168,
        "InitialHeight": 210.54417745395222,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "bcc195aeafcc4c0f859c27dc8a8fba5a",
        "Title": "Grouping End point by Y axis and droping last endpoint in gp",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7771d0ff297c4775a5c3e75dfb1ed67c",
          "ffcb65bebe8f481bb0277062ce3855ff",
          "d62823fa635a48d7ba9590bc052995b5"
        ],
        "HasNestedGroups": false,
        "Left": 21844.436028491622,
        "Top": -1960.6127334178941,
        "Width": 1265.0027906038667,
        "Height": 327.51682771837955,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -1887.6127334178941,
        "InitialHeight": 196.64035304183767,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4853b43d54a54cc6bf1e241fe2f095e9",
        "Title": "Grouping Start point coordinate by Y axis and droping the 1st start point",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e8a2b9316adc4564bc2e8aa237d2bec5",
          "33bf80b320424f7197662eed97f893d4",
          "4a0a66e0fc134870932862bddb383249",
          "277a5e6037a94e5da73d4b51a73c8fc9"
        ],
        "HasNestedGroups": false,
        "Left": 22039.296103395482,
        "Top": -1335.7253488816134,
        "Width": 1187.2519845089555,
        "Height": 430.65428769977893,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -1262.7253488816134,
        "InitialHeight": 348.65428769977893,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "27f7925596974423be4bae4da53cb9b5",
        "Title": "Gping End point coordinate by Y axis and droping last end point in gp",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2cd212fd58aa4cc988605fbe6f480010",
          "bc2a51ddfe4649a38fb755a45226b55a",
          "3b43fafa4e764bbbaebe7b5b84f83d2a"
        ],
        "HasNestedGroups": false,
        "Left": 22024.99616422621,
        "Top": -835.93107652492017,
        "Width": 1241.0018528603432,
        "Height": 252.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -762.93107652492017,
        "InitialHeight": 176.60683086978725,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "30e80089cdd747008633c10e7298c448",
        "Title": "Joining Point to form curve",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f8d4892509e348db8c912b64535791d1",
          "ea7465edd6394e55a59576391ae00c55"
        ],
        "HasNestedGroups": false,
        "Left": 32285.602131379725,
        "Top": -774.56455387706887,
        "Width": 304.65984044279321,
        "Height": 500.78414711829714,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -649.56455387706887,
        "InitialHeight": 346.78414711829714,
        "TextblockHeight": 115.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "8b283e96796144238f635a6a4ef286df",
        "Title": "Grouping Start PNT by X axis and droping 1st start point in gp",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "955685b1c73542bbb62a84c879c42264",
          "9d0b2807ed6546e88a058bf5ad9652e2",
          "258c70d6762149aab9918c2bc410f00e",
          "fb67ac6e4f30448d9df41f79f19422dc"
        ],
        "HasNestedGroups": false,
        "Left": 22301.8458711141,
        "Top": 549.14384650049885,
        "Width": 1300.9919469737142,
        "Height": 372.47485114562562,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 622.14384650049885,
        "InitialHeight": 290.47485114562562,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "83a7af1f93324d4e8391764419939f4f",
        "Title": "Grouping End point by X axis and droping last endpoint in gp",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ba3c3fe1c9ee4731aad92cbf3720ceb0",
          "ea9923ed124742efa5eaaa050e889c12",
          "45927e636c6d49c59381fa26cb8696ae"
        ],
        "HasNestedGroups": false,
        "Left": 22325.575848989633,
        "Top": 1025.7200901924043,
        "Width": 1265.0027906038995,
        "Height": 327.51682771838023,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1098.7200901924043,
        "InitialHeight": 196.64035304184017,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "143c0d0f3f13407eaf441403c41e556c",
        "Title": "Grouping Start point coordinate by X axis and droping the 1st start point",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "cbfb49c9c8444dfba0be39864677d1e8",
          "8b4c219af1e44dc3bf88bd0919d116f8",
          "9e9da896dcd34159a82955c078573d0b",
          "2c1d079499674cf788bef43516c9cc8b"
        ],
        "HasNestedGroups": false,
        "Left": 22216.11818205595,
        "Top": 1636.5562105164734,
        "Width": 1188.729751485429,
        "Height": 440.00717037401796,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1709.5562105164734,
        "InitialHeight": 358.00717037401796,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "342d64bbb79142a6a0768f867b854603",
        "Title": "Creating Beam Types",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1dffe4ba2f774f959fc5b5536884128e",
          "f6ff184c5c8647de925e6ae840aa8756",
          "bfb0da0142014eff816702aa6b2e9cc6",
          "3b554f4527364997bff8be5b5a5325a1"
        ],
        "HasNestedGroups": false,
        "Left": 30623.539412471375,
        "Top": -830.06499185290227,
        "Width": 884.31439831209718,
        "Height": 426.41267070373942,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -757.06499185290227,
        "InitialHeight": 354.41267070373942,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "94b2a688ee9f4cdabf8184daf6255404",
        "Title": "Sorting by Point Y",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3377748acf3344ec949a7bac46e8c3ab",
          "7fdc9657dd3e4ceda82a8e4d1d22c80a",
          "b6402103f9804aa88fe7b03c920dd353"
        ],
        "HasNestedGroups": false,
        "Left": 16662.557758378334,
        "Top": 1341.6301796333835,
        "Width": 756.88599795840128,
        "Height": 312.3876611712667,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1414.6301796333835,
        "InitialHeight": 240.3876611712667,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "447670abb67244238b92c51e58c5e4a0",
        "Title": "Gping End point coordinate by X axis and droping last end point in gp",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9d376e7f302648038b17ffbdd606866e",
          "260377b31f6340188f3481f35b87a25f",
          "cc3a3bf32d37464ea057a7138a7cb2d0"
        ],
        "HasNestedGroups": false,
        "Left": 22206.155976189792,
        "Top": 2158.9425123462943,
        "Width": 1225.1223944117992,
        "Height": 276.33521857764526,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 2231.9425123462943,
        "InitialHeight": 179.32767046277195,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5b5dddf800014ce8a6d2b07098db59a7",
        "Title": "Separating Beams",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8fc061da432b4edeaea03d029bfc287e",
          "b2e7f4999f5647ea8a28fb63d6cc86ec",
          "5e57eb7a1dbd4a6dbebb3a8793e43b30",
          "df0ea2edf20d4049b2dcd8b4ece225ff",
          "71f64f84493748c291b9d9c9184bc88e",
          "52d862e55b66414093744819f3b2e94b",
          "9c9fed628a264950a4e989807b7dddb7",
          "13c852a448744cbbae53de04e2c0cfc0",
          "a5b13eb72add49f18701e9d93cdbb9c7",
          "8fc72b48b20f42cabb5267ffe3c0e2f3",
          "21df62382434492396e6315cbb534f74",
          "05c39a4068f5427c9c837c0dce7ea5cb",
          "743795506b4944fb9954ef1f9791f055",
          "bcf6e5e6533e41b296400ec07b4cc6c4",
          "580a9200bfc84efcbe2ca4c6a924d527",
          "12651921a1fd4f9cb3e7a9a87cf7472a",
          "4c79b141dca74c54aa98c30486476108"
        ],
        "HasNestedGroups": false,
        "Left": 17714.947985285369,
        "Top": 881.21549709835392,
        "Width": 3834.2974909400473,
        "Height": 796.15706974701823,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 954.21549709835392,
        "InitialHeight": 709.962242307561,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "14241d52f60d4187a70a13d0505186e8",
        "Title": "Checking where there are breaks / gaps in beams & If 1st & last beam have continuity",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0c5a4296b7eb41a0a11f1b1577248655",
          "69ce41c4c6124c489d08f37aa3e223c0",
          "a4941550c9b747b7bc90a58a95f7de09",
          "671e64019fd4495db723b53855d8fd86",
          "4da5f2570aa648e4ad3bd7b9b990a182",
          "baf7003a0c4b4b34bd567c7cf316267b",
          "a6f97b5259ce47c082b8404db1c21df1",
          "c7d7982330114a80a9c42c893c4958e0",
          "2344c93a91f64035bb13c73ce8001cc5",
          "3df80df1914a426a81487f65a0216865",
          "5cee199391134969952842ec46146576",
          "1a0b7cccaaa046abb7599bf935ca9e17",
          "1ab5a62649e247b0bead12a1f399c8c3",
          "3c8b7b197dd749a2acc847a0bfdea3ad",
          "83a669dff3fa4124ba03f6fb70f98887"
        ],
        "HasNestedGroups": false,
        "Left": 24863.320783739924,
        "Top": -2805.7954940053469,
        "Width": 2262.2083403852666,
        "Height": 663.73813411449737,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -2732.7954940053469,
        "InitialHeight": 563.7230163410386,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3f5a0fe662864afea20b306b978797a6",
        "Title": "Checking if the start and end beam have continuity",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "fcb784fff2f8439cb4242f5717f2d3ff",
          "ef6003646ca5474fb173bac84700ee56",
          "7cdb23e6b03b40bf9695f783decf07cc",
          "5dd6414184f54d57a877cf84cf78fcee",
          "6d163d7597db4480a9dab4310161e311",
          "94574d8b87c44b1198cca0968d60e5bd",
          "a7225f76e6d54419b32aeb5ecb861877",
          "05584738260840ad93318c44d01c6bb9",
          "7e9c12e885dc426089672ead4eedee50"
        ],
        "HasNestedGroups": false,
        "Left": 25593.106923971216,
        "Top": -1890.8746688297069,
        "Width": 1467.6525019138389,
        "Height": 729.43679545379791,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -1817.8746688297069,
        "InitialHeight": 592.43679545379791,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "34c2619647d343ad9b892fba4a6052af",
        "Title": "Grouping Beams based on space / gaps inbtween (maximum distance inbetween = 100)",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "28a31595613f409bbe5b064b92cf746e",
          "5fb05c3317e445f1a2acb241e6ea07aa",
          "c4f6e9004b224cbbaa36923ba45587fa",
          "ce68a4edf80f42b183199144707f15a6",
          "03a551e4cd8e4b629e22baad683772cf",
          "ff179e0295e746e7aa66a11a844911d8",
          "8f82e2eceab5403b8742a1402e08ca02",
          "ca5c2a6ec4f94b61bb021f2a1ebf9a1d",
          "db9b5188bcc7467d9bc07f3cf9f5da8f",
          "c4b740a7a28d493dad996d136bf9f0dc",
          "a5a4547403854b73b0ed2a2001c3a4ed",
          "7464fc33c1f446ea88740cba9914b9ac",
          "0a1d7edc34ec4464b1b7aad4d481c8aa",
          "ee80460b9f4d441298a8300693c060d9",
          "45f1e44368b5465da77df6cd5327bc99"
        ],
        "HasNestedGroups": false,
        "Left": 27666.4840504053,
        "Top": -2896.795274040282,
        "Width": 3600.3952822578758,
        "Height": 485.82750000000033,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -2823.795274040282,
        "InitialHeight": 413.82750000000033,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "29d8a0960cf0439f9ad740210841916f",
        "Title": "Grouping Beams based on space / gaps inbtween (maximum distance inbetween = 100)",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3c8632e0788641de8699c4c8570adb20",
          "0d5c6f0cc63d48c4ad04b50cccc485e8",
          "1a38ffb167e84e9cad6062df417c3e95",
          "6f2b7adf87a843a19577c9b9fcc5f4ea",
          "6498f9d1a0194ee79db72f848ae8dc99",
          "46abd7a518104942ae22fbefc1b4cc70",
          "1f145e98fedc487ab1ee130f3b1523e8",
          "c7c12a9fd78b4e5ba46f991055c962a7",
          "c9e04f1a8e8f4fd38568a60b4614b742",
          "3736caddd19f435ea3dbb0b4a2d50b92",
          "28647ec02981497ca1e22afaadb57a3f",
          "934b27a28c9d4b5790a02eac38055fae",
          "95829e84b0624fccb10dfd2c742a4bed",
          "fc4b28e396104629b4463d6e4aeaa952",
          "1b8028210b5f42bfa5ceb53c6f8d478f"
        ],
        "HasNestedGroups": false,
        "Left": 27682.693880935905,
        "Top": -1706.0247584693666,
        "Width": 3814.8162651552411,
        "Height": 503.76660681797421,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -1633.0247584693666,
        "InitialHeight": 431.76660681797421,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7d5f387af59b4313a8042214c8697129",
        "Title": "Checking where there are breaks / gaps in beams & If 1st & last beam have continuity",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "588180b0b14d47b9ab0ffccad3965395",
          "708efaa882f843c697065f3662ed9895",
          "018b75d06bc4490e81b35229d19bb420",
          "6833281a71d342d193403e98e1ed0717",
          "de90bce3606d4c85b726f5330d2f29b3",
          "77801beba0c145d8961dad0ad8528020",
          "02f2bf4b58134ded9cc0106d6dcadb85",
          "047634b336eb4a0196728957e916bb64",
          "7d46a9cdb7634b9ba40714332b922d91",
          "500bfbadaddd44bc9c819a27c5b77b1d",
          "dc9f54506fc34549bfd4b2e26960e3ad",
          "b450efa4d8f74d0a88a69db37eaa3fe7",
          "ebebd761c513454494287c8b75ecbbde",
          "e65a14066d544f189e16118b3de36927",
          "f88cfb3360374a86b782ca3d4ac7c529"
        ],
        "HasNestedGroups": false,
        "Left": 24910.481275516824,
        "Top": 235.63248708364335,
        "Width": 2262.2083403851975,
        "Height": 663.7381341145001,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 308.63248708364335,
        "InitialHeight": 563.72301634104042,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c477da53f5904f60bc9a13ba9497f76b",
        "Title": "Checking if the start and end beam have continuity",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "cdcd305f33e242a792e0893e07b6d542",
          "e967bf3868aa4f9c86cc1465c593b85b",
          "895ce09d7e82476eb80a4b3a8c1c59b3",
          "e3813b1343534c79bbbb4613468062a4",
          "de6dd42634b54bbf9c0e7149f65a2619",
          "7e8d5c7353c247c5a97c88b5a69619aa",
          "f01a2dba7ee5434ebe9deda1c8012888",
          "1d3bef95ce054772a5948c96de0f0f52",
          "616522bdf4244469a0b9bf54fcd02fa4"
        ],
        "HasNestedGroups": false,
        "Left": 25505.643172051015,
        "Top": 1318.1497410708616,
        "Width": 1458.5469676660214,
        "Height": 729.43679545379973,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1391.1497410708616,
        "InitialHeight": 592.43679545379973,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4a1707ce1a144d6eaa42cdb00155dac4",
        "Title": "Grouping Beams based on space / gaps inbtween (maximum distance inbetween = 100)",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c43e28f24d764ec5a912c8d4fe691220",
          "c6d155830bf74b9a89338b833490233e",
          "a6e68634edd64caba6270057e2c67b34",
          "cecd0fbbba6646c8af5d68296b65877f",
          "8e71686f85b744d88f36d7a440d916e3",
          "2c3c035998c3412092b7433abe7a28c4",
          "9346cf84c3a34146af70ebf67f4cff16",
          "79396dec98d14fddb25f54cd5326c927",
          "d1e1fd8924794f9e8b1103357994a56b",
          "ef4a2c35f00041eba7b8bfd4a84c25b8",
          "c263af0d7e74471993e6b17c975a565b",
          "0609224b9cdf4d4aa0a15724654dda42",
          "9a8df55783f940afbc8481c7ac7049c1",
          "3e151f2b7035432e9a819d73f29e7e96",
          "6c7eb0db6f3b470a9cc9b08be2d592ea"
        ],
        "HasNestedGroups": false,
        "Left": 27844.045407579648,
        "Top": 1379.750163959181,
        "Width": 3544.1033683314708,
        "Height": 503.76660681797966,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1452.750163959181,
        "InitialHeight": 431.76660681797966,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "cd8bb8088b12470dbc93e61284c471f9",
        "Title": "Grouping Beams based on space / gaps inbtween (maximum distance inbetween = 100)",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a6189be0bed84627b1aee52b2df0ab47",
          "e59a1f9dddd84b44b60b40a778ba03f2",
          "7822e62e6c2f448c8b3c32794054f73a",
          "7499c48eacbd41ce937611e7792137fe",
          "3b6e5811593042f4b3ed1ba73d7cdcc5",
          "b934103cfcf34b119efdd5ea5e92c02e",
          "1b406e2430ca4c8bb11fa5125ec408be",
          "7401a824e9204353b6e2a23161e0b3fc",
          "cf67494e7e6d46179b4942b1b2dcfec3",
          "e78dfaa13aab470685a51cc8218148c5",
          "fd846cd0bb134667a32b48da686b212a",
          "b7d08c432ce94f138db4f547e744e619",
          "d701902ad3d34e6089f933b132e71beb",
          "c7967f0d819946e6a9f1613a3f02ec6e",
          "387e119ce196487f851cba7ec8047880"
        ],
        "HasNestedGroups": false,
        "Left": 27973.175105410111,
        "Top": 45.498856413113572,
        "Width": 3431.0827696237538,
        "Height": 485.82750000000942,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 118.49885641311357,
        "InitialHeight": 413.82750000000942,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c5bdc560d4d1427b8876d87fe3390218",
        "Title": "Deleting Beams",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f407533fa3e94fcabd86b0fa1d4ff20f",
          "3f8c231c887647a2b1f4ee60666824f1",
          "212ba56413694c28a7bd259e61593350"
        ],
        "HasNestedGroups": false,
        "Left": 35708.913140323661,
        "Top": -960.85525211554079,
        "Width": 794.34002506170509,
        "Height": 256.99982716175,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -887.85525211554079,
        "InitialHeight": 206.35170454481545,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "eaffb434c30b462ab14d2feec857d6df",
        "Title": "Creating Beam Types",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "332b4702843a4d57a821f3c1dc8cf384",
          "2919db1f12754781866ad06dfa33876a",
          "d02ee4a57d69474986af13a45c6c25ed",
          "18ffb23aaf9c46e7af384bc0711a2815"
        ],
        "HasNestedGroups": false,
        "Left": 30770.026724108116,
        "Top": -2273.553203954481,
        "Width": 875.59326350190167,
        "Height": 417.95734474192386,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -2200.553203954481,
        "InitialHeight": 345.95734474192386,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "7c15e5485d1b4b78a857b7f68ea9ca6c",
        "Title": "Creating the Beam",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "fc1208176e5148758484f03729e5e810",
          "0ad43ff10a4849a1ad2fdc5daf6cf50f",
          "9d94042232444f65b4eb9e95079ebe71",
          "833b510c9c854fd58f54894b9bbe2acd"
        ],
        "HasNestedGroups": false,
        "Left": 32755.374373134073,
        "Top": -781.64949053659643,
        "Width": 989.83797781629255,
        "Height": 483.61460736927233,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -708.64949053659643,
        "InitialHeight": 346.61460736927233,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "550f8fd5efa948f1a045398f3ea3f173",
        "Title": "Grouping Beam to Delete",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "25f99d331402459cb1bac4af70addc2b",
          "77965262c52943dd8b83d151675010de",
          "915e3c4785e144b5887c8e310143609a",
          "24b65c93e39f42f7a0256246411aaa3f",
          "03ae599bc43046f386375f79a649b180",
          "2a6af5755da9484cad6ec6b4dbf9215b",
          "cb69882315134203b8a21799b02bf2a5",
          "0363c538c30a48e5ae00c0fa78ce114a"
        ],
        "HasNestedGroups": false,
        "Left": 32448.569777693432,
        "Top": -2026.1975182893896,
        "Width": 1304.0,
        "Height": 769.45493437016808,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -1953.1975182893896,
        "InitialHeight": 667.45493437016808,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "09ed688cdb5b41d4b912e098ab98d6ed",
        "Title": "Grouping Beam to Delete",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "036e2395986e4384967ad006ec433e4d",
          "9409a21225004936b298c7e9f0413800",
          "d32ef603b8ab481d871f0233ecd3f967",
          "f135c86d98f146919349b1cdafcabd44",
          "5d6228bdc7794ca689061c925ae7601f",
          "cdc8d92610384dc4968c635bc3f0df70"
        ],
        "HasNestedGroups": false,
        "Left": 32492.992870172875,
        "Top": 207.19202996933853,
        "Width": 1211.718095576045,
        "Height": 538.5523422417632,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 280.19202996933853,
        "InitialHeight": 453.85603957884729,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      }
    ],
    "X": -23304.612292475987,
    "Y": 976.55640090189343,
    "Zoom": 0.65872036987776583
  }
}